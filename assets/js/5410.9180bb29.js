"use strict";(self.webpackChunkregal_ui_docs=self.webpackChunkregal_ui_docs||[]).push([[5410],{37981:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  T: () => (/* binding */ Graph)\n});\n\n// EXTERNAL MODULE: ./node_modules/lodash-es/constant.js\nvar constant = __webpack_require__(39142);\n// EXTERNAL MODULE: ./node_modules/lodash-es/isFunction.js\nvar isFunction = __webpack_require__(89610);\n// EXTERNAL MODULE: ./node_modules/lodash-es/keys.js\nvar keys = __webpack_require__(27422);\n// EXTERNAL MODULE: ./node_modules/lodash-es/filter.js\nvar filter = __webpack_require__(94092);\n// EXTERNAL MODULE: ./node_modules/lodash-es/isEmpty.js\nvar isEmpty = __webpack_require__(66401);\n// EXTERNAL MODULE: ./node_modules/lodash-es/forEach.js\nvar forEach = __webpack_require__(8058);\n// EXTERNAL MODULE: ./node_modules/lodash-es/isUndefined.js\nvar isUndefined = __webpack_require__(69592);\n// EXTERNAL MODULE: ./node_modules/lodash-es/_baseFlatten.js + 1 modules\nvar _baseFlatten = __webpack_require__(13588);\n// EXTERNAL MODULE: ./node_modules/lodash-es/_baseRest.js\nvar _baseRest = __webpack_require__(24326);\n// EXTERNAL MODULE: ./node_modules/lodash-es/_baseUniq.js + 1 modules\nvar _baseUniq = __webpack_require__(99902);\n// EXTERNAL MODULE: ./node_modules/lodash-es/isArrayLikeObject.js\nvar isArrayLikeObject = __webpack_require__(53533);\n;// ./node_modules/lodash-es/union.js\n\n\n\n\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = (0,_baseRest/* default */.A)(function(arrays) {\n  return (0,_baseUniq/* default */.A)((0,_baseFlatten/* default */.A)(arrays, 1, isArrayLikeObject/* default */.A, true));\n});\n\n/* harmony default export */ const lodash_es_union = (union);\n\n// EXTERNAL MODULE: ./node_modules/lodash-es/values.js + 1 modules\nvar values = __webpack_require__(38207);\n// EXTERNAL MODULE: ./node_modules/lodash-es/reduce.js + 2 modules\nvar reduce = __webpack_require__(89463);\n;// ./node_modules/dagre-d3-es/src/graphlib/graph.js\n\n\nvar DEFAULT_EDGE_NAME = '\\x00';\nvar GRAPH_NODE = '\\x00';\nvar EDGE_KEY_DELIM = '\\x01';\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\nclass Graph {\n  constructor(opts = {}) {\n    this._isDirected = Object.prototype.hasOwnProperty.call(opts, 'directed')\n      ? opts.directed\n      : true;\n    this._isMultigraph = Object.prototype.hasOwnProperty.call(opts, 'multigraph')\n      ? opts.multigraph\n      : false;\n    this._isCompound = Object.prototype.hasOwnProperty.call(opts, 'compound')\n      ? opts.compound\n      : false;\n\n    // Label for the graph itself\n    this._label = undefined;\n\n    // Defaults to be set when creating a new node\n    this._defaultNodeLabelFn = constant/* default */.A(undefined);\n\n    // Defaults to be set when creating a new edge\n    this._defaultEdgeLabelFn = constant/* default */.A(undefined);\n\n    // v -> label\n    this._nodes = {};\n\n    if (this._isCompound) {\n      // v -> parent\n      this._parent = {};\n\n      // v -> children\n      this._children = {};\n      this._children[GRAPH_NODE] = {};\n    }\n\n    // v -> edgeObj\n    this._in = {};\n\n    // u -> v -> Number\n    this._preds = {};\n\n    // v -> edgeObj\n    this._out = {};\n\n    // v -> w -> Number\n    this._sucs = {};\n\n    // e -> edgeObj\n    this._edgeObjs = {};\n\n    // e -> label\n    this._edgeLabels = {};\n  }\n  /* === Graph functions ========= */\n  isDirected() {\n    return this._isDirected;\n  }\n  isMultigraph() {\n    return this._isMultigraph;\n  }\n  isCompound() {\n    return this._isCompound;\n  }\n  setGraph(label) {\n    this._label = label;\n    return this;\n  }\n  graph() {\n    return this._label;\n  }\n  /* === Node functions ========== */\n  setDefaultNodeLabel(newDefault) {\n    if (!isFunction/* default */.A(newDefault)) {\n      newDefault = constant/* default */.A(newDefault);\n    }\n    this._defaultNodeLabelFn = newDefault;\n    return this;\n  }\n  nodeCount() {\n    return this._nodeCount;\n  }\n  nodes() {\n    return keys/* default */.A(this._nodes);\n  }\n  sources() {\n    var self = this;\n    return filter/* default */.A(this.nodes(), function (v) {\n      return isEmpty/* default */.A(self._in[v]);\n    });\n  }\n  sinks() {\n    var self = this;\n    return filter/* default */.A(this.nodes(), function (v) {\n      return isEmpty/* default */.A(self._out[v]);\n    });\n  }\n  setNodes(vs, value) {\n    var args = arguments;\n    var self = this;\n    forEach/* default */.A(vs, function (v) {\n      if (args.length > 1) {\n        self.setNode(v, value);\n      } else {\n        self.setNode(v);\n      }\n    });\n    return this;\n  }\n  setNode(v, value) {\n    if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n      if (arguments.length > 1) {\n        this._nodes[v] = value;\n      }\n      return this;\n    }\n\n    // @ts-expect-error\n    this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n    if (this._isCompound) {\n      this._parent[v] = GRAPH_NODE;\n      this._children[v] = {};\n      this._children[GRAPH_NODE][v] = true;\n    }\n    this._in[v] = {};\n    this._preds[v] = {};\n    this._out[v] = {};\n    this._sucs[v] = {};\n    ++this._nodeCount;\n    return this;\n  }\n  node(v) {\n    return this._nodes[v];\n  }\n  hasNode(v) {\n    return Object.prototype.hasOwnProperty.call(this._nodes, v);\n  }\n  removeNode(v) {\n    if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n      var removeEdge = (e) => this.removeEdge(this._edgeObjs[e]);\n      delete this._nodes[v];\n      if (this._isCompound) {\n        this._removeFromParentsChildList(v);\n        delete this._parent[v];\n        forEach/* default */.A(this.children(v), (child) => {\n          this.setParent(child);\n        });\n        delete this._children[v];\n      }\n      forEach/* default */.A(keys/* default */.A(this._in[v]), removeEdge);\n      delete this._in[v];\n      delete this._preds[v];\n      forEach/* default */.A(keys/* default */.A(this._out[v]), removeEdge);\n      delete this._out[v];\n      delete this._sucs[v];\n      --this._nodeCount;\n    }\n    return this;\n  }\n  setParent(v, parent) {\n    if (!this._isCompound) {\n      throw new Error('Cannot set parent in a non-compound graph');\n    }\n\n    if (isUndefined/* default */.A(parent)) {\n      parent = GRAPH_NODE;\n    } else {\n      // Coerce parent to string\n      parent += '';\n      for (var ancestor = parent; !isUndefined/* default */.A(ancestor); ancestor = this.parent(ancestor)) {\n        if (ancestor === v) {\n          throw new Error('Setting ' + parent + ' as parent of ' + v + ' would create a cycle');\n        }\n      }\n\n      this.setNode(parent);\n    }\n\n    this.setNode(v);\n    this._removeFromParentsChildList(v);\n    this._parent[v] = parent;\n    this._children[parent][v] = true;\n    return this;\n  }\n  _removeFromParentsChildList(v) {\n    delete this._children[this._parent[v]][v];\n  }\n  parent(v) {\n    if (this._isCompound) {\n      var parent = this._parent[v];\n      if (parent !== GRAPH_NODE) {\n        return parent;\n      }\n    }\n  }\n  children(v) {\n    if (isUndefined/* default */.A(v)) {\n      v = GRAPH_NODE;\n    }\n\n    if (this._isCompound) {\n      var children = this._children[v];\n      if (children) {\n        return keys/* default */.A(children);\n      }\n    } else if (v === GRAPH_NODE) {\n      return this.nodes();\n    } else if (this.hasNode(v)) {\n      return [];\n    }\n  }\n  predecessors(v) {\n    var predsV = this._preds[v];\n    if (predsV) {\n      return keys/* default */.A(predsV);\n    }\n  }\n  successors(v) {\n    var sucsV = this._sucs[v];\n    if (sucsV) {\n      return keys/* default */.A(sucsV);\n    }\n  }\n  neighbors(v) {\n    var preds = this.predecessors(v);\n    if (preds) {\n      return lodash_es_union(preds, this.successors(v));\n    }\n  }\n  isLeaf(v) {\n    var neighbors;\n    if (this.isDirected()) {\n      neighbors = this.successors(v);\n    } else {\n      neighbors = this.neighbors(v);\n    }\n    return neighbors.length === 0;\n  }\n  filterNodes(filter) {\n    // @ts-expect-error\n    var copy = new this.constructor({\n      directed: this._isDirected,\n      multigraph: this._isMultigraph,\n      compound: this._isCompound,\n    });\n\n    copy.setGraph(this.graph());\n\n    var self = this;\n    forEach/* default */.A(this._nodes, function (value, v) {\n      if (filter(v)) {\n        copy.setNode(v, value);\n      }\n    });\n\n    forEach/* default */.A(this._edgeObjs, function (e) {\n      // @ts-expect-error\n      if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n        copy.setEdge(e, self.edge(e));\n      }\n    });\n\n    var parents = {};\n    function findParent(v) {\n      var parent = self.parent(v);\n      if (parent === undefined || copy.hasNode(parent)) {\n        parents[v] = parent;\n        return parent;\n      } else if (parent in parents) {\n        return parents[parent];\n      } else {\n        return findParent(parent);\n      }\n    }\n\n    if (this._isCompound) {\n      forEach/* default */.A(copy.nodes(), function (v) {\n        copy.setParent(v, findParent(v));\n      });\n    }\n\n    return copy;\n  }\n  /* === Edge functions ========== */\n  setDefaultEdgeLabel(newDefault) {\n    if (!isFunction/* default */.A(newDefault)) {\n      newDefault = constant/* default */.A(newDefault);\n    }\n    this._defaultEdgeLabelFn = newDefault;\n    return this;\n  }\n  edgeCount() {\n    return this._edgeCount;\n  }\n  edges() {\n    return values/* default */.A(this._edgeObjs);\n  }\n  setPath(vs, value) {\n    var self = this;\n    var args = arguments;\n    reduce/* default */.A(vs, function (v, w) {\n      if (args.length > 1) {\n        self.setEdge(v, w, value);\n      } else {\n        self.setEdge(v, w);\n      }\n      return w;\n    });\n    return this;\n  }\n  /*\n   * setEdge(v, w, [value, [name]])\n   * setEdge({ v, w, [name] }, [value])\n   */\n  setEdge() {\n    var v, w, name, value;\n    var valueSpecified = false;\n    var arg0 = arguments[0];\n\n    if (typeof arg0 === 'object' && arg0 !== null && 'v' in arg0) {\n      v = arg0.v;\n      w = arg0.w;\n      name = arg0.name;\n      if (arguments.length === 2) {\n        value = arguments[1];\n        valueSpecified = true;\n      }\n    } else {\n      v = arg0;\n      w = arguments[1];\n      name = arguments[3];\n      if (arguments.length > 2) {\n        value = arguments[2];\n        valueSpecified = true;\n      }\n    }\n\n    v = '' + v;\n    w = '' + w;\n    if (!isUndefined/* default */.A(name)) {\n      name = '' + name;\n    }\n\n    var e = edgeArgsToId(this._isDirected, v, w, name);\n    if (Object.prototype.hasOwnProperty.call(this._edgeLabels, e)) {\n      if (valueSpecified) {\n        this._edgeLabels[e] = value;\n      }\n      return this;\n    }\n\n    if (!isUndefined/* default */.A(name) && !this._isMultigraph) {\n      throw new Error('Cannot set a named edge when isMultigraph = false');\n    }\n\n    // It didn't exist, so we need to create it.\n    // First ensure the nodes exist.\n    this.setNode(v);\n    this.setNode(w);\n\n    // @ts-expect-error\n    this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n    var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n    // Ensure we add undirected edges in a consistent way.\n    v = edgeObj.v;\n    w = edgeObj.w;\n\n    Object.freeze(edgeObj);\n    this._edgeObjs[e] = edgeObj;\n    incrementOrInitEntry(this._preds[w], v);\n    incrementOrInitEntry(this._sucs[v], w);\n    this._in[w][e] = edgeObj;\n    this._out[v][e] = edgeObj;\n    this._edgeCount++;\n    return this;\n  }\n  edge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return this._edgeLabels[e];\n  }\n  hasEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return Object.prototype.hasOwnProperty.call(this._edgeLabels, e);\n  }\n  removeEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    var edge = this._edgeObjs[e];\n    if (edge) {\n      v = edge.v;\n      w = edge.w;\n      delete this._edgeLabels[e];\n      delete this._edgeObjs[e];\n      decrementOrRemoveEntry(this._preds[w], v);\n      decrementOrRemoveEntry(this._sucs[v], w);\n      delete this._in[w][e];\n      delete this._out[v][e];\n      this._edgeCount--;\n    }\n    return this;\n  }\n  inEdges(v, u) {\n    var inV = this._in[v];\n    if (inV) {\n      var edges = values/* default */.A(inV);\n      if (!u) {\n        return edges;\n      }\n      return filter/* default */.A(edges, function (edge) {\n        return edge.v === u;\n      });\n    }\n  }\n  outEdges(v, w) {\n    var outV = this._out[v];\n    if (outV) {\n      var edges = values/* default */.A(outV);\n      if (!w) {\n        return edges;\n      }\n      return filter/* default */.A(edges, function (edge) {\n        return edge.w === w;\n      });\n    }\n  }\n  nodeEdges(v, w) {\n    var inEdges = this.inEdges(v, w);\n    if (inEdges) {\n      return inEdges.concat(this.outEdges(v, w));\n    }\n  }\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) {\n    delete map[k];\n  }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM + (isUndefined/* default */.A(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj = { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///37981\n")},697:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   T: () => (/* reexport safe */ _graph_js__WEBPACK_IMPORTED_MODULE_0__.T)\n/* harmony export */ });\n/* unused harmony export version */\n/* harmony import */ var _graph_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37981);\n// Includes only the \"core\" of graphlib\n\n\n\nconst version = '2.1.9-pre';\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjk3LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7O0FBRW1DOztBQUVuQzs7QUFFMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWdhbC11aS1kb2NzLy4vbm9kZV9tb2R1bGVzL2RhZ3JlLWQzLWVzL3NyYy9ncmFwaGxpYi9pbmRleC5qcz9iMTBjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEluY2x1ZGVzIG9ubHkgdGhlIFwiY29yZVwiIG9mIGdyYXBobGliXG5cbmltcG9ydCB7IEdyYXBoIH0gZnJvbSAnLi9ncmFwaC5qcyc7XG5cbmNvbnN0IHZlcnNpb24gPSAnMi4xLjktcHJlJztcblxuZXhwb3J0IHsgR3JhcGgsIHZlcnNpb24gfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///697\n")},75937:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(72453);\n/* harmony import */ var _color_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74886);\n/* IMPORT */\n\n\n/* MAIN */\nconst channel = (color, channel) => {\n    return _utils_index_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A.lang.round(_color_index_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A.parse(color)[channel]);\n};\n/* EXPORT */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (channel);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzU5MzcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNrQztBQUNJO0FBQ3RDO0FBQ0E7QUFDQSxXQUFXLGdFQUFDLFlBQVksZ0VBQUs7QUFDN0I7QUFDQTtBQUNBLGlFQUFlLE9BQU8sRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlZ2FsLXVpLWRvY3MvLi9ub2RlX21vZHVsZXMva2hyb21hL2Rpc3QvbWV0aG9kcy9jaGFubmVsLmpzPzZhNjAiXSwic291cmNlc0NvbnRlbnQiOlsiLyogSU1QT1JUICovXG5pbXBvcnQgXyBmcm9tICcuLi91dGlscy9pbmRleC5qcyc7XG5pbXBvcnQgQ29sb3IgZnJvbSAnLi4vY29sb3IvaW5kZXguanMnO1xuLyogTUFJTiAqL1xuY29uc3QgY2hhbm5lbCA9IChjb2xvciwgY2hhbm5lbCkgPT4ge1xuICAgIHJldHVybiBfLmxhbmcucm91bmQoQ29sb3IucGFyc2UoY29sb3IpW2NoYW5uZWxdKTtcbn07XG4vKiBFWFBPUlQgKi9cbmV4cG9ydCBkZWZhdWx0IGNoYW5uZWw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///75937\n')},50053:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _baseClone_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(68675);\n\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return (0,_baseClone_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A)(value, CLONE_SYMBOLS_FLAG);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clone);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAwNTMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUF3Qzs7QUFFeEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLEdBQUc7QUFDaEI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFFBQVEsSUFBSSxRQUFRO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsa0VBQVM7QUFDbEI7O0FBRUEsaUVBQWUsS0FBSyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVnYWwtdWktZG9jcy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvY2xvbmUuanM/YjMwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZUNsb25lIGZyb20gJy4vX2Jhc2VDbG9uZS5qcyc7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIGNsb25pbmcuICovXG52YXIgQ0xPTkVfU1lNQk9MU19GTEFHID0gNDtcblxuLyoqXG4gKiBDcmVhdGVzIGEgc2hhbGxvdyBjbG9uZSBvZiBgdmFsdWVgLlxuICpcbiAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCBpcyBsb29zZWx5IGJhc2VkIG9uIHRoZVxuICogW3N0cnVjdHVyZWQgY2xvbmUgYWxnb3JpdGhtXShodHRwczovL21kbi5pby9TdHJ1Y3R1cmVkX2Nsb25lX2FsZ29yaXRobSlcbiAqIGFuZCBzdXBwb3J0cyBjbG9uaW5nIGFycmF5cywgYXJyYXkgYnVmZmVycywgYm9vbGVhbnMsIGRhdGUgb2JqZWN0cywgbWFwcyxcbiAqIG51bWJlcnMsIGBPYmplY3RgIG9iamVjdHMsIHJlZ2V4ZXMsIHNldHMsIHN0cmluZ3MsIHN5bWJvbHMsIGFuZCB0eXBlZFxuICogYXJyYXlzLiBUaGUgb3duIGVudW1lcmFibGUgcHJvcGVydGllcyBvZiBgYXJndW1lbnRzYCBvYmplY3RzIGFyZSBjbG9uZWRcbiAqIGFzIHBsYWluIG9iamVjdHMuIEFuIGVtcHR5IG9iamVjdCBpcyByZXR1cm5lZCBmb3IgdW5jbG9uZWFibGUgdmFsdWVzIHN1Y2hcbiAqIGFzIGVycm9yIG9iamVjdHMsIGZ1bmN0aW9ucywgRE9NIG5vZGVzLCBhbmQgV2Vha01hcHMuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNsb25lLlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGNsb25lZCB2YWx1ZS5cbiAqIEBzZWUgXy5jbG9uZURlZXBcbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdHMgPSBbeyAnYSc6IDEgfSwgeyAnYic6IDIgfV07XG4gKlxuICogdmFyIHNoYWxsb3cgPSBfLmNsb25lKG9iamVjdHMpO1xuICogY29uc29sZS5sb2coc2hhbGxvd1swXSA9PT0gb2JqZWN0c1swXSk7XG4gKiAvLyA9PiB0cnVlXG4gKi9cbmZ1bmN0aW9uIGNsb25lKHZhbHVlKSB7XG4gIHJldHVybiBiYXNlQ2xvbmUodmFsdWUsIENMT05FX1NZTUJPTFNfRkxBRyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsb25lO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///50053\n")},65410:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   diagram: () => (/* binding */ diagram)\n/* harmony export */ });\n/* harmony import */ var _chunk_3JNJP5BE_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(47588);\n/* harmony import */ var _chunk_3X56UNUX_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(33115);\n/* harmony import */ var _chunk_6JOS74DS_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(10483);\n/* harmony import */ var _chunk_7DKRZKHE_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8159);\n/* harmony import */ var _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(10009);\n/* harmony import */ var lodash_es_clone_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(50053);\n/* harmony import */ var khroma__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(75937);\n/* harmony import */ var khroma__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(25582);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(20007);\n/* harmony import */ var dagre_d3_es_src_graphlib_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(697);\n\n\n\n\n\n\n// src/diagrams/block/parser/block.jison\nvar parser = function() {\n  var o = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v) ;\n    return o2;\n  }, "o"), $V0 = [1, 7], $V1 = [1, 13], $V2 = [1, 14], $V3 = [1, 15], $V4 = [1, 19], $V5 = [1, 16], $V6 = [1, 17], $V7 = [1, 18], $V8 = [8, 30], $V9 = [8, 21, 28, 29, 30, 31, 32, 40, 44, 47], $Va = [1, 23], $Vb = [1, 24], $Vc = [8, 15, 16, 21, 28, 29, 30, 31, 32, 40, 44, 47], $Vd = [8, 15, 16, 21, 27, 28, 29, 30, 31, 32, 40, 44, 47], $Ve = [1, 49];\n  var parser2 = {\n    trace: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function trace() {\n    }, "trace"),\n    yy: {},\n    symbols_: { "error": 2, "spaceLines": 3, "SPACELINE": 4, "NL": 5, "separator": 6, "SPACE": 7, "EOF": 8, "start": 9, "BLOCK_DIAGRAM_KEY": 10, "document": 11, "stop": 12, "statement": 13, "link": 14, "LINK": 15, "START_LINK": 16, "LINK_LABEL": 17, "STR": 18, "nodeStatement": 19, "columnsStatement": 20, "SPACE_BLOCK": 21, "blockStatement": 22, "classDefStatement": 23, "cssClassStatement": 24, "styleStatement": 25, "node": 26, "SIZE": 27, "COLUMNS": 28, "id-block": 29, "end": 30, "block": 31, "NODE_ID": 32, "nodeShapeNLabel": 33, "dirList": 34, "DIR": 35, "NODE_DSTART": 36, "NODE_DEND": 37, "BLOCK_ARROW_START": 38, "BLOCK_ARROW_END": 39, "classDef": 40, "CLASSDEF_ID": 41, "CLASSDEF_STYLEOPTS": 42, "DEFAULT": 43, "class": 44, "CLASSENTITY_IDS": 45, "STYLECLASS": 46, "style": 47, "STYLE_ENTITY_IDS": 48, "STYLE_DEFINITION_DATA": 49, "$accept": 0, "$end": 1 },\n    terminals_: { 2: "error", 4: "SPACELINE", 5: "NL", 7: "SPACE", 8: "EOF", 10: "BLOCK_DIAGRAM_KEY", 15: "LINK", 16: "START_LINK", 17: "LINK_LABEL", 18: "STR", 21: "SPACE_BLOCK", 27: "SIZE", 28: "COLUMNS", 29: "id-block", 30: "end", 31: "block", 32: "NODE_ID", 35: "DIR", 36: "NODE_DSTART", 37: "NODE_DEND", 38: "BLOCK_ARROW_START", 39: "BLOCK_ARROW_END", 40: "classDef", 41: "CLASSDEF_ID", 42: "CLASSDEF_STYLEOPTS", 43: "DEFAULT", 44: "class", 45: "CLASSENTITY_IDS", 46: "STYLECLASS", 47: "style", 48: "STYLE_ENTITY_IDS", 49: "STYLE_DEFINITION_DATA" },\n    productions_: [0, [3, 1], [3, 2], [3, 2], [6, 1], [6, 1], [6, 1], [9, 3], [12, 1], [12, 1], [12, 2], [12, 2], [11, 1], [11, 2], [14, 1], [14, 4], [13, 1], [13, 1], [13, 1], [13, 1], [13, 1], [13, 1], [13, 1], [19, 3], [19, 2], [19, 1], [20, 1], [22, 4], [22, 3], [26, 1], [26, 2], [34, 1], [34, 2], [33, 3], [33, 4], [23, 3], [23, 3], [24, 3], [25, 3]],\n    performAction: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 4:\n          yy.getLogger().debug("Rule: separator (NL) ");\n          break;\n        case 5:\n          yy.getLogger().debug("Rule: separator (Space) ");\n          break;\n        case 6:\n          yy.getLogger().debug("Rule: separator (EOF) ");\n          break;\n        case 7:\n          yy.getLogger().debug("Rule: hierarchy: ", $$[$0 - 1]);\n          yy.setHierarchy($$[$0 - 1]);\n          break;\n        case 8:\n          yy.getLogger().debug("Stop NL ");\n          break;\n        case 9:\n          yy.getLogger().debug("Stop EOF ");\n          break;\n        case 10:\n          yy.getLogger().debug("Stop NL2 ");\n          break;\n        case 11:\n          yy.getLogger().debug("Stop EOF2 ");\n          break;\n        case 12:\n          yy.getLogger().debug("Rule: statement: ", $$[$0]);\n          typeof $$[$0].length === "number" ? this.$ = $$[$0] : this.$ = [$$[$0]];\n          break;\n        case 13:\n          yy.getLogger().debug("Rule: statement #2: ", $$[$0 - 1]);\n          this.$ = [$$[$0 - 1]].concat($$[$0]);\n          break;\n        case 14:\n          yy.getLogger().debug("Rule: link: ", $$[$0], yytext);\n          this.$ = { edgeTypeStr: $$[$0], label: "" };\n          break;\n        case 15:\n          yy.getLogger().debug("Rule: LABEL link: ", $$[$0 - 3], $$[$0 - 1], $$[$0]);\n          this.$ = { edgeTypeStr: $$[$0], label: $$[$0 - 1] };\n          break;\n        case 18:\n          const num = parseInt($$[$0]);\n          const spaceId = yy.generateId();\n          this.$ = { id: spaceId, type: "space", label: "", width: num, children: [] };\n          break;\n        case 23:\n          yy.getLogger().debug("Rule: (nodeStatement link node) ", $$[$0 - 2], $$[$0 - 1], $$[$0], " typestr: ", $$[$0 - 1].edgeTypeStr);\n          const edgeData = yy.edgeStrToEdgeData($$[$0 - 1].edgeTypeStr);\n          this.$ = [\n            { id: $$[$0 - 2].id, label: $$[$0 - 2].label, type: $$[$0 - 2].type, directions: $$[$0 - 2].directions },\n            { id: $$[$0 - 2].id + "-" + $$[$0].id, start: $$[$0 - 2].id, end: $$[$0].id, label: $$[$0 - 1].label, type: "edge", directions: $$[$0].directions, arrowTypeEnd: edgeData, arrowTypeStart: "arrow_open" },\n            { id: $$[$0].id, label: $$[$0].label, type: yy.typeStr2Type($$[$0].typeStr), directions: $$[$0].directions }\n          ];\n          break;\n        case 24:\n          yy.getLogger().debug("Rule: nodeStatement (abc88 node size) ", $$[$0 - 1], $$[$0]);\n          this.$ = { id: $$[$0 - 1].id, label: $$[$0 - 1].label, type: yy.typeStr2Type($$[$0 - 1].typeStr), directions: $$[$0 - 1].directions, widthInColumns: parseInt($$[$0], 10) };\n          break;\n        case 25:\n          yy.getLogger().debug("Rule: nodeStatement (node) ", $$[$0]);\n          this.$ = { id: $$[$0].id, label: $$[$0].label, type: yy.typeStr2Type($$[$0].typeStr), directions: $$[$0].directions, widthInColumns: 1 };\n          break;\n        case 26:\n          yy.getLogger().debug("APA123", this ? this : "na");\n          yy.getLogger().debug("COLUMNS: ", $$[$0]);\n          this.$ = { type: "column-setting", columns: $$[$0] === "auto" ? -1 : parseInt($$[$0]) };\n          break;\n        case 27:\n          yy.getLogger().debug("Rule: id-block statement : ", $$[$0 - 2], $$[$0 - 1]);\n          const id2 = yy.generateId();\n          this.$ = { ...$$[$0 - 2], type: "composite", children: $$[$0 - 1] };\n          break;\n        case 28:\n          yy.getLogger().debug("Rule: blockStatement : ", $$[$0 - 2], $$[$0 - 1], $$[$0]);\n          const id = yy.generateId();\n          this.$ = { id, type: "composite", label: "", children: $$[$0 - 1] };\n          break;\n        case 29:\n          yy.getLogger().debug("Rule: node (NODE_ID separator): ", $$[$0]);\n          this.$ = { id: $$[$0] };\n          break;\n        case 30:\n          yy.getLogger().debug("Rule: node (NODE_ID nodeShapeNLabel separator): ", $$[$0 - 1], $$[$0]);\n          this.$ = { id: $$[$0 - 1], label: $$[$0].label, typeStr: $$[$0].typeStr, directions: $$[$0].directions };\n          break;\n        case 31:\n          yy.getLogger().debug("Rule: dirList: ", $$[$0]);\n          this.$ = [$$[$0]];\n          break;\n        case 32:\n          yy.getLogger().debug("Rule: dirList: ", $$[$0 - 1], $$[$0]);\n          this.$ = [$$[$0 - 1]].concat($$[$0]);\n          break;\n        case 33:\n          yy.getLogger().debug("Rule: nodeShapeNLabel: ", $$[$0 - 2], $$[$0 - 1], $$[$0]);\n          this.$ = { typeStr: $$[$0 - 2] + $$[$0], label: $$[$0 - 1] };\n          break;\n        case 34:\n          yy.getLogger().debug("Rule: BLOCK_ARROW nodeShapeNLabel: ", $$[$0 - 3], $$[$0 - 2], " #3:", $$[$0 - 1], $$[$0]);\n          this.$ = { typeStr: $$[$0 - 3] + $$[$0], label: $$[$0 - 2], directions: $$[$0 - 1] };\n          break;\n        case 35:\n        case 36:\n          this.$ = { type: "classDef", id: $$[$0 - 1].trim(), css: $$[$0].trim() };\n          break;\n        case 37:\n          this.$ = { type: "applyClass", id: $$[$0 - 1].trim(), styleClass: $$[$0].trim() };\n          break;\n        case 38:\n          this.$ = { type: "applyStyles", id: $$[$0 - 1].trim(), stylesStr: $$[$0].trim() };\n          break;\n      }\n    }, "anonymous"),\n    table: [{ 9: 1, 10: [1, 2] }, { 1: [3] }, { 11: 3, 13: 4, 19: 5, 20: 6, 21: $V0, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }, { 8: [1, 20] }, o($V8, [2, 12], { 13: 4, 19: 5, 20: 6, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 11: 21, 21: $V0, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }), o($V9, [2, 16], { 14: 22, 15: $Va, 16: $Vb }), o($V9, [2, 17]), o($V9, [2, 18]), o($V9, [2, 19]), o($V9, [2, 20]), o($V9, [2, 21]), o($V9, [2, 22]), o($Vc, [2, 25], { 27: [1, 25] }), o($V9, [2, 26]), { 19: 26, 26: 12, 32: $V4 }, { 11: 27, 13: 4, 19: 5, 20: 6, 21: $V0, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }, { 41: [1, 28], 43: [1, 29] }, { 45: [1, 30] }, { 48: [1, 31] }, o($Vd, [2, 29], { 33: 32, 36: [1, 33], 38: [1, 34] }), { 1: [2, 7] }, o($V8, [2, 13]), { 26: 35, 32: $V4 }, { 32: [2, 14] }, { 17: [1, 36] }, o($Vc, [2, 24]), { 11: 37, 13: 4, 14: 22, 15: $Va, 16: $Vb, 19: 5, 20: 6, 21: $V0, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }, { 30: [1, 38] }, { 42: [1, 39] }, { 42: [1, 40] }, { 46: [1, 41] }, { 49: [1, 42] }, o($Vd, [2, 30]), { 18: [1, 43] }, { 18: [1, 44] }, o($Vc, [2, 23]), { 18: [1, 45] }, { 30: [1, 46] }, o($V9, [2, 28]), o($V9, [2, 35]), o($V9, [2, 36]), o($V9, [2, 37]), o($V9, [2, 38]), { 37: [1, 47] }, { 34: 48, 35: $Ve }, { 15: [1, 50] }, o($V9, [2, 27]), o($Vd, [2, 33]), { 39: [1, 51] }, { 34: 52, 35: $Ve, 39: [2, 31] }, { 32: [2, 15] }, o($Vd, [2, 34]), { 39: [2, 32] }],\n    defaultActions: { 20: [2, 7], 23: [2, 14], 50: [2, 15], 52: [2, 32] },\n    parseError: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    }, "parseError"),\n    parse: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == "undefined") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === "function") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n      }\n      (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(popStack, "popStack");\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== "number") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(lex, "lex");\n      var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == "undefined") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === "undefined" || !action.length || !action[0]) {\n          var errStr = "";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push("\'" + this.terminals_[p] + "\'");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = "Parse error on line " + (yylineno + 1) + ":\\n" + lexer2.showPosition() + "\\nExpecting " + expected.join(", ") + ", got \'" + (this.terminals_[symbol] || symbol) + "\'";\n          } else {\n            errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == EOF ? "end of input" : "\'" + (this.terminals_[symbol] || symbol) + "\'");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n              if (recovering > 0) {\n                recovering--;\n              }\n            } else {\n              symbol = preErrorSymbol;\n              preErrorSymbol = null;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== "undefined") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }, "parse")\n  };\n  var lexer = /* @__PURE__ */ function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      }, "parseError"),\n      // resets the lexer, sets new input\n      setInput: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = "";\n        this.conditionStack = ["INITIAL"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      }, "setInput"),\n      // consumes and returns one char from the input\n      input: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      }, "input"),\n      // unshifts one char (or a string) into the input\n      unput: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      }, "unput"),\n      // When called from action, caches matched text and appends it on next action\n      more: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function() {\n        this._more = true;\n        return this;\n      }, "more"),\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError("Lexical error on line " + (this.yylineno + 1) + ". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n" + this.showPosition(), {\n            text: "",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      }, "reject"),\n      // retain first n characters of the match\n      less: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function(n) {\n        this.unput(this.match.slice(n));\n      }, "less"),\n      // displays already matched input, i.e. for error messages\n      pastInput: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? "..." : "") + past.substr(-20).replace(/\\n/g, "");\n      }, "pastInput"),\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? "..." : "")).replace(/\\n/g, "");\n      }, "upcomingInput"),\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join("-");\n        return pre + this.upcomingInput() + "\\n" + c + "^";\n      }, "showPosition"),\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      }, "test_match"),\n      // return next match in input\n      next: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = "";\n          this.match = "";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === "") {\n          return this.EOF;\n        } else {\n          return this.parseError("Lexical error on line " + (this.yylineno + 1) + ". Unrecognized text.\\n" + this.showPosition(), {\n            text: "",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      }, "next"),\n      // return next match that has a token\n      lex: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      }, "lex"),\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function begin(condition) {\n        this.conditionStack.push(condition);\n      }, "begin"),\n      // pop the previously active lexer condition state off the condition stack\n      popState: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      }, "popState"),\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions["INITIAL"].rules;\n        }\n      }, "_currentRules"),\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return "INITIAL";\n        }\n      }, "topState"),\n      // alias for begin(condition)\n      pushState: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function pushState(condition) {\n        this.begin(condition);\n      }, "pushState"),\n      // return the number of states currently on the stack\n      stateStackSize: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function stateStackSize() {\n        return this.conditionStack.length;\n      }, "stateStackSize"),\n      options: {},\n      performAction: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        var YYSTATE = YY_START;\n        switch ($avoiding_name_collisions) {\n          case 0:\n            return 10;\n            break;\n          case 1:\n            yy.getLogger().debug("Found space-block");\n            return 31;\n            break;\n          case 2:\n            yy.getLogger().debug("Found nl-block");\n            return 31;\n            break;\n          case 3:\n            yy.getLogger().debug("Found space-block");\n            return 29;\n            break;\n          case 4:\n            yy.getLogger().debug(".", yy_.yytext);\n            break;\n          case 5:\n            yy.getLogger().debug("_", yy_.yytext);\n            break;\n          case 6:\n            return 5;\n            break;\n          case 7:\n            yy_.yytext = -1;\n            return 28;\n            break;\n          case 8:\n            yy_.yytext = yy_.yytext.replace(/columns\\s+/, "");\n            yy.getLogger().debug("COLUMNS (LEX)", yy_.yytext);\n            return 28;\n            break;\n          case 9:\n            this.pushState("md_string");\n            break;\n          case 10:\n            return "MD_STR";\n            break;\n          case 11:\n            this.popState();\n            break;\n          case 12:\n            this.pushState("string");\n            break;\n          case 13:\n            yy.getLogger().debug("LEX: POPPING STR:", yy_.yytext);\n            this.popState();\n            break;\n          case 14:\n            yy.getLogger().debug("LEX: STR end:", yy_.yytext);\n            return "STR";\n            break;\n          case 15:\n            yy_.yytext = yy_.yytext.replace(/space\\:/, "");\n            yy.getLogger().debug("SPACE NUM (LEX)", yy_.yytext);\n            return 21;\n            break;\n          case 16:\n            yy_.yytext = "1";\n            yy.getLogger().debug("COLUMNS (LEX)", yy_.yytext);\n            return 21;\n            break;\n          case 17:\n            return 43;\n            break;\n          case 18:\n            return "LINKSTYLE";\n            break;\n          case 19:\n            return "INTERPOLATE";\n            break;\n          case 20:\n            this.pushState("CLASSDEF");\n            return 40;\n            break;\n          case 21:\n            this.popState();\n            this.pushState("CLASSDEFID");\n            return "DEFAULT_CLASSDEF_ID";\n            break;\n          case 22:\n            this.popState();\n            this.pushState("CLASSDEFID");\n            return 41;\n            break;\n          case 23:\n            this.popState();\n            return 42;\n            break;\n          case 24:\n            this.pushState("CLASS");\n            return 44;\n            break;\n          case 25:\n            this.popState();\n            this.pushState("CLASS_STYLE");\n            return 45;\n            break;\n          case 26:\n            this.popState();\n            return 46;\n            break;\n          case 27:\n            this.pushState("STYLE_STMNT");\n            return 47;\n            break;\n          case 28:\n            this.popState();\n            this.pushState("STYLE_DEFINITION");\n            return 48;\n            break;\n          case 29:\n            this.popState();\n            return 49;\n            break;\n          case 30:\n            this.pushState("acc_title");\n            return "acc_title";\n            break;\n          case 31:\n            this.popState();\n            return "acc_title_value";\n            break;\n          case 32:\n            this.pushState("acc_descr");\n            return "acc_descr";\n            break;\n          case 33:\n            this.popState();\n            return "acc_descr_value";\n            break;\n          case 34:\n            this.pushState("acc_descr_multiline");\n            break;\n          case 35:\n            this.popState();\n            break;\n          case 36:\n            return "acc_descr_multiline_value";\n            break;\n          case 37:\n            return 30;\n            break;\n          case 38:\n            this.popState();\n            yy.getLogger().debug("Lex: ((");\n            return "NODE_DEND";\n            break;\n          case 39:\n            this.popState();\n            yy.getLogger().debug("Lex: ((");\n            return "NODE_DEND";\n            break;\n          case 40:\n            this.popState();\n            yy.getLogger().debug("Lex: ))");\n            return "NODE_DEND";\n            break;\n          case 41:\n            this.popState();\n            yy.getLogger().debug("Lex: ((");\n            return "NODE_DEND";\n            break;\n          case 42:\n            this.popState();\n            yy.getLogger().debug("Lex: ((");\n            return "NODE_DEND";\n            break;\n          case 43:\n            this.popState();\n            yy.getLogger().debug("Lex: (-");\n            return "NODE_DEND";\n            break;\n          case 44:\n            this.popState();\n            yy.getLogger().debug("Lex: -)");\n            return "NODE_DEND";\n            break;\n          case 45:\n            this.popState();\n            yy.getLogger().debug("Lex: ((");\n            return "NODE_DEND";\n            break;\n          case 46:\n            this.popState();\n            yy.getLogger().debug("Lex: ]]");\n            return "NODE_DEND";\n            break;\n          case 47:\n            this.popState();\n            yy.getLogger().debug("Lex: (");\n            return "NODE_DEND";\n            break;\n          case 48:\n            this.popState();\n            yy.getLogger().debug("Lex: ])");\n            return "NODE_DEND";\n            break;\n          case 49:\n            this.popState();\n            yy.getLogger().debug("Lex: /]");\n            return "NODE_DEND";\n            break;\n          case 50:\n            this.popState();\n            yy.getLogger().debug("Lex: /]");\n            return "NODE_DEND";\n            break;\n          case 51:\n            this.popState();\n            yy.getLogger().debug("Lex: )]");\n            return "NODE_DEND";\n            break;\n          case 52:\n            this.popState();\n            yy.getLogger().debug("Lex: )");\n            return "NODE_DEND";\n            break;\n          case 53:\n            this.popState();\n            yy.getLogger().debug("Lex: ]>");\n            return "NODE_DEND";\n            break;\n          case 54:\n            this.popState();\n            yy.getLogger().debug("Lex: ]");\n            return "NODE_DEND";\n            break;\n          case 55:\n            yy.getLogger().debug("Lexa: -)");\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 56:\n            yy.getLogger().debug("Lexa: (-");\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 57:\n            yy.getLogger().debug("Lexa: ))");\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 58:\n            yy.getLogger().debug("Lexa: )");\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 59:\n            yy.getLogger().debug("Lex: (((");\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 60:\n            yy.getLogger().debug("Lexa: )");\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 61:\n            yy.getLogger().debug("Lexa: )");\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 62:\n            yy.getLogger().debug("Lexa: )");\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 63:\n            yy.getLogger().debug("Lexc: >");\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 64:\n            yy.getLogger().debug("Lexa: ([");\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 65:\n            yy.getLogger().debug("Lexa: )");\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 66:\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 67:\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 68:\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 69:\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 70:\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 71:\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 72:\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 73:\n            yy.getLogger().debug("Lexa: [");\n            this.pushState("NODE");\n            return 36;\n            break;\n          case 74:\n            this.pushState("BLOCK_ARROW");\n            yy.getLogger().debug("LEX ARR START");\n            return 38;\n            break;\n          case 75:\n            yy.getLogger().debug("Lex: NODE_ID", yy_.yytext);\n            return 32;\n            break;\n          case 76:\n            yy.getLogger().debug("Lex: EOF", yy_.yytext);\n            return 8;\n            break;\n          case 77:\n            this.pushState("md_string");\n            break;\n          case 78:\n            this.pushState("md_string");\n            break;\n          case 79:\n            return "NODE_DESCR";\n            break;\n          case 80:\n            this.popState();\n            break;\n          case 81:\n            yy.getLogger().debug("Lex: Starting string");\n            this.pushState("string");\n            break;\n          case 82:\n            yy.getLogger().debug("LEX ARR: Starting string");\n            this.pushState("string");\n            break;\n          case 83:\n            yy.getLogger().debug("LEX: NODE_DESCR:", yy_.yytext);\n            return "NODE_DESCR";\n            break;\n          case 84:\n            yy.getLogger().debug("LEX POPPING");\n            this.popState();\n            break;\n          case 85:\n            yy.getLogger().debug("Lex: =>BAE");\n            this.pushState("ARROW_DIR");\n            break;\n          case 86:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, "");\n            yy.getLogger().debug("Lex (right): dir:", yy_.yytext);\n            return "DIR";\n            break;\n          case 87:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, "");\n            yy.getLogger().debug("Lex (left):", yy_.yytext);\n            return "DIR";\n            break;\n          case 88:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, "");\n            yy.getLogger().debug("Lex (x):", yy_.yytext);\n            return "DIR";\n            break;\n          case 89:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, "");\n            yy.getLogger().debug("Lex (y):", yy_.yytext);\n            return "DIR";\n            break;\n          case 90:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, "");\n            yy.getLogger().debug("Lex (up):", yy_.yytext);\n            return "DIR";\n            break;\n          case 91:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, "");\n            yy.getLogger().debug("Lex (down):", yy_.yytext);\n            return "DIR";\n            break;\n          case 92:\n            yy_.yytext = "]>";\n            yy.getLogger().debug("Lex (ARROW_DIR end):", yy_.yytext);\n            this.popState();\n            this.popState();\n            return "BLOCK_ARROW_END";\n            break;\n          case 93:\n            yy.getLogger().debug("Lex: LINK", "#" + yy_.yytext + "#");\n            return 15;\n            break;\n          case 94:\n            yy.getLogger().debug("Lex: LINK", yy_.yytext);\n            return 15;\n            break;\n          case 95:\n            yy.getLogger().debug("Lex: LINK", yy_.yytext);\n            return 15;\n            break;\n          case 96:\n            yy.getLogger().debug("Lex: LINK", yy_.yytext);\n            return 15;\n            break;\n          case 97:\n            yy.getLogger().debug("Lex: START_LINK", yy_.yytext);\n            this.pushState("LLABEL");\n            return 16;\n            break;\n          case 98:\n            yy.getLogger().debug("Lex: START_LINK", yy_.yytext);\n            this.pushState("LLABEL");\n            return 16;\n            break;\n          case 99:\n            yy.getLogger().debug("Lex: START_LINK", yy_.yytext);\n            this.pushState("LLABEL");\n            return 16;\n            break;\n          case 100:\n            this.pushState("md_string");\n            break;\n          case 101:\n            yy.getLogger().debug("Lex: Starting string");\n            this.pushState("string");\n            return "LINK_LABEL";\n            break;\n          case 102:\n            this.popState();\n            yy.getLogger().debug("Lex: LINK", "#" + yy_.yytext + "#");\n            return 15;\n            break;\n          case 103:\n            this.popState();\n            yy.getLogger().debug("Lex: LINK", yy_.yytext);\n            return 15;\n            break;\n          case 104:\n            this.popState();\n            yy.getLogger().debug("Lex: LINK", yy_.yytext);\n            return 15;\n            break;\n          case 105:\n            yy.getLogger().debug("Lex: COLON", yy_.yytext);\n            yy_.yytext = yy_.yytext.slice(1);\n            return 27;\n            break;\n        }\n      }, "anonymous"),\n      rules: [/^(?:block-beta\\b)/, /^(?:block\\s+)/, /^(?:block\\n+)/, /^(?:block:)/, /^(?:[\\s]+)/, /^(?:[\\n]+)/, /^(?:((\\u000D\\u000A)|(\\u000A)))/, /^(?:columns\\s+auto\\b)/, /^(?:columns\\s+[\\d]+)/, /^(?:["][`])/, /^(?:[^`"]+)/, /^(?:[`]["])/, /^(?:["])/, /^(?:["])/, /^(?:[^"]*)/, /^(?:space[:]\\d+)/, /^(?:space\\b)/, /^(?:default\\b)/, /^(?:linkStyle\\b)/, /^(?:interpolate\\b)/, /^(?:classDef\\s+)/, /^(?:DEFAULT\\s+)/, /^(?:\\w+\\s+)/, /^(?:[^\\n]*)/, /^(?:class\\s+)/, /^(?:(\\w+)+((,\\s*\\w+)*))/, /^(?:[^\\n]*)/, /^(?:style\\s+)/, /^(?:(\\w+)+((,\\s*\\w+)*))/, /^(?:[^\\n]*)/, /^(?:accTitle\\s*:\\s*)/, /^(?:(?!\\n||)*[^\\n]*)/, /^(?:accDescr\\s*:\\s*)/, /^(?:(?!\\n||)*[^\\n]*)/, /^(?:accDescr\\s*\\{\\s*)/, /^(?:[\\}])/, /^(?:[^\\}]*)/, /^(?:end\\b\\s*)/, /^(?:\\(\\(\\()/, /^(?:\\)\\)\\))/, /^(?:[\\)]\\))/, /^(?:\\}\\})/, /^(?:\\})/, /^(?:\\(-)/, /^(?:-\\))/, /^(?:\\(\\()/, /^(?:\\]\\])/, /^(?:\\()/, /^(?:\\]\\))/, /^(?:\\\\\\])/, /^(?:\\/\\])/, /^(?:\\)\\])/, /^(?:[\\)])/, /^(?:\\]>)/, /^(?:[\\]])/, /^(?:-\\))/, /^(?:\\(-)/, /^(?:\\)\\))/, /^(?:\\))/, /^(?:\\(\\(\\()/, /^(?:\\(\\()/, /^(?:\\{\\{)/, /^(?:\\{)/, /^(?:>)/, /^(?:\\(\\[)/, /^(?:\\()/, /^(?:\\[\\[)/, /^(?:\\[\\|)/, /^(?:\\[\\()/, /^(?:\\)\\)\\))/, /^(?:\\[\\\\)/, /^(?:\\[\\/)/, /^(?:\\[\\\\)/, /^(?:\\[)/, /^(?:<\\[)/, /^(?:[^\\(\\[\\n\\-\\)\\{\\}\\s\\<\\>:]+)/, /^(?:$)/, /^(?:["][`])/, /^(?:["][`])/, /^(?:[^`"]+)/, /^(?:[`]["])/, /^(?:["])/, /^(?:["])/, /^(?:[^"]+)/, /^(?:["])/, /^(?:\\]>\\s*\\()/, /^(?:,?\\s*right\\s*)/, /^(?:,?\\s*left\\s*)/, /^(?:,?\\s*x\\s*)/, /^(?:,?\\s*y\\s*)/, /^(?:,?\\s*up\\s*)/, /^(?:,?\\s*down\\s*)/, /^(?:\\)\\s*)/, /^(?:\\s*[xo<]?--+[-xo>]\\s*)/, /^(?:\\s*[xo<]?==+[=xo>]\\s*)/, /^(?:\\s*[xo<]?-?\\.+-[xo>]?\\s*)/, /^(?:\\s*~~[\\~]+\\s*)/, /^(?:\\s*[xo<]?--\\s*)/, /^(?:\\s*[xo<]?==\\s*)/, /^(?:\\s*[xo<]?-\\.\\s*)/, /^(?:["][`])/, /^(?:["])/, /^(?:\\s*[xo<]?--+[-xo>]\\s*)/, /^(?:\\s*[xo<]?==+[=xo>]\\s*)/, /^(?:\\s*[xo<]?-?\\.+-[xo>]?\\s*)/, /^(?::\\d+)/],\n      conditions: { "STYLE_DEFINITION": { "rules": [29], "inclusive": false }, "STYLE_STMNT": { "rules": [28], "inclusive": false }, "CLASSDEFID": { "rules": [23], "inclusive": false }, "CLASSDEF": { "rules": [21, 22], "inclusive": false }, "CLASS_STYLE": { "rules": [26], "inclusive": false }, "CLASS": { "rules": [25], "inclusive": false }, "LLABEL": { "rules": [100, 101, 102, 103, 104], "inclusive": false }, "ARROW_DIR": { "rules": [86, 87, 88, 89, 90, 91, 92], "inclusive": false }, "BLOCK_ARROW": { "rules": [77, 82, 85], "inclusive": false }, "NODE": { "rules": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 78, 81], "inclusive": false }, "md_string": { "rules": [10, 11, 79, 80], "inclusive": false }, "space": { "rules": [], "inclusive": false }, "string": { "rules": [13, 14, 83, 84], "inclusive": false }, "acc_descr_multiline": { "rules": [35, 36], "inclusive": false }, "acc_descr": { "rules": [33], "inclusive": false }, "acc_title": { "rules": [31], "inclusive": false }, "INITIAL": { "rules": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 24, 27, 30, 32, 34, 37, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 93, 94, 95, 96, 97, 98, 99, 105], "inclusive": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(Parser, "Parser");\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nvar block_default = parser;\n\n// src/diagrams/block/blockDB.ts\n\nvar blockDatabase = /* @__PURE__ */ new Map();\nvar edgeList = [];\nvar edgeCount = /* @__PURE__ */ new Map();\nvar COLOR_KEYWORD = "color";\nvar FILL_KEYWORD = "fill";\nvar BG_FILL = "bgFill";\nvar STYLECLASS_SEP = ",";\nvar config = (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)();\nvar classes = /* @__PURE__ */ new Map();\nvar sanitizeText2 = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((txt) => _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .common_default */ .Y2.sanitizeText(txt, config), "sanitizeText");\nvar addStyleClass = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function(id, styleAttributes = "") {\n  let foundClass = classes.get(id);\n  if (!foundClass) {\n    foundClass = { id, styles: [], textStyles: [] };\n    classes.set(id, foundClass);\n  }\n  if (styleAttributes !== void 0 && styleAttributes !== null) {\n    styleAttributes.split(STYLECLASS_SEP).forEach((attrib) => {\n      const fixedAttrib = attrib.replace(/([^;]*);/, "$1").trim();\n      if (RegExp(COLOR_KEYWORD).exec(attrib)) {\n        const newStyle1 = fixedAttrib.replace(FILL_KEYWORD, BG_FILL);\n        const newStyle2 = newStyle1.replace(COLOR_KEYWORD, FILL_KEYWORD);\n        foundClass.textStyles.push(newStyle2);\n      }\n      foundClass.styles.push(fixedAttrib);\n    });\n  }\n}, "addStyleClass");\nvar addStyle2Node = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function(id, styles = "") {\n  const foundBlock = blockDatabase.get(id);\n  if (styles !== void 0 && styles !== null) {\n    foundBlock.styles = styles.split(STYLECLASS_SEP);\n  }\n}, "addStyle2Node");\nvar setCssClass = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function(itemIds, cssClassName) {\n  itemIds.split(",").forEach(function(id) {\n    let foundBlock = blockDatabase.get(id);\n    if (foundBlock === void 0) {\n      const trimmedId = id.trim();\n      foundBlock = { id: trimmedId, type: "na", children: [] };\n      blockDatabase.set(trimmedId, foundBlock);\n    }\n    if (!foundBlock.classes) {\n      foundBlock.classes = [];\n    }\n    foundBlock.classes.push(cssClassName);\n  });\n}, "setCssClass");\nvar populateBlockDatabase = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((_blockList, parent) => {\n  const blockList = _blockList.flat();\n  const children = [];\n  for (const block of blockList) {\n    if (block.label) {\n      block.label = sanitizeText2(block.label);\n    }\n    if (block.type === "classDef") {\n      addStyleClass(block.id, block.css);\n      continue;\n    }\n    if (block.type === "applyClass") {\n      setCssClass(block.id, block?.styleClass ?? "");\n      continue;\n    }\n    if (block.type === "applyStyles") {\n      if (block?.stylesStr) {\n        addStyle2Node(block.id, block?.stylesStr);\n      }\n      continue;\n    }\n    if (block.type === "column-setting") {\n      parent.columns = block.columns ?? -1;\n    } else if (block.type === "edge") {\n      const count = (edgeCount.get(block.id) ?? 0) + 1;\n      edgeCount.set(block.id, count);\n      block.id = count + "-" + block.id;\n      edgeList.push(block);\n    } else {\n      if (!block.label) {\n        if (block.type === "composite") {\n          block.label = "";\n        } else {\n          block.label = block.id;\n        }\n      }\n      const existingBlock = blockDatabase.get(block.id);\n      if (existingBlock === void 0) {\n        blockDatabase.set(block.id, block);\n      } else {\n        if (block.type !== "na") {\n          existingBlock.type = block.type;\n        }\n        if (block.label !== block.id) {\n          existingBlock.label = block.label;\n        }\n      }\n      if (block.children) {\n        populateBlockDatabase(block.children, block);\n      }\n      if (block.type === "space") {\n        const w = block.width ?? 1;\n        for (let j = 0; j < w; j++) {\n          const newBlock = (0,lodash_es_clone_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .A)(block);\n          newBlock.id = newBlock.id + "-" + j;\n          blockDatabase.set(newBlock.id, newBlock);\n          children.push(newBlock);\n        }\n      } else if (existingBlock === void 0) {\n        children.push(block);\n      }\n    }\n  }\n  parent.children = children;\n}, "populateBlockDatabase");\nvar blocks = [];\nvar rootBlock = { id: "root", type: "composite", children: [], columns: -1 };\nvar clear2 = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(() => {\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("Clear called");\n  (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .clear */ .IU)();\n  rootBlock = { id: "root", type: "composite", children: [], columns: -1 };\n  blockDatabase = /* @__PURE__ */ new Map([["root", rootBlock]]);\n  blocks = [];\n  classes = /* @__PURE__ */ new Map();\n  edgeList = [];\n  edgeCount = /* @__PURE__ */ new Map();\n}, "clear");\nfunction typeStr2Type(typeStr) {\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("typeStr2Type", typeStr);\n  switch (typeStr) {\n    case "[]":\n      return "square";\n    case "()":\n      _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("we have a round");\n      return "round";\n    case "(())":\n      return "circle";\n    case ">]":\n      return "rect_left_inv_arrow";\n    case "{}":\n      return "diamond";\n    case "{{}}":\n      return "hexagon";\n    case "([])":\n      return "stadium";\n    case "[[]]":\n      return "subroutine";\n    case "[()]":\n      return "cylinder";\n    case "((()))":\n      return "doublecircle";\n    case "[//]":\n      return "lean_right";\n    case "[\\\\\\\\]":\n      return "lean_left";\n    case "[/\\\\]":\n      return "trapezoid";\n    case "[\\\\/]":\n      return "inv_trapezoid";\n    case "<[]>":\n      return "block_arrow";\n    default:\n      return "na";\n  }\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(typeStr2Type, "typeStr2Type");\nfunction edgeTypeStr2Type(typeStr) {\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("typeStr2Type", typeStr);\n  switch (typeStr) {\n    case "==":\n      return "thick";\n    default:\n      return "normal";\n  }\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(edgeTypeStr2Type, "edgeTypeStr2Type");\nfunction edgeStrToEdgeData(typeStr) {\n  switch (typeStr.trim()) {\n    case "--x":\n      return "arrow_cross";\n    case "--o":\n      return "arrow_circle";\n    default:\n      return "arrow_point";\n  }\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(edgeStrToEdgeData, "edgeStrToEdgeData");\nvar cnt = 0;\nvar generateId = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(() => {\n  cnt++;\n  return "id-" + Math.random().toString(36).substr(2, 12) + "-" + cnt;\n}, "generateId");\nvar setHierarchy = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((block) => {\n  rootBlock.children = block;\n  populateBlockDatabase(block, rootBlock);\n  blocks = rootBlock.children;\n}, "setHierarchy");\nvar getColumns = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((blockId) => {\n  const block = blockDatabase.get(blockId);\n  if (!block) {\n    return -1;\n  }\n  if (block.columns) {\n    return block.columns;\n  }\n  if (!block.children) {\n    return -1;\n  }\n  return block.children.length;\n}, "getColumns");\nvar getBlocksFlat = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(() => {\n  return [...blockDatabase.values()];\n}, "getBlocksFlat");\nvar getBlocks = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(() => {\n  return blocks || [];\n}, "getBlocks");\nvar getEdges = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(() => {\n  return edgeList;\n}, "getEdges");\nvar getBlock = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((id) => {\n  return blockDatabase.get(id);\n}, "getBlock");\nvar setBlock = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((block) => {\n  blockDatabase.set(block.id, block);\n}, "setBlock");\nvar getLogger = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(() => console, "getLogger");\nvar getClasses = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function() {\n  return classes;\n}, "getClasses");\nvar db = {\n  getConfig: /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(() => (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig */ .zj)().block, "getConfig"),\n  typeStr2Type,\n  edgeTypeStr2Type,\n  edgeStrToEdgeData,\n  getLogger,\n  getBlocksFlat,\n  getBlocks,\n  getEdges,\n  setHierarchy,\n  getBlock,\n  setBlock,\n  getColumns,\n  getClasses,\n  clear: clear2,\n  generateId\n};\nvar blockDB_default = db;\n\n// src/diagrams/block/styles.ts\n\nvar fade = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((color, opacity) => {\n  const channel2 = khroma__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .A;\n  const r = channel2(color, "r");\n  const g = channel2(color, "g");\n  const b = channel2(color, "b");\n  return khroma__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .A(r, g, b, opacity);\n}, "fade");\nvar getStyles = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((options) => `.label {\n    font-family: ${options.fontFamily};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n  .cluster-label text {\n    fill: ${options.titleColor};\n  }\n  .cluster-label span,p {\n    color: ${options.titleColor};\n  }\n\n\n\n  .label text,span,p {\n    fill: ${options.nodeTextColor || options.textColor};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n    stroke-width: 1px;\n  }\n  .flowchart-label text {\n    text-anchor: middle;\n  }\n  // .flowchart-label .text-outer-tspan {\n  //   text-anchor: middle;\n  // }\n  // .flowchart-label .text-inner-tspan {\n  //   text-anchor: start;\n  // }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${options.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${options.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${options.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${options.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n      background-color: ${options.edgeLabelBackground};\n      fill: ${options.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  /* For html labels only */\n  .labelBkg {\n    background-color: ${fade(options.edgeLabelBackground, 0.5)};\n    // background-color:\n  }\n\n  .node .cluster {\n    // fill: ${fade(options.mainBkg, 0.5)};\n    fill: ${fade(options.clusterBkg, 0.5)};\n    stroke: ${fade(options.clusterBorder, 0.2)};\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${options.titleColor};\n  }\n\n  .cluster span,p {\n    color: ${options.titleColor};\n  }\n  /* .cluster div {\n    color: ${options.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${options.fontFamily};\n    font-size: 12px;\n    background: ${options.tertiaryColor};\n    border: 1px solid ${options.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .flowchartTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`, "getStyles");\nvar styles_default = getStyles;\n\n// src/diagrams/block/blockRenderer.ts\n\n\n// src/dagre-wrapper/markers.js\nvar insertMarkers = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((elem, markerArray, type, id) => {\n  markerArray.forEach((markerName) => {\n    markers[markerName](elem, type, id);\n  });\n}, "insertMarkers");\nvar extension = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((elem, type, id) => {\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.trace("Making markers for ", id);\n  elem.append("defs").append("marker").attr("id", id + "_" + type + "-extensionStart").attr("class", "marker extension " + type).attr("refX", 18).attr("refY", 7).attr("markerWidth", 190).attr("markerHeight", 240).attr("orient", "auto").append("path").attr("d", "M 1,7 L18,13 V 1 Z");\n  elem.append("defs").append("marker").attr("id", id + "_" + type + "-extensionEnd").attr("class", "marker extension " + type).attr("refX", 1).attr("refY", 7).attr("markerWidth", 20).attr("markerHeight", 28).attr("orient", "auto").append("path").attr("d", "M 1,1 V 13 L18,7 Z");\n}, "extension");\nvar composition = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((elem, type, id) => {\n  elem.append("defs").append("marker").attr("id", id + "_" + type + "-compositionStart").attr("class", "marker composition " + type).attr("refX", 18).attr("refY", 7).attr("markerWidth", 190).attr("markerHeight", 240).attr("orient", "auto").append("path").attr("d", "M 18,7 L9,13 L1,7 L9,1 Z");\n  elem.append("defs").append("marker").attr("id", id + "_" + type + "-compositionEnd").attr("class", "marker composition " + type).attr("refX", 1).attr("refY", 7).attr("markerWidth", 20).attr("markerHeight", 28).attr("orient", "auto").append("path").attr("d", "M 18,7 L9,13 L1,7 L9,1 Z");\n}, "composition");\nvar aggregation = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((elem, type, id) => {\n  elem.append("defs").append("marker").attr("id", id + "_" + type + "-aggregationStart").attr("class", "marker aggregation " + type).attr("refX", 18).attr("refY", 7).attr("markerWidth", 190).attr("markerHeight", 240).attr("orient", "auto").append("path").attr("d", "M 18,7 L9,13 L1,7 L9,1 Z");\n  elem.append("defs").append("marker").attr("id", id + "_" + type + "-aggregationEnd").attr("class", "marker aggregation " + type).attr("refX", 1).attr("refY", 7).attr("markerWidth", 20).attr("markerHeight", 28).attr("orient", "auto").append("path").attr("d", "M 18,7 L9,13 L1,7 L9,1 Z");\n}, "aggregation");\nvar dependency = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((elem, type, id) => {\n  elem.append("defs").append("marker").attr("id", id + "_" + type + "-dependencyStart").attr("class", "marker dependency " + type).attr("refX", 6).attr("refY", 7).attr("markerWidth", 190).attr("markerHeight", 240).attr("orient", "auto").append("path").attr("d", "M 5,7 L9,13 L1,7 L9,1 Z");\n  elem.append("defs").append("marker").attr("id", id + "_" + type + "-dependencyEnd").attr("class", "marker dependency " + type).attr("refX", 13).attr("refY", 7).attr("markerWidth", 20).attr("markerHeight", 28).attr("orient", "auto").append("path").attr("d", "M 18,7 L9,13 L14,7 L9,1 Z");\n}, "dependency");\nvar lollipop = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((elem, type, id) => {\n  elem.append("defs").append("marker").attr("id", id + "_" + type + "-lollipopStart").attr("class", "marker lollipop " + type).attr("refX", 13).attr("refY", 7).attr("markerWidth", 190).attr("markerHeight", 240).attr("orient", "auto").append("circle").attr("stroke", "black").attr("fill", "transparent").attr("cx", 7).attr("cy", 7).attr("r", 6);\n  elem.append("defs").append("marker").attr("id", id + "_" + type + "-lollipopEnd").attr("class", "marker lollipop " + type).attr("refX", 1).attr("refY", 7).attr("markerWidth", 190).attr("markerHeight", 240).attr("orient", "auto").append("circle").attr("stroke", "black").attr("fill", "transparent").attr("cx", 7).attr("cy", 7).attr("r", 6);\n}, "lollipop");\nvar point = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((elem, type, id) => {\n  elem.append("marker").attr("id", id + "_" + type + "-pointEnd").attr("class", "marker " + type).attr("viewBox", "0 0 10 10").attr("refX", 6).attr("refY", 5).attr("markerUnits", "userSpaceOnUse").attr("markerWidth", 12).attr("markerHeight", 12).attr("orient", "auto").append("path").attr("d", "M 0 0 L 10 5 L 0 10 z").attr("class", "arrowMarkerPath").style("stroke-width", 1).style("stroke-dasharray", "1,0");\n  elem.append("marker").attr("id", id + "_" + type + "-pointStart").attr("class", "marker " + type).attr("viewBox", "0 0 10 10").attr("refX", 4.5).attr("refY", 5).attr("markerUnits", "userSpaceOnUse").attr("markerWidth", 12).attr("markerHeight", 12).attr("orient", "auto").append("path").attr("d", "M 0 5 L 10 10 L 10 0 z").attr("class", "arrowMarkerPath").style("stroke-width", 1).style("stroke-dasharray", "1,0");\n}, "point");\nvar circle = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((elem, type, id) => {\n  elem.append("marker").attr("id", id + "_" + type + "-circleEnd").attr("class", "marker " + type).attr("viewBox", "0 0 10 10").attr("refX", 11).attr("refY", 5).attr("markerUnits", "userSpaceOnUse").attr("markerWidth", 11).attr("markerHeight", 11).attr("orient", "auto").append("circle").attr("cx", "5").attr("cy", "5").attr("r", "5").attr("class", "arrowMarkerPath").style("stroke-width", 1).style("stroke-dasharray", "1,0");\n  elem.append("marker").attr("id", id + "_" + type + "-circleStart").attr("class", "marker " + type).attr("viewBox", "0 0 10 10").attr("refX", -1).attr("refY", 5).attr("markerUnits", "userSpaceOnUse").attr("markerWidth", 11).attr("markerHeight", 11).attr("orient", "auto").append("circle").attr("cx", "5").attr("cy", "5").attr("r", "5").attr("class", "arrowMarkerPath").style("stroke-width", 1).style("stroke-dasharray", "1,0");\n}, "circle");\nvar cross = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((elem, type, id) => {\n  elem.append("marker").attr("id", id + "_" + type + "-crossEnd").attr("class", "marker cross " + type).attr("viewBox", "0 0 11 11").attr("refX", 12).attr("refY", 5.2).attr("markerUnits", "userSpaceOnUse").attr("markerWidth", 11).attr("markerHeight", 11).attr("orient", "auto").append("path").attr("d", "M 1,1 l 9,9 M 10,1 l -9,9").attr("class", "arrowMarkerPath").style("stroke-width", 2).style("stroke-dasharray", "1,0");\n  elem.append("marker").attr("id", id + "_" + type + "-crossStart").attr("class", "marker cross " + type).attr("viewBox", "0 0 11 11").attr("refX", -1).attr("refY", 5.2).attr("markerUnits", "userSpaceOnUse").attr("markerWidth", 11).attr("markerHeight", 11).attr("orient", "auto").append("path").attr("d", "M 1,1 l 9,9 M 10,1 l -9,9").attr("class", "arrowMarkerPath").style("stroke-width", 2).style("stroke-dasharray", "1,0");\n}, "cross");\nvar barb = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((elem, type, id) => {\n  elem.append("defs").append("marker").attr("id", id + "_" + type + "-barbEnd").attr("refX", 19).attr("refY", 7).attr("markerWidth", 20).attr("markerHeight", 14).attr("markerUnits", "strokeWidth").attr("orient", "auto").append("path").attr("d", "M 19,7 L9,13 L14,7 L9,1 Z");\n}, "barb");\nvar markers = {\n  extension,\n  composition,\n  aggregation,\n  dependency,\n  lollipop,\n  point,\n  circle,\n  cross,\n  barb\n};\nvar markers_default = insertMarkers;\n\n// src/diagrams/block/layout.ts\nvar padding = (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)()?.block?.padding ?? 8;\nfunction calculateBlockPosition(columns, position) {\n  if (columns === 0 || !Number.isInteger(columns)) {\n    throw new Error("Columns must be an integer !== 0.");\n  }\n  if (position < 0 || !Number.isInteger(position)) {\n    throw new Error("Position must be a non-negative integer." + position);\n  }\n  if (columns < 0) {\n    return { px: position, py: 0 };\n  }\n  if (columns === 1) {\n    return { px: 0, py: position };\n  }\n  const px = position % columns;\n  const py = Math.floor(position / columns);\n  return { px, py };\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(calculateBlockPosition, "calculateBlockPosition");\nvar getMaxChildSize = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((block) => {\n  let maxWidth = 0;\n  let maxHeight = 0;\n  for (const child of block.children) {\n    const { width, height, x, y } = child.size ?? { width: 0, height: 0, x: 0, y: 0 };\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(\n      "getMaxChildSize abc95 child:",\n      child.id,\n      "width:",\n      width,\n      "height:",\n      height,\n      "x:",\n      x,\n      "y:",\n      y,\n      child.type\n    );\n    if (child.type === "space") {\n      continue;\n    }\n    if (width > maxWidth) {\n      maxWidth = width / (block.widthInColumns ?? 1);\n    }\n    if (height > maxHeight) {\n      maxHeight = height;\n    }\n  }\n  return { width: maxWidth, height: maxHeight };\n}, "getMaxChildSize");\nfunction setBlockSizes(block, db2, siblingWidth = 0, siblingHeight = 0) {\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(\n    "setBlockSizes abc95 (start)",\n    block.id,\n    block?.size?.x,\n    "block width =",\n    block?.size,\n    "sieblingWidth",\n    siblingWidth\n  );\n  if (!block?.size?.width) {\n    block.size = {\n      width: siblingWidth,\n      height: siblingHeight,\n      x: 0,\n      y: 0\n    };\n  }\n  let maxWidth = 0;\n  let maxHeight = 0;\n  if (block.children?.length > 0) {\n    for (const child of block.children) {\n      setBlockSizes(child, db2);\n    }\n    const childSize = getMaxChildSize(block);\n    maxWidth = childSize.width;\n    maxHeight = childSize.height;\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("setBlockSizes abc95 maxWidth of", block.id, ":s children is ", maxWidth, maxHeight);\n    for (const child of block.children) {\n      if (child.size) {\n        _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(\n          `abc95 Setting size of children of ${block.id} id=${child.id} ${maxWidth} ${maxHeight} ${JSON.stringify(child.size)}`\n        );\n        child.size.width = maxWidth * (child.widthInColumns ?? 1) + padding * ((child.widthInColumns ?? 1) - 1);\n        child.size.height = maxHeight;\n        child.size.x = 0;\n        child.size.y = 0;\n        _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(\n          `abc95 updating size of ${block.id} children child:${child.id} maxWidth:${maxWidth} maxHeight:${maxHeight}`\n        );\n      }\n    }\n    for (const child of block.children) {\n      setBlockSizes(child, db2, maxWidth, maxHeight);\n    }\n    const columns = block.columns ?? -1;\n    let numItems = 0;\n    for (const child of block.children) {\n      numItems += child.widthInColumns ?? 1;\n    }\n    let xSize = block.children.length;\n    if (columns > 0 && columns < numItems) {\n      xSize = columns;\n    }\n    const ySize = Math.ceil(numItems / xSize);\n    let width = xSize * (maxWidth + padding) + padding;\n    let height = ySize * (maxHeight + padding) + padding;\n    if (width < siblingWidth) {\n      _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(\n        `Detected to small siebling: abc95 ${block.id} sieblingWidth ${siblingWidth} sieblingHeight ${siblingHeight} width ${width}`\n      );\n      width = siblingWidth;\n      height = siblingHeight;\n      const childWidth = (siblingWidth - xSize * padding - padding) / xSize;\n      const childHeight = (siblingHeight - ySize * padding - padding) / ySize;\n      _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("Size indata abc88", block.id, "childWidth", childWidth, "maxWidth", maxWidth);\n      _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("Size indata abc88", block.id, "childHeight", childHeight, "maxHeight", maxHeight);\n      _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("Size indata abc88 xSize", xSize, "padding", padding);\n      for (const child of block.children) {\n        if (child.size) {\n          child.size.width = childWidth;\n          child.size.height = childHeight;\n          child.size.x = 0;\n          child.size.y = 0;\n        }\n      }\n    }\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(\n      `abc95 (finale calc) ${block.id} xSize ${xSize} ySize ${ySize} columns ${columns}${block.children.length} width=${Math.max(width, block.size?.width || 0)}`\n    );\n    if (width < (block?.size?.width || 0)) {\n      width = block?.size?.width || 0;\n      const num = columns > 0 ? Math.min(block.children.length, columns) : block.children.length;\n      if (num > 0) {\n        const childWidth = (width - num * padding - padding) / num;\n        _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("abc95 (growing to fit) width", block.id, width, block.size?.width, childWidth);\n        for (const child of block.children) {\n          if (child.size) {\n            child.size.width = childWidth;\n          }\n        }\n      }\n    }\n    block.size = {\n      width,\n      height,\n      x: 0,\n      y: 0\n    };\n  }\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(\n    "setBlockSizes abc94 (done)",\n    block.id,\n    block?.size?.x,\n    block?.size?.width,\n    block?.size?.y,\n    block?.size?.height\n  );\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(setBlockSizes, "setBlockSizes");\nfunction layoutBlocks(block, db2) {\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(\n    `abc85 layout blocks (=>layoutBlocks) ${block.id} x: ${block?.size?.x} y: ${block?.size?.y} width: ${block?.size?.width}`\n  );\n  const columns = block.columns ?? -1;\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("layoutBlocks columns abc95", block.id, "=>", columns, block);\n  if (block.children && // find max width of children\n  block.children.length > 0) {\n    const width = block?.children[0]?.size?.width ?? 0;\n    const widthOfChildren = block.children.length * width + (block.children.length - 1) * padding;\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("widthOfChildren 88", widthOfChildren, "posX");\n    let columnPos = 0;\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("abc91 block?.size?.x", block.id, block?.size?.x);\n    let startingPosX = block?.size?.x ? block?.size?.x + (-block?.size?.width / 2 || 0) : -padding;\n    let rowPos = 0;\n    for (const child of block.children) {\n      const parent = block;\n      if (!child.size) {\n        continue;\n      }\n      const { width: width2, height } = child.size;\n      const { px, py } = calculateBlockPosition(columns, columnPos);\n      if (py != rowPos) {\n        rowPos = py;\n        startingPosX = block?.size?.x ? block?.size?.x + (-block?.size?.width / 2 || 0) : -padding;\n        _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("New row in layout for block", block.id, " and child ", child.id, rowPos);\n      }\n      _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(\n        `abc89 layout blocks (child) id: ${child.id} Pos: ${columnPos} (px, py) ${px},${py} (${parent?.size?.x},${parent?.size?.y}) parent: ${parent.id} width: ${width2}${padding}`\n      );\n      if (parent.size) {\n        const halfWidth = width2 / 2;\n        child.size.x = startingPosX + padding + halfWidth;\n        _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(\n          `abc91 layout blocks (calc) px, pyid:${child.id} startingPos=X${startingPosX} new startingPosX${child.size.x} ${halfWidth} padding=${padding} width=${width2} halfWidth=${halfWidth} => x:${child.size.x} y:${child.size.y} ${child.widthInColumns} (width * (child?.w || 1)) / 2 ${width2 * (child?.widthInColumns ?? 1) / 2}`\n        );\n        startingPosX = child.size.x + halfWidth;\n        child.size.y = parent.size.y - parent.size.height / 2 + py * (height + padding) + height / 2 + padding;\n        _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(\n          `abc88 layout blocks (calc) px, pyid:${child.id}startingPosX${startingPosX}${padding}${halfWidth}=>x:${child.size.x}y:${child.size.y}${child.widthInColumns}(width * (child?.w || 1)) / 2${width2 * (child?.widthInColumns ?? 1) / 2}`\n        );\n      }\n      if (child.children) {\n        layoutBlocks(child, db2);\n      }\n      columnPos += child?.widthInColumns ?? 1;\n      _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("abc88 columnsPos", child, columnPos);\n    }\n  }\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(\n    `layout blocks (<==layoutBlocks) ${block.id} x: ${block?.size?.x} y: ${block?.size?.y} width: ${block?.size?.width}`\n  );\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(layoutBlocks, "layoutBlocks");\nfunction findBounds(block, { minX, minY, maxX, maxY } = { minX: 0, minY: 0, maxX: 0, maxY: 0 }) {\n  if (block.size && block.id !== "root") {\n    const { x, y, width, height } = block.size;\n    if (x - width / 2 < minX) {\n      minX = x - width / 2;\n    }\n    if (y - height / 2 < minY) {\n      minY = y - height / 2;\n    }\n    if (x + width / 2 > maxX) {\n      maxX = x + width / 2;\n    }\n    if (y + height / 2 > maxY) {\n      maxY = y + height / 2;\n    }\n  }\n  if (block.children) {\n    for (const child of block.children) {\n      ({ minX, minY, maxX, maxY } = findBounds(child, { minX, minY, maxX, maxY }));\n    }\n  }\n  return { minX, minY, maxX, maxY };\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(findBounds, "findBounds");\nfunction layout(db2) {\n  const root = db2.getBlock("root");\n  if (!root) {\n    return;\n  }\n  setBlockSizes(root, db2, 0, 0);\n  layoutBlocks(root, db2);\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("getBlocks", JSON.stringify(root, null, 2));\n  const { minX, minY, maxX, maxY } = findBounds(root);\n  const height = maxY - minY;\n  const width = maxX - minX;\n  return { x: minX, y: minY, width, height };\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(layout, "layout");\n\n// src/diagrams/block/renderHelpers.ts\n\n\n// src/dagre-wrapper/createLabel.js\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr("style", styleFn);\n  }\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(applyStyle, "applyStyle");\nfunction addHtmlLabel(node) {\n  const fo = (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(document.createElementNS("http://www.w3.org/2000/svg", "foreignObject"));\n  const div = fo.append("xhtml:div");\n  const label = node.label;\n  const labelClass = node.isNode ? "nodeLabel" : "edgeLabel";\n  const span = div.append("span");\n  span.html(label);\n  applyStyle(span, node.labelStyle);\n  span.attr("class", labelClass);\n  applyStyle(div, node.labelStyle);\n  div.style("display", "inline-block");\n  div.style("white-space", "nowrap");\n  div.attr("xmlns", "http://www.w3.org/1999/xhtml");\n  return fo.node();\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(addHtmlLabel, "addHtmlLabel");\nvar createLabel = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((_vertexText, style, isTitle, isNode) => {\n  let vertexText = _vertexText || "";\n  if (typeof vertexText === "object") {\n    vertexText = vertexText[0];\n  }\n  if ((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .evaluate */ ._3)((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().flowchart.htmlLabels)) {\n    vertexText = vertexText.replace(/\\\\n|\\n/g, "<br />");\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("vertexText" + vertexText);\n    const node = {\n      isNode,\n      label: (0,_chunk_6JOS74DS_mjs__WEBPACK_IMPORTED_MODULE_2__/* .replaceIconSubstring */ .hE)((0,_chunk_7DKRZKHE_mjs__WEBPACK_IMPORTED_MODULE_3__/* .decodeEntities */ .Sm)(vertexText)),\n      labelStyle: style.replace("fill:", "color:")\n    };\n    let vertexNode = addHtmlLabel(node);\n    return vertexNode;\n  } else {\n    const svgLabel = document.createElementNS("http://www.w3.org/2000/svg", "text");\n    svgLabel.setAttribute("style", style.replace("color:", "fill:"));\n    let rows = [];\n    if (typeof vertexText === "string") {\n      rows = vertexText.split(/\\\\n|\\n|<br\\s*\\/?>/gi);\n    } else if (Array.isArray(vertexText)) {\n      rows = vertexText;\n    } else {\n      rows = [];\n    }\n    for (const row of rows) {\n      const tspan = document.createElementNS("http://www.w3.org/2000/svg", "tspan");\n      tspan.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve");\n      tspan.setAttribute("dy", "1em");\n      tspan.setAttribute("x", "0");\n      if (isTitle) {\n        tspan.setAttribute("class", "title-row");\n      } else {\n        tspan.setAttribute("class", "row");\n      }\n      tspan.textContent = row.trim();\n      svgLabel.appendChild(tspan);\n    }\n    return svgLabel;\n  }\n}, "createLabel");\nvar createLabel_default = createLabel;\n\n// src/dagre-wrapper/edges.js\n\n\n// src/dagre-wrapper/edgeMarker.ts\nvar addEdgeMarkers = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((svgPath, edge, url, id, diagramType) => {\n  if (edge.arrowTypeStart) {\n    addEdgeMarker(svgPath, "start", edge.arrowTypeStart, url, id, diagramType);\n  }\n  if (edge.arrowTypeEnd) {\n    addEdgeMarker(svgPath, "end", edge.arrowTypeEnd, url, id, diagramType);\n  }\n}, "addEdgeMarkers");\nvar arrowTypesMap = {\n  arrow_cross: "cross",\n  arrow_point: "point",\n  arrow_barb: "barb",\n  arrow_circle: "circle",\n  aggregation: "aggregation",\n  extension: "extension",\n  composition: "composition",\n  dependency: "dependency",\n  lollipop: "lollipop"\n};\nvar addEdgeMarker = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((svgPath, position, arrowType, url, id, diagramType) => {\n  const endMarkerType = arrowTypesMap[arrowType];\n  if (!endMarkerType) {\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.warn(`Unknown arrow type: ${arrowType}`);\n    return;\n  }\n  const suffix = position === "start" ? "Start" : "End";\n  svgPath.attr(`marker-${position}`, `url(${url}#${id}_${diagramType}-${endMarkerType}${suffix})`);\n}, "addEdgeMarker");\n\n// src/dagre-wrapper/edges.js\nvar edgeLabels = {};\nvar terminalLabels = {};\nvar insertEdgeLabel = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((elem, edge) => {\n  const config2 = (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)();\n  const useHtmlLabels = (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .evaluate */ ._3)(config2.flowchart.htmlLabels);\n  const labelElement = edge.labelType === "markdown" ? (0,_chunk_6JOS74DS_mjs__WEBPACK_IMPORTED_MODULE_2__/* .createText */ .GZ)(\n    elem,\n    edge.label,\n    {\n      style: edge.labelStyle,\n      useHtmlLabels,\n      addSvgBackground: true\n    },\n    config2\n  ) : createLabel_default(edge.label, edge.labelStyle);\n  const edgeLabel = elem.insert("g").attr("class", "edgeLabel");\n  const label = edgeLabel.insert("g").attr("class", "label");\n  label.node().appendChild(labelElement);\n  let bbox = labelElement.getBBox();\n  if (useHtmlLabels) {\n    const div = labelElement.children[0];\n    const dv = (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(labelElement);\n    bbox = div.getBoundingClientRect();\n    dv.attr("width", bbox.width);\n    dv.attr("height", bbox.height);\n  }\n  label.attr("transform", "translate(" + -bbox.width / 2 + ", " + -bbox.height / 2 + ")");\n  edgeLabels[edge.id] = edgeLabel;\n  edge.width = bbox.width;\n  edge.height = bbox.height;\n  let fo;\n  if (edge.startLabelLeft) {\n    const startLabelElement = createLabel_default(edge.startLabelLeft, edge.labelStyle);\n    const startEdgeLabelLeft = elem.insert("g").attr("class", "edgeTerminals");\n    const inner = startEdgeLabelLeft.insert("g").attr("class", "inner");\n    fo = inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr("transform", "translate(" + -slBox.width / 2 + ", " + -slBox.height / 2 + ")");\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startLeft = startEdgeLabelLeft;\n    setTerminalWidth(fo, edge.startLabelLeft);\n  }\n  if (edge.startLabelRight) {\n    const startLabelElement = createLabel_default(edge.startLabelRight, edge.labelStyle);\n    const startEdgeLabelRight = elem.insert("g").attr("class", "edgeTerminals");\n    const inner = startEdgeLabelRight.insert("g").attr("class", "inner");\n    fo = startEdgeLabelRight.node().appendChild(startLabelElement);\n    inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr("transform", "translate(" + -slBox.width / 2 + ", " + -slBox.height / 2 + ")");\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startRight = startEdgeLabelRight;\n    setTerminalWidth(fo, edge.startLabelRight);\n  }\n  if (edge.endLabelLeft) {\n    const endLabelElement = createLabel_default(edge.endLabelLeft, edge.labelStyle);\n    const endEdgeLabelLeft = elem.insert("g").attr("class", "edgeTerminals");\n    const inner = endEdgeLabelLeft.insert("g").attr("class", "inner");\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr("transform", "translate(" + -slBox.width / 2 + ", " + -slBox.height / 2 + ")");\n    endEdgeLabelLeft.node().appendChild(endLabelElement);\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endLeft = endEdgeLabelLeft;\n    setTerminalWidth(fo, edge.endLabelLeft);\n  }\n  if (edge.endLabelRight) {\n    const endLabelElement = createLabel_default(edge.endLabelRight, edge.labelStyle);\n    const endEdgeLabelRight = elem.insert("g").attr("class", "edgeTerminals");\n    const inner = endEdgeLabelRight.insert("g").attr("class", "inner");\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr("transform", "translate(" + -slBox.width / 2 + ", " + -slBox.height / 2 + ")");\n    endEdgeLabelRight.node().appendChild(endLabelElement);\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endRight = endEdgeLabelRight;\n    setTerminalWidth(fo, edge.endLabelRight);\n  }\n  return labelElement;\n}, "insertEdgeLabel");\nfunction setTerminalWidth(fo, value) {\n  if ((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().flowchart.htmlLabels && fo) {\n    fo.style.width = value.length * 9 + "px";\n    fo.style.height = "12px";\n  }\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(setTerminalWidth, "setTerminalWidth");\nvar positionEdgeLabel = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((edge, paths) => {\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("Moving label abc88 ", edge.id, edge.label, edgeLabels[edge.id], paths);\n  let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  const siteConfig = (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)();\n  const { subGraphTitleTotalMargin } = (0,_chunk_3X56UNUX_mjs__WEBPACK_IMPORTED_MODULE_1__/* .getSubGraphTitleMargins */ .O)(siteConfig);\n  if (edge.label) {\n    const el = edgeLabels[edge.id];\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = _chunk_7DKRZKHE_mjs__WEBPACK_IMPORTED_MODULE_3__/* .utils_default */ ._K.calcLabelPosition(path);\n      _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(\n        "Moving label " + edge.label + " from (",\n        x,\n        ",",\n        y,\n        ") to (",\n        pos.x,\n        ",",\n        pos.y,\n        ") abc88"\n      );\n      if (paths.updatedPath) {\n        x = pos.x;\n        y = pos.y;\n      }\n    }\n    el.attr("transform", `translate(${x}, ${y + subGraphTitleTotalMargin / 2})`);\n  }\n  if (edge.startLabelLeft) {\n    const el = terminalLabels[edge.id].startLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = _chunk_7DKRZKHE_mjs__WEBPACK_IMPORTED_MODULE_3__/* .utils_default */ ._K.calcTerminalLabelPosition(edge.arrowTypeStart ? 10 : 0, "start_left", path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr("transform", `translate(${x}, ${y})`);\n  }\n  if (edge.startLabelRight) {\n    const el = terminalLabels[edge.id].startRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = _chunk_7DKRZKHE_mjs__WEBPACK_IMPORTED_MODULE_3__/* .utils_default */ ._K.calcTerminalLabelPosition(\n        edge.arrowTypeStart ? 10 : 0,\n        "start_right",\n        path\n      );\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr("transform", `translate(${x}, ${y})`);\n  }\n  if (edge.endLabelLeft) {\n    const el = terminalLabels[edge.id].endLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = _chunk_7DKRZKHE_mjs__WEBPACK_IMPORTED_MODULE_3__/* .utils_default */ ._K.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, "end_left", path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr("transform", `translate(${x}, ${y})`);\n  }\n  if (edge.endLabelRight) {\n    const el = terminalLabels[edge.id].endRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = _chunk_7DKRZKHE_mjs__WEBPACK_IMPORTED_MODULE_3__/* .utils_default */ ._K.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, "end_right", path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr("transform", `translate(${x}, ${y})`);\n  }\n}, "positionEdgeLabel");\nvar outsideNode = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((node, point2) => {\n  const x = node.x;\n  const y = node.y;\n  const dx = Math.abs(point2.x - x);\n  const dy = Math.abs(point2.y - y);\n  const w = node.width / 2;\n  const h = node.height / 2;\n  if (dx >= w || dy >= h) {\n    return true;\n  }\n  return false;\n}, "outsideNode");\nvar intersection = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((node, outsidePoint, insidePoint) => {\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(`intersection calc abc89:\n  outsidePoint: ${JSON.stringify(outsidePoint)}\n  insidePoint : ${JSON.stringify(insidePoint)}\n  node        : x:${node.x} y:${node.y} w:${node.width} h:${node.height}`);\n  const x = node.x;\n  const y = node.y;\n  const dx = Math.abs(x - insidePoint.x);\n  const w = node.width / 2;\n  let r = insidePoint.x < outsidePoint.x ? w - dx : w + dx;\n  const h = node.height / 2;\n  const Q = Math.abs(outsidePoint.y - insidePoint.y);\n  const R = Math.abs(outsidePoint.x - insidePoint.x);\n  if (Math.abs(y - outsidePoint.y) * w > Math.abs(x - outsidePoint.x) * h) {\n    let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    r = R * q / Q;\n    const res = {\n      x: insidePoint.x < outsidePoint.x ? insidePoint.x + r : insidePoint.x - R + r,\n      y: insidePoint.y < outsidePoint.y ? insidePoint.y + Q - q : insidePoint.y - Q + q\n    };\n    if (r === 0) {\n      res.x = outsidePoint.x;\n      res.y = outsidePoint.y;\n    }\n    if (R === 0) {\n      res.x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      res.y = outsidePoint.y;\n    }\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(`abc89 topp/bott calc, Q ${Q}, q ${q}, R ${R}, r ${r}`, res);\n    return res;\n  } else {\n    if (insidePoint.x < outsidePoint.x) {\n      r = outsidePoint.x - w - x;\n    } else {\n      r = x - w - outsidePoint.x;\n    }\n    let q = Q * r / R;\n    let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x - R + r;\n    let _y = insidePoint.y < outsidePoint.y ? insidePoint.y + q : insidePoint.y - q;\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug(`sides calc abc89, Q ${Q}, q ${q}, R ${R}, r ${r}`, { _x, _y });\n    if (r === 0) {\n      _x = outsidePoint.x;\n      _y = outsidePoint.y;\n    }\n    if (R === 0) {\n      _x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      _y = outsidePoint.y;\n    }\n    return { x: _x, y: _y };\n  }\n}, "intersection");\nvar cutPathAtIntersect = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((_points, boundaryNode) => {\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("abc88 cutPathAtIntersect", _points, boundaryNode);\n  let points = [];\n  let lastPointOutside = _points[0];\n  let isInside = false;\n  _points.forEach((point2) => {\n    if (!outsideNode(boundaryNode, point2) && !isInside) {\n      const inter = intersection(boundaryNode, lastPointOutside, point2);\n      let pointPresent = false;\n      points.forEach((p) => {\n        pointPresent = pointPresent || p.x === inter.x && p.y === inter.y;\n      });\n      if (!points.some((e) => e.x === inter.x && e.y === inter.y)) {\n        points.push(inter);\n      }\n      isInside = true;\n    } else {\n      lastPointOutside = point2;\n      if (!isInside) {\n        points.push(point2);\n      }\n    }\n  });\n  return points;\n}, "cutPathAtIntersect");\nvar insertEdge = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function(elem, e, edge, clusterDb, diagramType, graph, id) {\n  let points = edge.points;\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("abc88 InsertEdge: edge=", edge, "e=", e);\n  let pointsHasChanged = false;\n  const tail = graph.node(e.v);\n  var head = graph.node(e.w);\n  if (head?.intersect && tail?.intersect) {\n    points = points.slice(1, edge.points.length - 1);\n    points.unshift(tail.intersect(points[0]));\n    points.push(head.intersect(points[points.length - 1]));\n  }\n  if (edge.toCluster) {\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("to cluster abc88", clusterDb[edge.toCluster]);\n    points = cutPathAtIntersect(edge.points, clusterDb[edge.toCluster].node);\n    pointsHasChanged = true;\n  }\n  if (edge.fromCluster) {\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("from cluster abc88", clusterDb[edge.fromCluster]);\n    points = cutPathAtIntersect(points.reverse(), clusterDb[edge.fromCluster].node).reverse();\n    pointsHasChanged = true;\n  }\n  const lineData = points.filter((p) => !Number.isNaN(p.y));\n  let curve = d3__WEBPACK_IMPORTED_MODULE_8__/* .curveBasis */ .qrM;\n  if (edge.curve && (diagramType === "graph" || diagramType === "flowchart")) {\n    curve = edge.curve;\n  }\n  const { x, y } = (0,_chunk_3JNJP5BE_mjs__WEBPACK_IMPORTED_MODULE_0__/* .getLineFunctionsWithOffset */ .R)(edge);\n  const lineFunction = (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .line */ .n8j)().x(x).y(y).curve(curve);\n  let strokeClasses;\n  switch (edge.thickness) {\n    case "normal":\n      strokeClasses = "edge-thickness-normal";\n      break;\n    case "thick":\n      strokeClasses = "edge-thickness-thick";\n      break;\n    case "invisible":\n      strokeClasses = "edge-thickness-thick";\n      break;\n    default:\n      strokeClasses = "";\n  }\n  switch (edge.pattern) {\n    case "solid":\n      strokeClasses += " edge-pattern-solid";\n      break;\n    case "dotted":\n      strokeClasses += " edge-pattern-dotted";\n      break;\n    case "dashed":\n      strokeClasses += " edge-pattern-dashed";\n      break;\n  }\n  const svgPath = elem.append("path").attr("d", lineFunction(lineData)).attr("id", edge.id).attr("class", " " + strokeClasses + (edge.classes ? " " + edge.classes : "")).attr("style", edge.style);\n  let url = "";\n  if ((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().flowchart.arrowMarkerAbsolute || (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().state.arrowMarkerAbsolute) {\n    url = window.location.protocol + "//" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, "\\\\(");\n    url = url.replace(/\\)/g, "\\\\)");\n  }\n  addEdgeMarkers(svgPath, edge, url, id, diagramType);\n  let paths = {};\n  if (pointsHasChanged) {\n    paths.updatedPath = points;\n  }\n  paths.originalPath = edge.points;\n  return paths;\n}, "insertEdge");\n\n// src/dagre-wrapper/nodes.js\n\n\n// src/dagre-wrapper/blockArrowHelper.ts\nvar expandAndDeduplicateDirections = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((directions) => {\n  const uniqueDirections = /* @__PURE__ */ new Set();\n  for (const direction of directions) {\n    switch (direction) {\n      case "x":\n        uniqueDirections.add("right");\n        uniqueDirections.add("left");\n        break;\n      case "y":\n        uniqueDirections.add("up");\n        uniqueDirections.add("down");\n        break;\n      default:\n        uniqueDirections.add(direction);\n        break;\n    }\n  }\n  return uniqueDirections;\n}, "expandAndDeduplicateDirections");\nvar getArrowPoints = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((duplicatedDirections, bbox, node) => {\n  const directions = expandAndDeduplicateDirections(duplicatedDirections);\n  const f = 2;\n  const height = bbox.height + 2 * node.padding;\n  const midpoint = height / f;\n  const width = bbox.width + 2 * midpoint + node.padding;\n  const padding2 = node.padding / 2;\n  if (directions.has("right") && directions.has("left") && directions.has("up") && directions.has("down")) {\n    return [\n      // Bottom\n      { x: 0, y: 0 },\n      { x: midpoint, y: 0 },\n      { x: width / 2, y: 2 * padding2 },\n      { x: width - midpoint, y: 0 },\n      { x: width, y: 0 },\n      // Right\n      { x: width, y: -height / 3 },\n      { x: width + 2 * padding2, y: -height / 2 },\n      { x: width, y: -2 * height / 3 },\n      { x: width, y: -height },\n      // Top\n      { x: width - midpoint, y: -height },\n      { x: width / 2, y: -height - 2 * padding2 },\n      { x: midpoint, y: -height },\n      // Left\n      { x: 0, y: -height },\n      { x: 0, y: -2 * height / 3 },\n      { x: -2 * padding2, y: -height / 2 },\n      { x: 0, y: -height / 3 }\n    ];\n  }\n  if (directions.has("right") && directions.has("left") && directions.has("up")) {\n    return [\n      { x: midpoint, y: 0 },\n      { x: width - midpoint, y: 0 },\n      { x: width, y: -height / 2 },\n      { x: width - midpoint, y: -height },\n      { x: midpoint, y: -height },\n      { x: 0, y: -height / 2 }\n    ];\n  }\n  if (directions.has("right") && directions.has("left") && directions.has("down")) {\n    return [\n      { x: 0, y: 0 },\n      { x: midpoint, y: -height },\n      { x: width - midpoint, y: -height },\n      { x: width, y: 0 }\n    ];\n  }\n  if (directions.has("right") && directions.has("up") && directions.has("down")) {\n    return [\n      { x: 0, y: 0 },\n      { x: width, y: -midpoint },\n      { x: width, y: -height + midpoint },\n      { x: 0, y: -height }\n    ];\n  }\n  if (directions.has("left") && directions.has("up") && directions.has("down")) {\n    return [\n      { x: width, y: 0 },\n      { x: 0, y: -midpoint },\n      { x: 0, y: -height + midpoint },\n      { x: width, y: -height }\n    ];\n  }\n  if (directions.has("right") && directions.has("left")) {\n    return [\n      { x: midpoint, y: 0 },\n      { x: midpoint, y: -padding2 },\n      { x: width - midpoint, y: -padding2 },\n      { x: width - midpoint, y: 0 },\n      { x: width, y: -height / 2 },\n      { x: width - midpoint, y: -height },\n      { x: width - midpoint, y: -height + padding2 },\n      { x: midpoint, y: -height + padding2 },\n      { x: midpoint, y: -height },\n      { x: 0, y: -height / 2 }\n    ];\n  }\n  if (directions.has("up") && directions.has("down")) {\n    return [\n      // Bottom center\n      { x: width / 2, y: 0 },\n      // Left pont of bottom arrow\n      { x: 0, y: -padding2 },\n      { x: midpoint, y: -padding2 },\n      // Left top over vertical section\n      { x: midpoint, y: -height + padding2 },\n      { x: 0, y: -height + padding2 },\n      // Top of arrow\n      { x: width / 2, y: -height },\n      { x: width, y: -height + padding2 },\n      // Top of right vertical bar\n      { x: width - midpoint, y: -height + padding2 },\n      { x: width - midpoint, y: -padding2 },\n      { x: width, y: -padding2 }\n    ];\n  }\n  if (directions.has("right") && directions.has("up")) {\n    return [\n      { x: 0, y: 0 },\n      { x: width, y: -midpoint },\n      { x: 0, y: -height }\n    ];\n  }\n  if (directions.has("right") && directions.has("down")) {\n    return [\n      { x: 0, y: 0 },\n      { x: width, y: 0 },\n      { x: 0, y: -height }\n    ];\n  }\n  if (directions.has("left") && directions.has("up")) {\n    return [\n      { x: width, y: 0 },\n      { x: 0, y: -midpoint },\n      { x: width, y: -height }\n    ];\n  }\n  if (directions.has("left") && directions.has("down")) {\n    return [\n      { x: width, y: 0 },\n      { x: 0, y: 0 },\n      { x: width, y: -height }\n    ];\n  }\n  if (directions.has("right")) {\n    return [\n      { x: midpoint, y: -padding2 },\n      { x: midpoint, y: -padding2 },\n      { x: width - midpoint, y: -padding2 },\n      { x: width - midpoint, y: 0 },\n      { x: width, y: -height / 2 },\n      { x: width - midpoint, y: -height },\n      { x: width - midpoint, y: -height + padding2 },\n      // top left corner of arrow\n      { x: midpoint, y: -height + padding2 },\n      { x: midpoint, y: -height + padding2 }\n    ];\n  }\n  if (directions.has("left")) {\n    return [\n      { x: midpoint, y: 0 },\n      { x: midpoint, y: -padding2 },\n      // Two points, the right corners\n      { x: width - midpoint, y: -padding2 },\n      { x: width - midpoint, y: -height + padding2 },\n      { x: midpoint, y: -height + padding2 },\n      { x: midpoint, y: -height },\n      { x: 0, y: -height / 2 }\n    ];\n  }\n  if (directions.has("up")) {\n    return [\n      // Bottom center\n      { x: midpoint, y: -padding2 },\n      // Left top over vertical section\n      { x: midpoint, y: -height + padding2 },\n      { x: 0, y: -height + padding2 },\n      // Top of arrow\n      { x: width / 2, y: -height },\n      { x: width, y: -height + padding2 },\n      // Top of right vertical bar\n      { x: width - midpoint, y: -height + padding2 },\n      { x: width - midpoint, y: -padding2 }\n    ];\n  }\n  if (directions.has("down")) {\n    return [\n      // Bottom center\n      { x: width / 2, y: 0 },\n      // Left pont of bottom arrow\n      { x: 0, y: -padding2 },\n      { x: midpoint, y: -padding2 },\n      // Left top over vertical section\n      { x: midpoint, y: -height + padding2 },\n      { x: width - midpoint, y: -height + padding2 },\n      { x: width - midpoint, y: -padding2 },\n      { x: width, y: -padding2 }\n    ];\n  }\n  return [{ x: 0, y: 0 }];\n}, "getArrowPoints");\n\n// src/dagre-wrapper/intersect/intersect-node.js\nfunction intersectNode(node, point2) {\n  return node.intersect(point2);\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(intersectNode, "intersectNode");\nvar intersect_node_default = intersectNode;\n\n// src/dagre-wrapper/intersect/intersect-ellipse.js\nfunction intersectEllipse(node, rx, ry, point2) {\n  var cx = node.x;\n  var cy = node.y;\n  var px = cx - point2.x;\n  var py = cy - point2.y;\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n  var dx = Math.abs(rx * ry * px / det);\n  if (point2.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point2.y < cy) {\n    dy = -dy;\n  }\n  return { x: cx + dx, y: cy + dy };\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(intersectEllipse, "intersectEllipse");\nvar intersect_ellipse_default = intersectEllipse;\n\n// src/dagre-wrapper/intersect/intersect-circle.js\nfunction intersectCircle(node, rx, point2) {\n  return intersect_ellipse_default(node, rx, rx, point2);\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(intersectCircle, "intersectCircle");\nvar intersect_circle_default = intersectCircle;\n\n// src/dagre-wrapper/intersect/intersect-line.js\nfunction intersectLine(p1, p2, q1, q2) {\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return;\n  }\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return;\n  }\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return;\n  }\n  offset = Math.abs(denom / 2);\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n  return { x, y };\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(intersectLine, "intersectLine");\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(sameSign, "sameSign");\nvar intersect_line_default = intersectLine;\n\n// src/dagre-wrapper/intersect/intersect-polygon.js\nvar intersect_polygon_default = intersectPolygon;\nfunction intersectPolygon(node, polyPoints, point2) {\n  var x1 = node.x;\n  var y1 = node.y;\n  var intersections = [];\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  if (typeof polyPoints.forEach === "function") {\n    polyPoints.forEach(function(entry) {\n      minX = Math.min(minX, entry.x);\n      minY = Math.min(minY, entry.y);\n    });\n  } else {\n    minX = Math.min(minX, polyPoints.x);\n    minY = Math.min(minY, polyPoints.y);\n  }\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersect_line_default(\n      node,\n      point2,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n  if (!intersections.length) {\n    return node;\n  }\n  if (intersections.length > 1) {\n    intersections.sort(function(p, q) {\n      var pdx = p.x - point2.x;\n      var pdy = p.y - point2.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n      var qdx = q.x - point2.x;\n      var qdy = q.y - point2.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(intersectPolygon, "intersectPolygon");\n\n// src/dagre-wrapper/intersect/intersect-rect.js\nvar intersectRect = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((node, point2) => {\n  var x = node.x;\n  var y = node.y;\n  var dx = point2.x - x;\n  var dy = point2.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n  return { x: x + sx, y: y + sy };\n}, "intersectRect");\nvar intersect_rect_default = intersectRect;\n\n// src/dagre-wrapper/intersect/index.js\nvar intersect_default = {\n  node: intersect_node_default,\n  circle: intersect_circle_default,\n  ellipse: intersect_ellipse_default,\n  polygon: intersect_polygon_default,\n  rect: intersect_rect_default\n};\n\n// src/dagre-wrapper/shapes/util.js\n\nvar labelHelper = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node, _classes, isNode) => {\n  const config2 = (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)();\n  let classes2;\n  const useHtmlLabels = node.useHtmlLabels || (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .evaluate */ ._3)(config2.flowchart.htmlLabels);\n  if (!_classes) {\n    classes2 = "node default";\n  } else {\n    classes2 = _classes;\n  }\n  const shapeSvg = parent.insert("g").attr("class", classes2).attr("id", node.domId || node.id);\n  const label = shapeSvg.insert("g").attr("class", "label").attr("style", node.labelStyle);\n  let labelText;\n  if (node.labelText === void 0) {\n    labelText = "";\n  } else {\n    labelText = typeof node.labelText === "string" ? node.labelText : node.labelText[0];\n  }\n  const textNode = label.node();\n  let text;\n  if (node.labelType === "markdown") {\n    text = (0,_chunk_6JOS74DS_mjs__WEBPACK_IMPORTED_MODULE_2__/* .createText */ .GZ)(\n      label,\n      (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .sanitizeText */ .jZ)((0,_chunk_7DKRZKHE_mjs__WEBPACK_IMPORTED_MODULE_3__/* .decodeEntities */ .Sm)(labelText), config2),\n      {\n        useHtmlLabels,\n        width: node.width || config2.flowchart.wrappingWidth,\n        classes: "markdown-node-label"\n      },\n      config2\n    );\n  } else {\n    text = textNode.appendChild(\n      createLabel_default((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .sanitizeText */ .jZ)((0,_chunk_7DKRZKHE_mjs__WEBPACK_IMPORTED_MODULE_3__/* .decodeEntities */ .Sm)(labelText), config2), node.labelStyle, false, isNode)\n    );\n  }\n  let bbox = text.getBBox();\n  const halfPadding = node.padding / 2;\n  if ((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .evaluate */ ._3)(config2.flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(text);\n    const images = div.getElementsByTagName("img");\n    if (images) {\n      const noImgText = labelText.replace(/<img[^>]*>/g, "").trim() === "";\n      await Promise.all(\n        [...images].map(\n          (img) => new Promise((res) => {\n            function setupImage() {\n              img.style.display = "flex";\n              img.style.flexDirection = "column";\n              if (noImgText) {\n                const bodyFontSize = config2.fontSize ? config2.fontSize : window.getComputedStyle(document.body).fontSize;\n                const enlargingFactor = 5;\n                const width = parseInt(bodyFontSize, 10) * enlargingFactor + "px";\n                img.style.minWidth = width;\n                img.style.maxWidth = width;\n              } else {\n                img.style.width = "100%";\n              }\n              res(img);\n            }\n            (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(setupImage, "setupImage");\n            setTimeout(() => {\n              if (img.complete) {\n                setupImage();\n              }\n            });\n            img.addEventListener("error", setupImage);\n            img.addEventListener("load", setupImage);\n          })\n        )\n      );\n    }\n    bbox = div.getBoundingClientRect();\n    dv.attr("width", bbox.width);\n    dv.attr("height", bbox.height);\n  }\n  if (useHtmlLabels) {\n    label.attr("transform", "translate(" + -bbox.width / 2 + ", " + -bbox.height / 2 + ")");\n  } else {\n    label.attr("transform", "translate(0, " + -bbox.height / 2 + ")");\n  }\n  if (node.centerLabel) {\n    label.attr("transform", "translate(" + -bbox.width / 2 + ", " + -bbox.height / 2 + ")");\n  }\n  label.insert("rect", ":first-child");\n  return { shapeSvg, bbox, halfPadding, label };\n}, "labelHelper");\nvar updateNodeBounds = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((node, element) => {\n  const bbox = element.node().getBBox();\n  node.width = bbox.width;\n  node.height = bbox.height;\n}, "updateNodeBounds");\nfunction insertPolygonShape(parent, w, h, points) {\n  return parent.insert("polygon", ":first-child").attr(\n    "points",\n    points.map(function(d) {\n      return d.x + "," + d.y;\n    }).join(" ")\n  ).attr("class", "label-container").attr("transform", "translate(" + -w / 2 + "," + h / 2 + ")");\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(insertPolygonShape, "insertPolygonShape");\n\n// src/dagre-wrapper/shapes/note.js\nvar note = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const useHtmlLabels = node.useHtmlLabels || (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().flowchart.htmlLabels;\n  if (!useHtmlLabels) {\n    node.centerLabel = true;\n  }\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    "node " + node.classes,\n    true\n  );\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.info("Classes = ", node.classes);\n  const rect2 = shapeSvg.insert("rect", ":first-child");\n  rect2.attr("rx", node.rx).attr("ry", node.ry).attr("x", -bbox.width / 2 - halfPadding).attr("y", -bbox.height / 2 - halfPadding).attr("width", bbox.width + node.padding).attr("height", bbox.height + node.padding);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect_default.rect(node, point2);\n  };\n  return shapeSvg;\n}, "note");\nvar note_default = note;\n\n// src/dagre-wrapper/nodes.js\nvar formatClass = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((str) => {\n  if (str) {\n    return " " + str;\n  }\n  return "";\n}, "formatClass");\nvar getClassesFromNode = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((node, otherClasses) => {\n  return `${otherClasses ? otherClasses : "node default"}${formatClass(node.classes)} ${formatClass(\n    node.class\n  )}`;\n}, "getClassesFromNode");\nvar question = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const s = w + h;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 }\n  ];\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.info("Question main (Circle)");\n  const questionElem = insertPolygonShape(shapeSvg, s, s, points);\n  questionElem.attr("style", node.style);\n  updateNodeBounds(node, questionElem);\n  node.intersect = function(point2) {\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.warn("Intersect called");\n    return intersect_default.polygon(node, points, point2);\n  };\n  return shapeSvg;\n}, "question");\nvar choice = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((parent, node) => {\n  const shapeSvg = parent.insert("g").attr("class", "node default").attr("id", node.domId || node.id);\n  const s = 28;\n  const points = [\n    { x: 0, y: s / 2 },\n    { x: s / 2, y: 0 },\n    { x: 0, y: -s / 2 },\n    { x: -s / 2, y: 0 }\n  ];\n  const choice2 = shapeSvg.insert("polygon", ":first-child").attr(\n    "points",\n    points.map(function(d) {\n      return d.x + "," + d.y;\n    }).join(" ")\n  );\n  choice2.attr("class", "state-start").attr("r", 7).attr("width", 28).attr("height", 28);\n  node.width = 28;\n  node.height = 28;\n  node.intersect = function(point2) {\n    return intersect_default.circle(node, 14, point2);\n  };\n  return shapeSvg;\n}, "choice");\nvar hexagon = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const f = 4;\n  const h = bbox.height + node.padding;\n  const m = h / f;\n  const w = bbox.width + 2 * m + node.padding;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  const hex = insertPolygonShape(shapeSvg, w, h, points);\n  hex.attr("style", node.style);\n  updateNodeBounds(node, hex);\n  node.intersect = function(point2) {\n    return intersect_default.polygon(node, points, point2);\n  };\n  return shapeSvg;\n}, "hexagon");\nvar block_arrow = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(parent, node, void 0, true);\n  const f = 2;\n  const h = bbox.height + 2 * node.padding;\n  const m = h / f;\n  const w = bbox.width + 2 * m + node.padding;\n  const points = getArrowPoints(node.directions, bbox, node);\n  const blockArrow = insertPolygonShape(shapeSvg, w, h, points);\n  blockArrow.attr("style", node.style);\n  updateNodeBounds(node, blockArrow);\n  node.intersect = function(point2) {\n    return intersect_default.polygon(node, points, point2);\n  };\n  return shapeSvg;\n}, "block_arrow");\nvar rect_left_inv_arrow = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr("style", node.style);\n  node.width = w + h;\n  node.height = h;\n  node.intersect = function(point2) {\n    return intersect_default.polygon(node, points, point2);\n  };\n  return shapeSvg;\n}, "rect_left_inv_arrow");\nvar lean_right = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getClassesFromNode(node), true);\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -2 * h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: -h },\n    { x: h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr("style", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect_default.polygon(node, points, point2);\n  };\n  return shapeSvg;\n}, "lean_right");\nvar lean_left = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 2 * h / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - 2 * h / 6, y: -h },\n    { x: -h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr("style", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect_default.polygon(node, points, point2);\n  };\n  return shapeSvg;\n}, "lean_left");\nvar trapezoid = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -2 * h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr("style", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect_default.polygon(node, points, point2);\n  };\n  return shapeSvg;\n}, "trapezoid");\nvar inv_trapezoid = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: -h },\n    { x: -2 * h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr("style", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect_default.polygon(node, points, point2);\n  };\n  return shapeSvg;\n}, "inv_trapezoid");\nvar rect_right_inv_arrow = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr("style", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect_default.polygon(node, points, point2);\n  };\n  return shapeSvg;\n}, "rect_right_inv_arrow");\nvar cylinder = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry + node.padding;\n  const shape = "M 0," + ry + " a " + rx + "," + ry + " 0,0,0 " + w + " 0 a " + rx + "," + ry + " 0,0,0 " + -w + " 0 l 0," + h + " a " + rx + "," + ry + " 0,0,0 " + w + " 0 l 0," + -h;\n  const el = shapeSvg.attr("label-offset-y", ry).insert("path", ":first-child").attr("style", node.style).attr("d", shape).attr("transform", "translate(" + -w / 2 + "," + -(h / 2 + ry) + ")");\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    const pos = intersect_default.rect(node, point2);\n    const x = pos.x - node.x;\n    if (rx != 0 && (Math.abs(x) < node.width / 2 || Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry)) {\n      let y = ry * ry * (1 - x * x / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point2.y - node.y > 0) {\n        y = -y;\n      }\n      pos.y += y;\n    }\n    return pos;\n  };\n  return shapeSvg;\n}, "cylinder");\nvar rect = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    "node " + node.classes + " " + node.class,\n    true\n  );\n  const rect2 = shapeSvg.insert("rect", ":first-child");\n  const totalWidth = node.positioned ? node.width : bbox.width + node.padding;\n  const totalHeight = node.positioned ? node.height : bbox.height + node.padding;\n  const x = node.positioned ? -totalWidth / 2 : -bbox.width / 2 - halfPadding;\n  const y = node.positioned ? -totalHeight / 2 : -bbox.height / 2 - halfPadding;\n  rect2.attr("class", "basic label-container").attr("style", node.style).attr("rx", node.rx).attr("ry", node.ry).attr("x", x).attr("y", y).attr("width", totalWidth).attr("height", totalHeight);\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect2, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete("borders");\n    }\n    propKeys.forEach((propKey) => {\n      _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.warn(`Unknown node property ${propKey}`);\n    });\n  }\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect_default.rect(node, point2);\n  };\n  return shapeSvg;\n}, "rect");\nvar composite = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    "node " + node.classes,\n    true\n  );\n  const rect2 = shapeSvg.insert("rect", ":first-child");\n  const totalWidth = node.positioned ? node.width : bbox.width + node.padding;\n  const totalHeight = node.positioned ? node.height : bbox.height + node.padding;\n  const x = node.positioned ? -totalWidth / 2 : -bbox.width / 2 - halfPadding;\n  const y = node.positioned ? -totalHeight / 2 : -bbox.height / 2 - halfPadding;\n  rect2.attr("class", "basic cluster composite label-container").attr("style", node.style).attr("rx", node.rx).attr("ry", node.ry).attr("x", x).attr("y", y).attr("width", totalWidth).attr("height", totalHeight);\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect2, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete("borders");\n    }\n    propKeys.forEach((propKey) => {\n      _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.warn(`Unknown node property ${propKey}`);\n    });\n  }\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect_default.rect(node, point2);\n  };\n  return shapeSvg;\n}, "composite");\nvar labelRect = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg } = await labelHelper(parent, node, "label", true);\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.trace("Classes = ", node.class);\n  const rect2 = shapeSvg.insert("rect", ":first-child");\n  const totalWidth = 0;\n  const totalHeight = 0;\n  rect2.attr("width", totalWidth).attr("height", totalHeight);\n  shapeSvg.attr("class", "label edgeLabel");\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect2, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete("borders");\n    }\n    propKeys.forEach((propKey) => {\n      _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.warn(`Unknown node property ${propKey}`);\n    });\n  }\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect_default.rect(node, point2);\n  };\n  return shapeSvg;\n}, "labelRect");\nfunction applyNodePropertyBorders(rect2, borders, totalWidth, totalHeight) {\n  const strokeDashArray = [];\n  const addBorder = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((length) => {\n    strokeDashArray.push(length, 0);\n  }, "addBorder");\n  const skipBorder = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((length) => {\n    strokeDashArray.push(0, length);\n  }, "skipBorder");\n  if (borders.includes("t")) {\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("add top border");\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes("r")) {\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("add right border");\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  if (borders.includes("b")) {\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("add bottom border");\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes("l")) {\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("add left border");\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  rect2.attr("stroke-dasharray", strokeDashArray.join(" "));\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(applyNodePropertyBorders, "applyNodePropertyBorders");\nvar rectWithTitle = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((parent, node) => {\n  let classes2;\n  if (!node.classes) {\n    classes2 = "node default";\n  } else {\n    classes2 = "node " + node.classes;\n  }\n  const shapeSvg = parent.insert("g").attr("class", classes2).attr("id", node.domId || node.id);\n  const rect2 = shapeSvg.insert("rect", ":first-child");\n  const innerLine = shapeSvg.insert("line");\n  const label = shapeSvg.insert("g").attr("class", "label");\n  const text2 = node.labelText.flat ? node.labelText.flat() : node.labelText;\n  let title = "";\n  if (typeof text2 === "object") {\n    title = text2[0];\n  } else {\n    title = text2;\n  }\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.info("Label text abc79", title, text2, typeof text2 === "object");\n  const text = label.node().appendChild(createLabel_default(title, node.labelStyle, true, true));\n  let bbox = { width: 0, height: 0 };\n  if ((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .evaluate */ ._3)((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr("width", bbox.width);\n    dv.attr("height", bbox.height);\n  }\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.info("Text 2", text2);\n  const textRows = text2.slice(1, text2.length);\n  let titleBox = text.getBBox();\n  const descr = label.node().appendChild(\n    createLabel_default(textRows.join ? textRows.join("<br/>") : textRows, node.labelStyle, true, true)\n  );\n  if ((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .evaluate */ ._3)((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().flowchart.htmlLabels)) {\n    const div = descr.children[0];\n    const dv = (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(descr);\n    bbox = div.getBoundingClientRect();\n    dv.attr("width", bbox.width);\n    dv.attr("height", bbox.height);\n  }\n  const halfPadding = node.padding / 2;\n  (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(descr).attr(\n    "transform",\n    "translate( " + // (titleBox.width - bbox.width) / 2 +\n    (bbox.width > titleBox.width ? 0 : (titleBox.width - bbox.width) / 2) + ", " + (titleBox.height + halfPadding + 5) + ")"\n  );\n  (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(text).attr(\n    "transform",\n    "translate( " + // (titleBox.width - bbox.width) / 2 +\n    (bbox.width < titleBox.width ? 0 : -(titleBox.width - bbox.width) / 2) + ", 0)"\n  );\n  bbox = label.node().getBBox();\n  label.attr(\n    "transform",\n    "translate(" + -bbox.width / 2 + ", " + (-bbox.height / 2 - halfPadding + 3) + ")"\n  );\n  rect2.attr("class", "outer title-state").attr("x", -bbox.width / 2 - halfPadding).attr("y", -bbox.height / 2 - halfPadding).attr("width", bbox.width + node.padding).attr("height", bbox.height + node.padding);\n  innerLine.attr("class", "divider").attr("x1", -bbox.width / 2 - halfPadding).attr("x2", bbox.width / 2 + halfPadding).attr("y1", -bbox.height / 2 - halfPadding + titleBox.height + halfPadding).attr("y2", -bbox.height / 2 - halfPadding + titleBox.height + halfPadding);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect_default.rect(node, point2);\n  };\n  return shapeSvg;\n}, "rectWithTitle");\nvar stadium = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const h = bbox.height + node.padding;\n  const w = bbox.width + h / 4 + node.padding;\n  const rect2 = shapeSvg.insert("rect", ":first-child").attr("style", node.style).attr("rx", h / 2).attr("ry", h / 2).attr("x", -w / 2).attr("y", -h / 2).attr("width", w).attr("height", h);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect_default.rect(node, point2);\n  };\n  return shapeSvg;\n}, "stadium");\nvar circle2 = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const circle3 = shapeSvg.insert("circle", ":first-child");\n  circle3.attr("style", node.style).attr("rx", node.rx).attr("ry", node.ry).attr("r", bbox.width / 2 + halfPadding).attr("width", bbox.width + node.padding).attr("height", bbox.height + node.padding);\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.info("Circle main");\n  updateNodeBounds(node, circle3);\n  node.intersect = function(point2) {\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.info("Circle intersect", node, bbox.width / 2 + halfPadding, point2);\n    return intersect_default.circle(node, bbox.width / 2 + halfPadding, point2);\n  };\n  return shapeSvg;\n}, "circle");\nvar doublecircle = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const gap = 5;\n  const circleGroup = shapeSvg.insert("g", ":first-child");\n  const outerCircle = circleGroup.insert("circle");\n  const innerCircle = circleGroup.insert("circle");\n  circleGroup.attr("class", node.class);\n  outerCircle.attr("style", node.style).attr("rx", node.rx).attr("ry", node.ry).attr("r", bbox.width / 2 + halfPadding + gap).attr("width", bbox.width + node.padding + gap * 2).attr("height", bbox.height + node.padding + gap * 2);\n  innerCircle.attr("style", node.style).attr("rx", node.rx).attr("ry", node.ry).attr("r", bbox.width / 2 + halfPadding).attr("width", bbox.width + node.padding).attr("height", bbox.height + node.padding);\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.info("DoubleCircle main");\n  updateNodeBounds(node, outerCircle);\n  node.intersect = function(point2) {\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.info("DoubleCircle intersect", node, bbox.width / 2 + halfPadding + gap, point2);\n    return intersect_default.circle(node, bbox.width / 2 + halfPadding + gap, point2);\n  };\n  return shapeSvg;\n}, "doublecircle");\nvar subroutine = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr("style", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect_default.polygon(node, points, point2);\n  };\n  return shapeSvg;\n}, "subroutine");\nvar start = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((parent, node) => {\n  const shapeSvg = parent.insert("g").attr("class", "node default").attr("id", node.domId || node.id);\n  const circle3 = shapeSvg.insert("circle", ":first-child");\n  circle3.attr("class", "state-start").attr("r", 7).attr("width", 14).attr("height", 14);\n  updateNodeBounds(node, circle3);\n  node.intersect = function(point2) {\n    return intersect_default.circle(node, 7, point2);\n  };\n  return shapeSvg;\n}, "start");\nvar forkJoin = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((parent, node, dir) => {\n  const shapeSvg = parent.insert("g").attr("class", "node default").attr("id", node.domId || node.id);\n  let width = 70;\n  let height = 10;\n  if (dir === "LR") {\n    width = 10;\n    height = 70;\n  }\n  const shape = shapeSvg.append("rect").attr("x", -1 * width / 2).attr("y", -1 * height / 2).attr("width", width).attr("height", height).attr("class", "fork-join");\n  updateNodeBounds(node, shape);\n  node.height = node.height + node.padding / 2;\n  node.width = node.width + node.padding / 2;\n  node.intersect = function(point2) {\n    return intersect_default.rect(node, point2);\n  };\n  return shapeSvg;\n}, "forkJoin");\nvar end = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((parent, node) => {\n  const shapeSvg = parent.insert("g").attr("class", "node default").attr("id", node.domId || node.id);\n  const innerCircle = shapeSvg.insert("circle", ":first-child");\n  const circle3 = shapeSvg.insert("circle", ":first-child");\n  circle3.attr("class", "state-start").attr("r", 7).attr("width", 14).attr("height", 14);\n  innerCircle.attr("class", "state-end").attr("r", 5).attr("width", 10).attr("height", 10);\n  updateNodeBounds(node, circle3);\n  node.intersect = function(point2) {\n    return intersect_default.circle(node, 7, point2);\n  };\n  return shapeSvg;\n}, "end");\nvar class_box = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((parent, node) => {\n  const halfPadding = node.padding / 2;\n  const rowPadding = 4;\n  const lineHeight = 8;\n  let classes2;\n  if (!node.classes) {\n    classes2 = "node default";\n  } else {\n    classes2 = "node " + node.classes;\n  }\n  const shapeSvg = parent.insert("g").attr("class", classes2).attr("id", node.domId || node.id);\n  const rect2 = shapeSvg.insert("rect", ":first-child");\n  const topLine = shapeSvg.insert("line");\n  const bottomLine = shapeSvg.insert("line");\n  let maxWidth = 0;\n  let maxHeight = rowPadding;\n  const labelContainer = shapeSvg.insert("g").attr("class", "label");\n  let verticalPos = 0;\n  const hasInterface = node.classData.annotations?.[0];\n  const interfaceLabelText = node.classData.annotations[0] ? "\\xAB" + node.classData.annotations[0] + "\\xBB" : "";\n  const interfaceLabel = labelContainer.node().appendChild(createLabel_default(interfaceLabelText, node.labelStyle, true, true));\n  let interfaceBBox = interfaceLabel.getBBox();\n  if ((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .evaluate */ ._3)((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().flowchart.htmlLabels)) {\n    const div = interfaceLabel.children[0];\n    const dv = (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(interfaceLabel);\n    interfaceBBox = div.getBoundingClientRect();\n    dv.attr("width", interfaceBBox.width);\n    dv.attr("height", interfaceBBox.height);\n  }\n  if (node.classData.annotations[0]) {\n    maxHeight += interfaceBBox.height + rowPadding;\n    maxWidth += interfaceBBox.width;\n  }\n  let classTitleString = node.classData.label;\n  if (node.classData.type !== void 0 && node.classData.type !== "") {\n    if ((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().flowchart.htmlLabels) {\n      classTitleString += "&lt;" + node.classData.type + "&gt;";\n    } else {\n      classTitleString += "<" + node.classData.type + ">";\n    }\n  }\n  const classTitleLabel = labelContainer.node().appendChild(createLabel_default(classTitleString, node.labelStyle, true, true));\n  (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(classTitleLabel).attr("class", "classTitle");\n  let classTitleBBox = classTitleLabel.getBBox();\n  if ((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .evaluate */ ._3)((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().flowchart.htmlLabels)) {\n    const div = classTitleLabel.children[0];\n    const dv = (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(classTitleLabel);\n    classTitleBBox = div.getBoundingClientRect();\n    dv.attr("width", classTitleBBox.width);\n    dv.attr("height", classTitleBBox.height);\n  }\n  maxHeight += classTitleBBox.height + rowPadding;\n  if (classTitleBBox.width > maxWidth) {\n    maxWidth = classTitleBBox.width;\n  }\n  const classAttributes = [];\n  node.classData.members.forEach((member) => {\n    const parsedInfo = member.getDisplayDetails();\n    let parsedText = parsedInfo.displayText;\n    if ((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().flowchart.htmlLabels) {\n      parsedText = parsedText.replace(/</g, "&lt;").replace(/>/g, "&gt;");\n    }\n    const lbl = labelContainer.node().appendChild(\n      createLabel_default(\n        parsedText,\n        parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n        true,\n        true\n      )\n    );\n    let bbox = lbl.getBBox();\n    if ((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .evaluate */ ._3)((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr("width", bbox.width);\n      dv.attr("height", bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n    classAttributes.push(lbl);\n  });\n  maxHeight += lineHeight;\n  const classMethods = [];\n  node.classData.methods.forEach((member) => {\n    const parsedInfo = member.getDisplayDetails();\n    let displayText = parsedInfo.displayText;\n    if ((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().flowchart.htmlLabels) {\n      displayText = displayText.replace(/</g, "&lt;").replace(/>/g, "&gt;");\n    }\n    const lbl = labelContainer.node().appendChild(\n      createLabel_default(\n        displayText,\n        parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n        true,\n        true\n      )\n    );\n    let bbox = lbl.getBBox();\n    if ((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .evaluate */ ._3)((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr("width", bbox.width);\n      dv.attr("height", bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n    classMethods.push(lbl);\n  });\n  maxHeight += lineHeight;\n  if (hasInterface) {\n    let diffX2 = (maxWidth - interfaceBBox.width) / 2;\n    (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(interfaceLabel).attr(\n      "transform",\n      "translate( " + (-1 * maxWidth / 2 + diffX2) + ", " + -1 * maxHeight / 2 + ")"\n    );\n    verticalPos = interfaceBBox.height + rowPadding;\n  }\n  let diffX = (maxWidth - classTitleBBox.width) / 2;\n  (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(classTitleLabel).attr(\n    "transform",\n    "translate( " + (-1 * maxWidth / 2 + diffX) + ", " + (-1 * maxHeight / 2 + verticalPos) + ")"\n  );\n  verticalPos += classTitleBBox.height + rowPadding;\n  topLine.attr("class", "divider").attr("x1", -maxWidth / 2 - halfPadding).attr("x2", maxWidth / 2 + halfPadding).attr("y1", -maxHeight / 2 - halfPadding + lineHeight + verticalPos).attr("y2", -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n  verticalPos += lineHeight;\n  classAttributes.forEach((lbl) => {\n    (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(lbl).attr(\n      "transform",\n      "translate( " + -maxWidth / 2 + ", " + (-1 * maxHeight / 2 + verticalPos + lineHeight / 2) + ")"\n    );\n    const memberBBox = lbl?.getBBox();\n    verticalPos += (memberBBox?.height ?? 0) + rowPadding;\n  });\n  verticalPos += lineHeight;\n  bottomLine.attr("class", "divider").attr("x1", -maxWidth / 2 - halfPadding).attr("x2", maxWidth / 2 + halfPadding).attr("y1", -maxHeight / 2 - halfPadding + lineHeight + verticalPos).attr("y2", -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n  verticalPos += lineHeight;\n  classMethods.forEach((lbl) => {\n    (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(lbl).attr(\n      "transform",\n      "translate( " + -maxWidth / 2 + ", " + (-1 * maxHeight / 2 + verticalPos) + ")"\n    );\n    const memberBBox = lbl?.getBBox();\n    verticalPos += (memberBBox?.height ?? 0) + rowPadding;\n  });\n  rect2.attr("style", node.style).attr("class", "outer title-state").attr("x", -maxWidth / 2 - halfPadding).attr("y", -(maxHeight / 2) - halfPadding).attr("width", maxWidth + node.padding).attr("height", maxHeight + node.padding);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect_default.rect(node, point2);\n  };\n  return shapeSvg;\n}, "class_box");\nvar shapes = {\n  rhombus: question,\n  composite,\n  question,\n  rect,\n  labelRect,\n  rectWithTitle,\n  choice,\n  circle: circle2,\n  doublecircle,\n  stadium,\n  hexagon,\n  block_arrow,\n  rect_left_inv_arrow,\n  lean_right,\n  lean_left,\n  trapezoid,\n  inv_trapezoid,\n  rect_right_inv_arrow,\n  cylinder,\n  start,\n  end,\n  note: note_default,\n  subroutine,\n  fork: forkJoin,\n  join: forkJoin,\n  class_box\n};\nvar nodeElems = {};\nvar insertNode = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async (elem, node, renderOptions) => {\n  let newEl;\n  let el;\n  if (node.link) {\n    let target;\n    if ((0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig2 */ .D7)().securityLevel === "sandbox") {\n      target = "_top";\n    } else if (node.linkTarget) {\n      target = node.linkTarget || "_blank";\n    }\n    newEl = elem.insert("svg:a").attr("xlink:href", node.link).attr("target", target);\n    el = await shapes[node.shape](newEl, node, renderOptions);\n  } else {\n    el = await shapes[node.shape](elem, node, renderOptions);\n    newEl = el;\n  }\n  if (node.tooltip) {\n    el.attr("title", node.tooltip);\n  }\n  if (node.class) {\n    el.attr("class", "node default " + node.class);\n  }\n  nodeElems[node.id] = newEl;\n  if (node.haveCallback) {\n    nodeElems[node.id].attr("class", nodeElems[node.id].attr("class") + " clickable");\n  }\n  return newEl;\n}, "insertNode");\nvar positionNode = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)((node) => {\n  const el = nodeElems[node.id];\n  _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.trace(\n    "Transforming node",\n    node.diff,\n    node,\n    "translate(" + (node.x - node.width / 2 - 5) + ", " + node.width / 2 + ")"\n  );\n  const padding2 = 8;\n  const diff = node.diff || 0;\n  if (node.clusterNode) {\n    el.attr(\n      "transform",\n      "translate(" + (node.x + diff - node.width / 2) + ", " + (node.y - node.height / 2 - padding2) + ")"\n    );\n  } else {\n    el.attr("transform", "translate(" + node.x + ", " + node.y + ")");\n  }\n  return diff;\n}, "positionNode");\n\n// src/diagrams/block/renderHelpers.ts\nfunction getNodeFromBlock(block, db2, positioned = false) {\n  const vertex = block;\n  let classStr = "default";\n  if ((vertex?.classes?.length || 0) > 0) {\n    classStr = (vertex?.classes ?? []).join(" ");\n  }\n  classStr = classStr + " flowchart-label";\n  let radius = 0;\n  let shape = "";\n  let padding2;\n  switch (vertex.type) {\n    case "round":\n      radius = 5;\n      shape = "rect";\n      break;\n    case "composite":\n      radius = 0;\n      shape = "composite";\n      padding2 = 0;\n      break;\n    case "square":\n      shape = "rect";\n      break;\n    case "diamond":\n      shape = "question";\n      break;\n    case "hexagon":\n      shape = "hexagon";\n      break;\n    case "block_arrow":\n      shape = "block_arrow";\n      break;\n    case "odd":\n      shape = "rect_left_inv_arrow";\n      break;\n    case "lean_right":\n      shape = "lean_right";\n      break;\n    case "lean_left":\n      shape = "lean_left";\n      break;\n    case "trapezoid":\n      shape = "trapezoid";\n      break;\n    case "inv_trapezoid":\n      shape = "inv_trapezoid";\n      break;\n    case "rect_left_inv_arrow":\n      shape = "rect_left_inv_arrow";\n      break;\n    case "circle":\n      shape = "circle";\n      break;\n    case "ellipse":\n      shape = "ellipse";\n      break;\n    case "stadium":\n      shape = "stadium";\n      break;\n    case "subroutine":\n      shape = "subroutine";\n      break;\n    case "cylinder":\n      shape = "cylinder";\n      break;\n    case "group":\n      shape = "rect";\n      break;\n    case "doublecircle":\n      shape = "doublecircle";\n      break;\n    default:\n      shape = "rect";\n  }\n  const styles = (0,_chunk_7DKRZKHE_mjs__WEBPACK_IMPORTED_MODULE_3__/* .getStylesFromArray */ .sM)(vertex?.styles ?? []);\n  const vertexText = vertex.label;\n  const bounds = vertex.size ?? { width: 0, height: 0, x: 0, y: 0 };\n  const node = {\n    labelStyle: styles.labelStyle,\n    shape,\n    labelText: vertexText,\n    rx: radius,\n    ry: radius,\n    class: classStr,\n    style: styles.style,\n    id: vertex.id,\n    directions: vertex.directions,\n    width: bounds.width,\n    height: bounds.height,\n    x: bounds.x,\n    y: bounds.y,\n    positioned,\n    intersect: void 0,\n    type: vertex.type,\n    padding: padding2 ?? (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig */ .zj)()?.block?.padding ?? 0\n  };\n  return node;\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(getNodeFromBlock, "getNodeFromBlock");\nasync function calculateBlockSize(elem, block, db2) {\n  const node = getNodeFromBlock(block, db2, false);\n  if (node.type === "group") {\n    return;\n  }\n  const config2 = (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig */ .zj)();\n  const nodeEl = await insertNode(elem, node, { config: config2 });\n  const boundingBox = nodeEl.node().getBBox();\n  const obj = db2.getBlock(node.id);\n  obj.size = { width: boundingBox.width, height: boundingBox.height, x: 0, y: 0, node: nodeEl };\n  db2.setBlock(obj);\n  nodeEl.remove();\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(calculateBlockSize, "calculateBlockSize");\nasync function insertBlockPositioned(elem, block, db2) {\n  const node = getNodeFromBlock(block, db2, true);\n  const obj = db2.getBlock(node.id);\n  if (obj.type !== "space") {\n    const config2 = (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig */ .zj)();\n    await insertNode(elem, node, { config: config2 });\n    block.intersect = node?.intersect;\n    positionNode(node);\n  }\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(insertBlockPositioned, "insertBlockPositioned");\nasync function performOperations(elem, blocks2, db2, operation) {\n  for (const block of blocks2) {\n    await operation(elem, block, db2);\n    if (block.children) {\n      await performOperations(elem, block.children, db2, operation);\n    }\n  }\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(performOperations, "performOperations");\nasync function calculateBlockSizes(elem, blocks2, db2) {\n  await performOperations(elem, blocks2, db2, calculateBlockSize);\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(calculateBlockSizes, "calculateBlockSizes");\nasync function insertBlocks(elem, blocks2, db2) {\n  await performOperations(elem, blocks2, db2, insertBlockPositioned);\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(insertBlocks, "insertBlocks");\nasync function insertEdges(elem, edges, blocks2, db2, id) {\n  const g = new dagre_d3_es_src_graphlib_index_js__WEBPACK_IMPORTED_MODULE_9__/* .Graph */ .T({\n    multigraph: true,\n    compound: true\n  });\n  g.setGraph({\n    rankdir: "TB",\n    nodesep: 10,\n    ranksep: 10,\n    marginx: 8,\n    marginy: 8\n  });\n  for (const block of blocks2) {\n    if (block.size) {\n      g.setNode(block.id, {\n        width: block.size.width,\n        height: block.size.height,\n        intersect: block.intersect\n      });\n    }\n  }\n  for (const edge of edges) {\n    if (edge.start && edge.end) {\n      const startBlock = db2.getBlock(edge.start);\n      const endBlock = db2.getBlock(edge.end);\n      if (startBlock?.size && endBlock?.size) {\n        const start2 = startBlock.size;\n        const end2 = endBlock.size;\n        const points = [\n          { x: start2.x, y: start2.y },\n          { x: start2.x + (end2.x - start2.x) / 2, y: start2.y + (end2.y - start2.y) / 2 },\n          { x: end2.x, y: end2.y }\n        ];\n        insertEdge(\n          elem,\n          { v: edge.start, w: edge.end, name: edge.id },\n          {\n            ...edge,\n            arrowTypeEnd: edge.arrowTypeEnd,\n            arrowTypeStart: edge.arrowTypeStart,\n            points,\n            classes: "edge-thickness-normal edge-pattern-solid flowchart-link LS-a1 LE-b1"\n          },\n          void 0,\n          "block",\n          g,\n          id\n        );\n        if (edge.label) {\n          await insertEdgeLabel(elem, {\n            ...edge,\n            label: edge.label,\n            labelStyle: "stroke: #333; stroke-width: 1.5px;fill:none;",\n            arrowTypeEnd: edge.arrowTypeEnd,\n            arrowTypeStart: edge.arrowTypeStart,\n            points,\n            classes: "edge-thickness-normal edge-pattern-solid flowchart-link LS-a1 LE-b1"\n          });\n          positionEdgeLabel(\n            { ...edge, x: points[1].x, y: points[1].y },\n            {\n              originalPath: points\n            }\n          );\n        }\n      }\n    }\n  }\n}\n(0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(insertEdges, "insertEdges");\n\n// src/diagrams/block/blockRenderer.ts\nvar getClasses2 = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(function(text, diagObj) {\n  return diagObj.db.getClasses();\n}, "getClasses");\nvar draw = /* @__PURE__ */ (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .__name */ .K2)(async function(text, id, _version, diagObj) {\n  const { securityLevel, block: conf } = (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .getConfig */ .zj)();\n  const db2 = diagObj.db;\n  let sandboxElement;\n  if (securityLevel === "sandbox") {\n    sandboxElement = (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)("#i" + id);\n  }\n  const root = securityLevel === "sandbox" ? (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(sandboxElement.nodes()[0].contentDocument.body) : (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)("body");\n  const svg = securityLevel === "sandbox" ? root.select(`[id="${id}"]`) : (0,d3__WEBPACK_IMPORTED_MODULE_8__/* .select */ .Ltv)(`[id="${id}"]`);\n  const markers2 = ["point", "circle", "cross"];\n  markers_default(svg, markers2, diagObj.type, id);\n  const bl = db2.getBlocks();\n  const blArr = db2.getBlocksFlat();\n  const edges = db2.getEdges();\n  const nodes = svg.insert("g").attr("class", "block");\n  await calculateBlockSizes(nodes, bl, db2);\n  const bounds = layout(db2);\n  await insertBlocks(nodes, bl, db2);\n  await insertEdges(nodes, edges, blArr, db2, id);\n  if (bounds) {\n    const bounds2 = bounds;\n    const magicFactor = Math.max(1, Math.round(0.125 * (bounds2.width / bounds2.height)));\n    const height = bounds2.height + magicFactor + 10;\n    const width = bounds2.width + 10;\n    const { useMaxWidth } = conf;\n    (0,_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .configureSvgSize */ .a$)(svg, height, width, !!useMaxWidth);\n    _chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_4__/* .log */ .Rm.debug("Here Bounds", bounds, bounds2);\n    svg.attr(\n      "viewBox",\n      `${bounds2.x - 5} ${bounds2.y - 5} ${bounds2.width + 10} ${bounds2.height + 10}`\n    );\n  }\n}, "draw");\nvar blockRenderer_default = {\n  draw,\n  getClasses: getClasses2\n};\n\n// src/diagrams/block/blockDiagram.ts\nvar diagram = {\n  parser: block_default,\n  db: blockDB_default,\n  renderer: blockRenderer_default,\n  styles: styles_default\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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cUJBQXFCLHFEQUFRO0FBQzdCO0FBQ0EsNkNBQTZDLHFEQUFRLG1EQUFtRCxxREFBUTtBQUNoSCxnRUFBZ0UsR0FBRyxPQUFPLHFEQUFRLFNBQVMsR0FBRztBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGNBQWM7QUFDMUIsSUFBSSwrRUFBZ0I7QUFDcEIsSUFBSSw4REFBRztBQUNQO0FBQ0E7QUFDQSxTQUFTLGVBQWUsRUFBRSxlQUFlLEVBQUUsb0JBQW9CLEVBQUUsb0JBQW9CO0FBQ3JGO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlZ2FsLXVpLWRvY3MvLi9ub2RlX21vZHVsZXMvbWVybWFpZC9kaXN0L2NodW5rcy9tZXJtYWlkLmNvcmUvYmxvY2tEaWFncmFtLVpIQTJFNEtPLm1qcz84YThkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGdldExpbmVGdW5jdGlvbnNXaXRoT2Zmc2V0XG59IGZyb20gXCIuL2NodW5rLTNKTkpQNUJFLm1qc1wiO1xuaW1wb3J0IHtcbiAgZ2V0U3ViR3JhcGhUaXRsZU1hcmdpbnNcbn0gZnJvbSBcIi4vY2h1bmstM1g1NlVOVVgubWpzXCI7XG5pbXBvcnQge1xuICBjcmVhdGVUZXh0LFxuICByZXBsYWNlSWNvblN1YnN0cmluZ1xufSBmcm9tIFwiLi9jaHVuay02Sk9TNzREUy5tanNcIjtcbmltcG9ydCB7XG4gIGRlY29kZUVudGl0aWVzLFxuICBnZXRTdHlsZXNGcm9tQXJyYXksXG4gIHV0aWxzX2RlZmF1bHRcbn0gZnJvbSBcIi4vY2h1bmstN0RLUlpLSEUubWpzXCI7XG5pbXBvcnQge1xuICBfX25hbWUsXG4gIGNsZWFyLFxuICBjb21tb25fZGVmYXVsdCxcbiAgY29uZmlndXJlU3ZnU2l6ZSxcbiAgZXZhbHVhdGUsXG4gIGdldENvbmZpZyxcbiAgZ2V0Q29uZmlnMixcbiAgbG9nLFxuICBzYW5pdGl6ZVRleHRcbn0gZnJvbSBcIi4vY2h1bmstNkRCRkZISVAubWpzXCI7XG5cbi8vIHNyYy9kaWFncmFtcy9ibG9jay9wYXJzZXIvYmxvY2suamlzb25cbnZhciBwYXJzZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIG8gPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKGZ1bmN0aW9uKGssIHYsIG8yLCBsKSB7XG4gICAgZm9yIChvMiA9IG8yIHx8IHt9LCBsID0gay5sZW5ndGg7IGwtLTsgbzJba1tsXV0gPSB2KSA7XG4gICAgcmV0dXJuIG8yO1xuICB9LCBcIm9cIiksICRWMCA9IFsxLCA3XSwgJFYxID0gWzEsIDEzXSwgJFYyID0gWzEsIDE0XSwgJFYzID0gWzEsIDE1XSwgJFY0ID0gWzEsIDE5XSwgJFY1ID0gWzEsIDE2XSwgJFY2ID0gWzEsIDE3XSwgJFY3ID0gWzEsIDE4XSwgJFY4ID0gWzgsIDMwXSwgJFY5ID0gWzgsIDIxLCAyOCwgMjksIDMwLCAzMSwgMzIsIDQwLCA0NCwgNDddLCAkVmEgPSBbMSwgMjNdLCAkVmIgPSBbMSwgMjRdLCAkVmMgPSBbOCwgMTUsIDE2LCAyMSwgMjgsIDI5LCAzMCwgMzEsIDMyLCA0MCwgNDQsIDQ3XSwgJFZkID0gWzgsIDE1LCAxNiwgMjEsIDI3LCAyOCwgMjksIDMwLCAzMSwgMzIsIDQwLCA0NCwgNDddLCAkVmUgPSBbMSwgNDldO1xuICB2YXIgcGFyc2VyMiA9IHtcbiAgICB0cmFjZTogLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbiB0cmFjZSgpIHtcbiAgICB9LCBcInRyYWNlXCIpLFxuICAgIHl5OiB7fSxcbiAgICBzeW1ib2xzXzogeyBcImVycm9yXCI6IDIsIFwic3BhY2VMaW5lc1wiOiAzLCBcIlNQQUNFTElORVwiOiA0LCBcIk5MXCI6IDUsIFwic2VwYXJhdG9yXCI6IDYsIFwiU1BBQ0VcIjogNywgXCJFT0ZcIjogOCwgXCJzdGFydFwiOiA5LCBcIkJMT0NLX0RJQUdSQU1fS0VZXCI6IDEwLCBcImRvY3VtZW50XCI6IDExLCBcInN0b3BcIjogMTIsIFwic3RhdGVtZW50XCI6IDEzLCBcImxpbmtcIjogMTQsIFwiTElOS1wiOiAxNSwgXCJTVEFSVF9MSU5LXCI6IDE2LCBcIkxJTktfTEFCRUxcIjogMTcsIFwiU1RSXCI6IDE4LCBcIm5vZGVTdGF0ZW1lbnRcIjogMTksIFwiY29sdW1uc1N0YXRlbWVudFwiOiAyMCwgXCJTUEFDRV9CTE9DS1wiOiAyMSwgXCJibG9ja1N0YXRlbWVudFwiOiAyMiwgXCJjbGFzc0RlZlN0YXRlbWVudFwiOiAyMywgXCJjc3NDbGFzc1N0YXRlbWVudFwiOiAyNCwgXCJzdHlsZVN0YXRlbWVudFwiOiAyNSwgXCJub2RlXCI6IDI2LCBcIlNJWkVcIjogMjcsIFwiQ09MVU1OU1wiOiAyOCwgXCJpZC1ibG9ja1wiOiAyOSwgXCJlbmRcIjogMzAsIFwiYmxvY2tcIjogMzEsIFwiTk9ERV9JRFwiOiAzMiwgXCJub2RlU2hhcGVOTGFiZWxcIjogMzMsIFwiZGlyTGlzdFwiOiAzNCwgXCJESVJcIjogMzUsIFwiTk9ERV9EU1RBUlRcIjogMzYsIFwiTk9ERV9ERU5EXCI6IDM3LCBcIkJMT0NLX0FSUk9XX1NUQVJUXCI6IDM4LCBcIkJMT0NLX0FSUk9XX0VORFwiOiAzOSwgXCJjbGFzc0RlZlwiOiA0MCwgXCJDTEFTU0RFRl9JRFwiOiA0MSwgXCJDTEFTU0RFRl9TVFlMRU9QVFNcIjogNDIsIFwiREVGQVVMVFwiOiA0MywgXCJjbGFzc1wiOiA0NCwgXCJDTEFTU0VOVElUWV9JRFNcIjogNDUsIFwiU1RZTEVDTEFTU1wiOiA0NiwgXCJzdHlsZVwiOiA0NywgXCJTVFlMRV9FTlRJVFlfSURTXCI6IDQ4LCBcIlNUWUxFX0RFRklOSVRJT05fREFUQVwiOiA0OSwgXCIkYWNjZXB0XCI6IDAsIFwiJGVuZFwiOiAxIH0sXG4gICAgdGVybWluYWxzXzogeyAyOiBcImVycm9yXCIsIDQ6IFwiU1BBQ0VMSU5FXCIsIDU6IFwiTkxcIiwgNzogXCJTUEFDRVwiLCA4OiBcIkVPRlwiLCAxMDogXCJCTE9DS19ESUFHUkFNX0tFWVwiLCAxNTogXCJMSU5LXCIsIDE2OiBcIlNUQVJUX0xJTktcIiwgMTc6IFwiTElOS19MQUJFTFwiLCAxODogXCJTVFJcIiwgMjE6IFwiU1BBQ0VfQkxPQ0tcIiwgMjc6IFwiU0laRVwiLCAyODogXCJDT0xVTU5TXCIsIDI5OiBcImlkLWJsb2NrXCIsIDMwOiBcImVuZFwiLCAzMTogXCJibG9ja1wiLCAzMjogXCJOT0RFX0lEXCIsIDM1OiBcIkRJUlwiLCAzNjogXCJOT0RFX0RTVEFSVFwiLCAzNzogXCJOT0RFX0RFTkRcIiwgMzg6IFwiQkxPQ0tfQVJST1dfU1RBUlRcIiwgMzk6IFwiQkxPQ0tfQVJST1dfRU5EXCIsIDQwOiBcImNsYXNzRGVmXCIsIDQxOiBcIkNMQVNTREVGX0lEXCIsIDQyOiBcIkNMQVNTREVGX1NUWUxFT1BUU1wiLCA0MzogXCJERUZBVUxUXCIsIDQ0OiBcImNsYXNzXCIsIDQ1OiBcIkNMQVNTRU5USVRZX0lEU1wiLCA0NjogXCJTVFlMRUNMQVNTXCIsIDQ3OiBcInN0eWxlXCIsIDQ4OiBcIlNUWUxFX0VOVElUWV9JRFNcIiwgNDk6IFwiU1RZTEVfREVGSU5JVElPTl9EQVRBXCIgfSxcbiAgICBwcm9kdWN0aW9uc186IFswLCBbMywgMV0sIFszLCAyXSwgWzMsIDJdLCBbNiwgMV0sIFs2LCAxXSwgWzYsIDFdLCBbOSwgM10sIFsxMiwgMV0sIFsxMiwgMV0sIFsxMiwgMl0sIFsxMiwgMl0sIFsxMSwgMV0sIFsxMSwgMl0sIFsxNCwgMV0sIFsxNCwgNF0sIFsxMywgMV0sIFsxMywgMV0sIFsxMywgMV0sIFsxMywgMV0sIFsxMywgMV0sIFsxMywgMV0sIFsxMywgMV0sIFsxOSwgM10sIFsxOSwgMl0sIFsxOSwgMV0sIFsyMCwgMV0sIFsyMiwgNF0sIFsyMiwgM10sIFsyNiwgMV0sIFsyNiwgMl0sIFszNCwgMV0sIFszNCwgMl0sIFszMywgM10sIFszMywgNF0sIFsyMywgM10sIFsyMywgM10sIFsyNCwgM10sIFsyNSwgM11dLFxuICAgIHBlcmZvcm1BY3Rpb246IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoZnVuY3Rpb24gYW5vbnltb3VzKHl5dGV4dCwgeXlsZW5nLCB5eWxpbmVubywgeXksIHl5c3RhdGUsICQkLCBfJCkge1xuICAgICAgdmFyICQwID0gJCQubGVuZ3RoIC0gMTtcbiAgICAgIHN3aXRjaCAoeXlzdGF0ZSkge1xuICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJSdWxlOiBzZXBhcmF0b3IgKE5MKSBcIik7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNTpcbiAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIlJ1bGU6IHNlcGFyYXRvciAoU3BhY2UpIFwiKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA2OlxuICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiUnVsZTogc2VwYXJhdG9yIChFT0YpIFwiKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA3OlxuICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiUnVsZTogaGllcmFyY2h5OiBcIiwgJCRbJDAgLSAxXSk7XG4gICAgICAgICAgeXkuc2V0SGllcmFyY2h5KCQkWyQwIC0gMV0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJTdG9wIE5MIFwiKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA5OlxuICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiU3RvcCBFT0YgXCIpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiU3RvcCBOTDIgXCIpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDExOlxuICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiU3RvcCBFT0YyIFwiKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAxMjpcbiAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIlJ1bGU6IHN0YXRlbWVudDogXCIsICQkWyQwXSk7XG4gICAgICAgICAgdHlwZW9mICQkWyQwXS5sZW5ndGggPT09IFwibnVtYmVyXCIgPyB0aGlzLiQgPSAkJFskMF0gOiB0aGlzLiQgPSBbJCRbJDBdXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAxMzpcbiAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIlJ1bGU6IHN0YXRlbWVudCAjMjogXCIsICQkWyQwIC0gMV0pO1xuICAgICAgICAgIHRoaXMuJCA9IFskJFskMCAtIDFdXS5jb25jYXQoJCRbJDBdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAxNDpcbiAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIlJ1bGU6IGxpbms6IFwiLCAkJFskMF0sIHl5dGV4dCk7XG4gICAgICAgICAgdGhpcy4kID0geyBlZGdlVHlwZVN0cjogJCRbJDBdLCBsYWJlbDogXCJcIiB9O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDE1OlxuICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiUnVsZTogTEFCRUwgbGluazogXCIsICQkWyQwIC0gM10sICQkWyQwIC0gMV0sICQkWyQwXSk7XG4gICAgICAgICAgdGhpcy4kID0geyBlZGdlVHlwZVN0cjogJCRbJDBdLCBsYWJlbDogJCRbJDAgLSAxXSB9O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDE4OlxuICAgICAgICAgIGNvbnN0IG51bSA9IHBhcnNlSW50KCQkWyQwXSk7XG4gICAgICAgICAgY29uc3Qgc3BhY2VJZCA9IHl5LmdlbmVyYXRlSWQoKTtcbiAgICAgICAgICB0aGlzLiQgPSB7IGlkOiBzcGFjZUlkLCB0eXBlOiBcInNwYWNlXCIsIGxhYmVsOiBcIlwiLCB3aWR0aDogbnVtLCBjaGlsZHJlbjogW10gfTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAyMzpcbiAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIlJ1bGU6IChub2RlU3RhdGVtZW50IGxpbmsgbm9kZSkgXCIsICQkWyQwIC0gMl0sICQkWyQwIC0gMV0sICQkWyQwXSwgXCIgdHlwZXN0cjogXCIsICQkWyQwIC0gMV0uZWRnZVR5cGVTdHIpO1xuICAgICAgICAgIGNvbnN0IGVkZ2VEYXRhID0geXkuZWRnZVN0clRvRWRnZURhdGEoJCRbJDAgLSAxXS5lZGdlVHlwZVN0cik7XG4gICAgICAgICAgdGhpcy4kID0gW1xuICAgICAgICAgICAgeyBpZDogJCRbJDAgLSAyXS5pZCwgbGFiZWw6ICQkWyQwIC0gMl0ubGFiZWwsIHR5cGU6ICQkWyQwIC0gMl0udHlwZSwgZGlyZWN0aW9uczogJCRbJDAgLSAyXS5kaXJlY3Rpb25zIH0sXG4gICAgICAgICAgICB7IGlkOiAkJFskMCAtIDJdLmlkICsgXCItXCIgKyAkJFskMF0uaWQsIHN0YXJ0OiAkJFskMCAtIDJdLmlkLCBlbmQ6ICQkWyQwXS5pZCwgbGFiZWw6ICQkWyQwIC0gMV0ubGFiZWwsIHR5cGU6IFwiZWRnZVwiLCBkaXJlY3Rpb25zOiAkJFskMF0uZGlyZWN0aW9ucywgYXJyb3dUeXBlRW5kOiBlZGdlRGF0YSwgYXJyb3dUeXBlU3RhcnQ6IFwiYXJyb3dfb3BlblwiIH0sXG4gICAgICAgICAgICB7IGlkOiAkJFskMF0uaWQsIGxhYmVsOiAkJFskMF0ubGFiZWwsIHR5cGU6IHl5LnR5cGVTdHIyVHlwZSgkJFskMF0udHlwZVN0ciksIGRpcmVjdGlvbnM6ICQkWyQwXS5kaXJlY3Rpb25zIH1cbiAgICAgICAgICBdO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDI0OlxuICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiUnVsZTogbm9kZVN0YXRlbWVudCAoYWJjODggbm9kZSBzaXplKSBcIiwgJCRbJDAgLSAxXSwgJCRbJDBdKTtcbiAgICAgICAgICB0aGlzLiQgPSB7IGlkOiAkJFskMCAtIDFdLmlkLCBsYWJlbDogJCRbJDAgLSAxXS5sYWJlbCwgdHlwZTogeXkudHlwZVN0cjJUeXBlKCQkWyQwIC0gMV0udHlwZVN0ciksIGRpcmVjdGlvbnM6ICQkWyQwIC0gMV0uZGlyZWN0aW9ucywgd2lkdGhJbkNvbHVtbnM6IHBhcnNlSW50KCQkWyQwXSwgMTApIH07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMjU6XG4gICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJSdWxlOiBub2RlU3RhdGVtZW50IChub2RlKSBcIiwgJCRbJDBdKTtcbiAgICAgICAgICB0aGlzLiQgPSB7IGlkOiAkJFskMF0uaWQsIGxhYmVsOiAkJFskMF0ubGFiZWwsIHR5cGU6IHl5LnR5cGVTdHIyVHlwZSgkJFskMF0udHlwZVN0ciksIGRpcmVjdGlvbnM6ICQkWyQwXS5kaXJlY3Rpb25zLCB3aWR0aEluQ29sdW1uczogMSB9O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDI2OlxuICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiQVBBMTIzXCIsIHRoaXMgPyB0aGlzIDogXCJuYVwiKTtcbiAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkNPTFVNTlM6IFwiLCAkJFskMF0pO1xuICAgICAgICAgIHRoaXMuJCA9IHsgdHlwZTogXCJjb2x1bW4tc2V0dGluZ1wiLCBjb2x1bW5zOiAkJFskMF0gPT09IFwiYXV0b1wiID8gLTEgOiBwYXJzZUludCgkJFskMF0pIH07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMjc6XG4gICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJSdWxlOiBpZC1ibG9jayBzdGF0ZW1lbnQgOiBcIiwgJCRbJDAgLSAyXSwgJCRbJDAgLSAxXSk7XG4gICAgICAgICAgY29uc3QgaWQyID0geXkuZ2VuZXJhdGVJZCgpO1xuICAgICAgICAgIHRoaXMuJCA9IHsgLi4uJCRbJDAgLSAyXSwgdHlwZTogXCJjb21wb3NpdGVcIiwgY2hpbGRyZW46ICQkWyQwIC0gMV0gfTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAyODpcbiAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIlJ1bGU6IGJsb2NrU3RhdGVtZW50IDogXCIsICQkWyQwIC0gMl0sICQkWyQwIC0gMV0sICQkWyQwXSk7XG4gICAgICAgICAgY29uc3QgaWQgPSB5eS5nZW5lcmF0ZUlkKCk7XG4gICAgICAgICAgdGhpcy4kID0geyBpZCwgdHlwZTogXCJjb21wb3NpdGVcIiwgbGFiZWw6IFwiXCIsIGNoaWxkcmVuOiAkJFskMCAtIDFdIH07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMjk6XG4gICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJSdWxlOiBub2RlIChOT0RFX0lEIHNlcGFyYXRvcik6IFwiLCAkJFskMF0pO1xuICAgICAgICAgIHRoaXMuJCA9IHsgaWQ6ICQkWyQwXSB9O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDMwOlxuICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiUnVsZTogbm9kZSAoTk9ERV9JRCBub2RlU2hhcGVOTGFiZWwgc2VwYXJhdG9yKTogXCIsICQkWyQwIC0gMV0sICQkWyQwXSk7XG4gICAgICAgICAgdGhpcy4kID0geyBpZDogJCRbJDAgLSAxXSwgbGFiZWw6ICQkWyQwXS5sYWJlbCwgdHlwZVN0cjogJCRbJDBdLnR5cGVTdHIsIGRpcmVjdGlvbnM6ICQkWyQwXS5kaXJlY3Rpb25zIH07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMzE6XG4gICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJSdWxlOiBkaXJMaXN0OiBcIiwgJCRbJDBdKTtcbiAgICAgICAgICB0aGlzLiQgPSBbJCRbJDBdXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAzMjpcbiAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIlJ1bGU6IGRpckxpc3Q6IFwiLCAkJFskMCAtIDFdLCAkJFskMF0pO1xuICAgICAgICAgIHRoaXMuJCA9IFskJFskMCAtIDFdXS5jb25jYXQoJCRbJDBdKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAzMzpcbiAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIlJ1bGU6IG5vZGVTaGFwZU5MYWJlbDogXCIsICQkWyQwIC0gMl0sICQkWyQwIC0gMV0sICQkWyQwXSk7XG4gICAgICAgICAgdGhpcy4kID0geyB0eXBlU3RyOiAkJFskMCAtIDJdICsgJCRbJDBdLCBsYWJlbDogJCRbJDAgLSAxXSB9O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDM0OlxuICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiUnVsZTogQkxPQ0tfQVJST1cgbm9kZVNoYXBlTkxhYmVsOiBcIiwgJCRbJDAgLSAzXSwgJCRbJDAgLSAyXSwgXCIgIzM6XCIsICQkWyQwIC0gMV0sICQkWyQwXSk7XG4gICAgICAgICAgdGhpcy4kID0geyB0eXBlU3RyOiAkJFskMCAtIDNdICsgJCRbJDBdLCBsYWJlbDogJCRbJDAgLSAyXSwgZGlyZWN0aW9uczogJCRbJDAgLSAxXSB9O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDM1OlxuICAgICAgICBjYXNlIDM2OlxuICAgICAgICAgIHRoaXMuJCA9IHsgdHlwZTogXCJjbGFzc0RlZlwiLCBpZDogJCRbJDAgLSAxXS50cmltKCksIGNzczogJCRbJDBdLnRyaW0oKSB9O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDM3OlxuICAgICAgICAgIHRoaXMuJCA9IHsgdHlwZTogXCJhcHBseUNsYXNzXCIsIGlkOiAkJFskMCAtIDFdLnRyaW0oKSwgc3R5bGVDbGFzczogJCRbJDBdLnRyaW0oKSB9O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDM4OlxuICAgICAgICAgIHRoaXMuJCA9IHsgdHlwZTogXCJhcHBseVN0eWxlc1wiLCBpZDogJCRbJDAgLSAxXS50cmltKCksIHN0eWxlc1N0cjogJCRbJDBdLnRyaW0oKSB9O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH0sIFwiYW5vbnltb3VzXCIpLFxuICAgIHRhYmxlOiBbeyA5OiAxLCAxMDogWzEsIDJdIH0sIHsgMTogWzNdIH0sIHsgMTE6IDMsIDEzOiA0LCAxOTogNSwgMjA6IDYsIDIxOiAkVjAsIDIyOiA4LCAyMzogOSwgMjQ6IDEwLCAyNTogMTEsIDI2OiAxMiwgMjg6ICRWMSwgMjk6ICRWMiwgMzE6ICRWMywgMzI6ICRWNCwgNDA6ICRWNSwgNDQ6ICRWNiwgNDc6ICRWNyB9LCB7IDg6IFsxLCAyMF0gfSwgbygkVjgsIFsyLCAxMl0sIHsgMTM6IDQsIDE5OiA1LCAyMDogNiwgMjI6IDgsIDIzOiA5LCAyNDogMTAsIDI1OiAxMSwgMjY6IDEyLCAxMTogMjEsIDIxOiAkVjAsIDI4OiAkVjEsIDI5OiAkVjIsIDMxOiAkVjMsIDMyOiAkVjQsIDQwOiAkVjUsIDQ0OiAkVjYsIDQ3OiAkVjcgfSksIG8oJFY5LCBbMiwgMTZdLCB7IDE0OiAyMiwgMTU6ICRWYSwgMTY6ICRWYiB9KSwgbygkVjksIFsyLCAxN10pLCBvKCRWOSwgWzIsIDE4XSksIG8oJFY5LCBbMiwgMTldKSwgbygkVjksIFsyLCAyMF0pLCBvKCRWOSwgWzIsIDIxXSksIG8oJFY5LCBbMiwgMjJdKSwgbygkVmMsIFsyLCAyNV0sIHsgMjc6IFsxLCAyNV0gfSksIG8oJFY5LCBbMiwgMjZdKSwgeyAxOTogMjYsIDI2OiAxMiwgMzI6ICRWNCB9LCB7IDExOiAyNywgMTM6IDQsIDE5OiA1LCAyMDogNiwgMjE6ICRWMCwgMjI6IDgsIDIzOiA5LCAyNDogMTAsIDI1OiAxMSwgMjY6IDEyLCAyODogJFYxLCAyOTogJFYyLCAzMTogJFYzLCAzMjogJFY0LCA0MDogJFY1LCA0NDogJFY2LCA0NzogJFY3IH0sIHsgNDE6IFsxLCAyOF0sIDQzOiBbMSwgMjldIH0sIHsgNDU6IFsxLCAzMF0gfSwgeyA0ODogWzEsIDMxXSB9LCBvKCRWZCwgWzIsIDI5XSwgeyAzMzogMzIsIDM2OiBbMSwgMzNdLCAzODogWzEsIDM0XSB9KSwgeyAxOiBbMiwgN10gfSwgbygkVjgsIFsyLCAxM10pLCB7IDI2OiAzNSwgMzI6ICRWNCB9LCB7IDMyOiBbMiwgMTRdIH0sIHsgMTc6IFsxLCAzNl0gfSwgbygkVmMsIFsyLCAyNF0pLCB7IDExOiAzNywgMTM6IDQsIDE0OiAyMiwgMTU6ICRWYSwgMTY6ICRWYiwgMTk6IDUsIDIwOiA2LCAyMTogJFYwLCAyMjogOCwgMjM6IDksIDI0OiAxMCwgMjU6IDExLCAyNjogMTIsIDI4OiAkVjEsIDI5OiAkVjIsIDMxOiAkVjMsIDMyOiAkVjQsIDQwOiAkVjUsIDQ0OiAkVjYsIDQ3OiAkVjcgfSwgeyAzMDogWzEsIDM4XSB9LCB7IDQyOiBbMSwgMzldIH0sIHsgNDI6IFsxLCA0MF0gfSwgeyA0NjogWzEsIDQxXSB9LCB7IDQ5OiBbMSwgNDJdIH0sIG8oJFZkLCBbMiwgMzBdKSwgeyAxODogWzEsIDQzXSB9LCB7IDE4OiBbMSwgNDRdIH0sIG8oJFZjLCBbMiwgMjNdKSwgeyAxODogWzEsIDQ1XSB9LCB7IDMwOiBbMSwgNDZdIH0sIG8oJFY5LCBbMiwgMjhdKSwgbygkVjksIFsyLCAzNV0pLCBvKCRWOSwgWzIsIDM2XSksIG8oJFY5LCBbMiwgMzddKSwgbygkVjksIFsyLCAzOF0pLCB7IDM3OiBbMSwgNDddIH0sIHsgMzQ6IDQ4LCAzNTogJFZlIH0sIHsgMTU6IFsxLCA1MF0gfSwgbygkVjksIFsyLCAyN10pLCBvKCRWZCwgWzIsIDMzXSksIHsgMzk6IFsxLCA1MV0gfSwgeyAzNDogNTIsIDM1OiAkVmUsIDM5OiBbMiwgMzFdIH0sIHsgMzI6IFsyLCAxNV0gfSwgbygkVmQsIFsyLCAzNF0pLCB7IDM5OiBbMiwgMzJdIH1dLFxuICAgIGRlZmF1bHRBY3Rpb25zOiB7IDIwOiBbMiwgN10sIDIzOiBbMiwgMTRdLCA1MDogWzIsIDE1XSwgNTI6IFsyLCAzMl0gfSxcbiAgICBwYXJzZUVycm9yOiAvKiBAX19QVVJFX18gKi8gX19uYW1lKGZ1bmN0aW9uIHBhcnNlRXJyb3Ioc3RyLCBoYXNoKSB7XG4gICAgICBpZiAoaGFzaC5yZWNvdmVyYWJsZSkge1xuICAgICAgICB0aGlzLnRyYWNlKHN0cik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgZXJyb3IgPSBuZXcgRXJyb3Ioc3RyKTtcbiAgICAgICAgZXJyb3IuaGFzaCA9IGhhc2g7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgICAgfVxuICAgIH0sIFwicGFyc2VFcnJvclwiKSxcbiAgICBwYXJzZTogLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbiBwYXJzZShpbnB1dCkge1xuICAgICAgdmFyIHNlbGYgPSB0aGlzLCBzdGFjayA9IFswXSwgdHN0YWNrID0gW10sIHZzdGFjayA9IFtudWxsXSwgbHN0YWNrID0gW10sIHRhYmxlID0gdGhpcy50YWJsZSwgeXl0ZXh0ID0gXCJcIiwgeXlsaW5lbm8gPSAwLCB5eWxlbmcgPSAwLCByZWNvdmVyaW5nID0gMCwgVEVSUk9SID0gMiwgRU9GID0gMTtcbiAgICAgIHZhciBhcmdzID0gbHN0YWNrLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgICAgIHZhciBsZXhlcjIgPSBPYmplY3QuY3JlYXRlKHRoaXMubGV4ZXIpO1xuICAgICAgdmFyIHNoYXJlZFN0YXRlID0geyB5eToge30gfTtcbiAgICAgIGZvciAodmFyIGsgaW4gdGhpcy55eSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMueXksIGspKSB7XG4gICAgICAgICAgc2hhcmVkU3RhdGUueXlba10gPSB0aGlzLnl5W2tdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsZXhlcjIuc2V0SW5wdXQoaW5wdXQsIHNoYXJlZFN0YXRlLnl5KTtcbiAgICAgIHNoYXJlZFN0YXRlLnl5LmxleGVyID0gbGV4ZXIyO1xuICAgICAgc2hhcmVkU3RhdGUueXkucGFyc2VyID0gdGhpcztcbiAgICAgIGlmICh0eXBlb2YgbGV4ZXIyLnl5bGxvYyA9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGxleGVyMi55eWxsb2MgPSB7fTtcbiAgICAgIH1cbiAgICAgIHZhciB5eWxvYyA9IGxleGVyMi55eWxsb2M7XG4gICAgICBsc3RhY2sucHVzaCh5eWxvYyk7XG4gICAgICB2YXIgcmFuZ2VzID0gbGV4ZXIyLm9wdGlvbnMgJiYgbGV4ZXIyLm9wdGlvbnMucmFuZ2VzO1xuICAgICAgaWYgKHR5cGVvZiBzaGFyZWRTdGF0ZS55eS5wYXJzZUVycm9yID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgdGhpcy5wYXJzZUVycm9yID0gc2hhcmVkU3RhdGUueXkucGFyc2VFcnJvcjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucGFyc2VFcnJvciA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih0aGlzKS5wYXJzZUVycm9yO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcG9wU3RhY2sobikge1xuICAgICAgICBzdGFjay5sZW5ndGggPSBzdGFjay5sZW5ndGggLSAyICogbjtcbiAgICAgICAgdnN0YWNrLmxlbmd0aCA9IHZzdGFjay5sZW5ndGggLSBuO1xuICAgICAgICBsc3RhY2subGVuZ3RoID0gbHN0YWNrLmxlbmd0aCAtIG47XG4gICAgICB9XG4gICAgICBfX25hbWUocG9wU3RhY2ssIFwicG9wU3RhY2tcIik7XG4gICAgICBmdW5jdGlvbiBsZXgoKSB7XG4gICAgICAgIHZhciB0b2tlbjtcbiAgICAgICAgdG9rZW4gPSB0c3RhY2sucG9wKCkgfHwgbGV4ZXIyLmxleCgpIHx8IEVPRjtcbiAgICAgICAgaWYgKHR5cGVvZiB0b2tlbiAhPT0gXCJudW1iZXJcIikge1xuICAgICAgICAgIGlmICh0b2tlbiBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgICAgICAgICB0c3RhY2sgPSB0b2tlbjtcbiAgICAgICAgICAgIHRva2VuID0gdHN0YWNrLnBvcCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICB0b2tlbiA9IHNlbGYuc3ltYm9sc19bdG9rZW5dIHx8IHRva2VuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0b2tlbjtcbiAgICAgIH1cbiAgICAgIF9fbmFtZShsZXgsIFwibGV4XCIpO1xuICAgICAgdmFyIHN5bWJvbCwgcHJlRXJyb3JTeW1ib2wsIHN0YXRlLCBhY3Rpb24sIGEsIHIsIHl5dmFsID0ge30sIHAsIGxlbiwgbmV3U3RhdGUsIGV4cGVjdGVkO1xuICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgc3RhdGUgPSBzdGFja1tzdGFjay5sZW5ndGggLSAxXTtcbiAgICAgICAgaWYgKHRoaXMuZGVmYXVsdEFjdGlvbnNbc3RhdGVdKSB7XG4gICAgICAgICAgYWN0aW9uID0gdGhpcy5kZWZhdWx0QWN0aW9uc1tzdGF0ZV07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKHN5bWJvbCA9PT0gbnVsbCB8fCB0eXBlb2Ygc3ltYm9sID09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHN5bWJvbCA9IGxleCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBhY3Rpb24gPSB0YWJsZVtzdGF0ZV0gJiYgdGFibGVbc3RhdGVdW3N5bWJvbF07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb24gPT09IFwidW5kZWZpbmVkXCIgfHwgIWFjdGlvbi5sZW5ndGggfHwgIWFjdGlvblswXSkge1xuICAgICAgICAgIHZhciBlcnJTdHIgPSBcIlwiO1xuICAgICAgICAgIGV4cGVjdGVkID0gW107XG4gICAgICAgICAgZm9yIChwIGluIHRhYmxlW3N0YXRlXSkge1xuICAgICAgICAgICAgaWYgKHRoaXMudGVybWluYWxzX1twXSAmJiBwID4gVEVSUk9SKSB7XG4gICAgICAgICAgICAgIGV4cGVjdGVkLnB1c2goXCInXCIgKyB0aGlzLnRlcm1pbmFsc19bcF0gKyBcIidcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChsZXhlcjIuc2hvd1Bvc2l0aW9uKSB7XG4gICAgICAgICAgICBlcnJTdHIgPSBcIlBhcnNlIGVycm9yIG9uIGxpbmUgXCIgKyAoeXlsaW5lbm8gKyAxKSArIFwiOlxcblwiICsgbGV4ZXIyLnNob3dQb3NpdGlvbigpICsgXCJcXG5FeHBlY3RpbmcgXCIgKyBleHBlY3RlZC5qb2luKFwiLCBcIikgKyBcIiwgZ290ICdcIiArICh0aGlzLnRlcm1pbmFsc19bc3ltYm9sXSB8fCBzeW1ib2wpICsgXCInXCI7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVyclN0ciA9IFwiUGFyc2UgZXJyb3Igb24gbGluZSBcIiArICh5eWxpbmVubyArIDEpICsgXCI6IFVuZXhwZWN0ZWQgXCIgKyAoc3ltYm9sID09IEVPRiA/IFwiZW5kIG9mIGlucHV0XCIgOiBcIidcIiArICh0aGlzLnRlcm1pbmFsc19bc3ltYm9sXSB8fCBzeW1ib2wpICsgXCInXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICB0aGlzLnBhcnNlRXJyb3IoZXJyU3RyLCB7XG4gICAgICAgICAgICB0ZXh0OiBsZXhlcjIubWF0Y2gsXG4gICAgICAgICAgICB0b2tlbjogdGhpcy50ZXJtaW5hbHNfW3N5bWJvbF0gfHwgc3ltYm9sLFxuICAgICAgICAgICAgbGluZTogbGV4ZXIyLnl5bGluZW5vLFxuICAgICAgICAgICAgbG9jOiB5eWxvYyxcbiAgICAgICAgICAgIGV4cGVjdGVkXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFjdGlvblswXSBpbnN0YW5jZW9mIEFycmF5ICYmIGFjdGlvbi5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUGFyc2UgRXJyb3I6IG11bHRpcGxlIGFjdGlvbnMgcG9zc2libGUgYXQgc3RhdGU6IFwiICsgc3RhdGUgKyBcIiwgdG9rZW46IFwiICsgc3ltYm9sKTtcbiAgICAgICAgfVxuICAgICAgICBzd2l0Y2ggKGFjdGlvblswXSkge1xuICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIHN0YWNrLnB1c2goc3ltYm9sKTtcbiAgICAgICAgICAgIHZzdGFjay5wdXNoKGxleGVyMi55eXRleHQpO1xuICAgICAgICAgICAgbHN0YWNrLnB1c2gobGV4ZXIyLnl5bGxvYyk7XG4gICAgICAgICAgICBzdGFjay5wdXNoKGFjdGlvblsxXSk7XG4gICAgICAgICAgICBzeW1ib2wgPSBudWxsO1xuICAgICAgICAgICAgaWYgKCFwcmVFcnJvclN5bWJvbCkge1xuICAgICAgICAgICAgICB5eWxlbmcgPSBsZXhlcjIueXlsZW5nO1xuICAgICAgICAgICAgICB5eXRleHQgPSBsZXhlcjIueXl0ZXh0O1xuICAgICAgICAgICAgICB5eWxpbmVubyA9IGxleGVyMi55eWxpbmVubztcbiAgICAgICAgICAgICAgeXlsb2MgPSBsZXhlcjIueXlsbG9jO1xuICAgICAgICAgICAgICBpZiAocmVjb3ZlcmluZyA+IDApIHtcbiAgICAgICAgICAgICAgICByZWNvdmVyaW5nLS07XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHN5bWJvbCA9IHByZUVycm9yU3ltYm9sO1xuICAgICAgICAgICAgICBwcmVFcnJvclN5bWJvbCA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICBsZW4gPSB0aGlzLnByb2R1Y3Rpb25zX1thY3Rpb25bMV1dWzFdO1xuICAgICAgICAgICAgeXl2YWwuJCA9IHZzdGFja1t2c3RhY2subGVuZ3RoIC0gbGVuXTtcbiAgICAgICAgICAgIHl5dmFsLl8kID0ge1xuICAgICAgICAgICAgICBmaXJzdF9saW5lOiBsc3RhY2tbbHN0YWNrLmxlbmd0aCAtIChsZW4gfHwgMSldLmZpcnN0X2xpbmUsXG4gICAgICAgICAgICAgIGxhc3RfbGluZTogbHN0YWNrW2xzdGFjay5sZW5ndGggLSAxXS5sYXN0X2xpbmUsXG4gICAgICAgICAgICAgIGZpcnN0X2NvbHVtbjogbHN0YWNrW2xzdGFjay5sZW5ndGggLSAobGVuIHx8IDEpXS5maXJzdF9jb2x1bW4sXG4gICAgICAgICAgICAgIGxhc3RfY29sdW1uOiBsc3RhY2tbbHN0YWNrLmxlbmd0aCAtIDFdLmxhc3RfY29sdW1uXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKHJhbmdlcykge1xuICAgICAgICAgICAgICB5eXZhbC5fJC5yYW5nZSA9IFtcbiAgICAgICAgICAgICAgICBsc3RhY2tbbHN0YWNrLmxlbmd0aCAtIChsZW4gfHwgMSldLnJhbmdlWzBdLFxuICAgICAgICAgICAgICAgIGxzdGFja1tsc3RhY2subGVuZ3RoIC0gMV0ucmFuZ2VbMV1cbiAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHIgPSB0aGlzLnBlcmZvcm1BY3Rpb24uYXBwbHkoeXl2YWwsIFtcbiAgICAgICAgICAgICAgeXl0ZXh0LFxuICAgICAgICAgICAgICB5eWxlbmcsXG4gICAgICAgICAgICAgIHl5bGluZW5vLFxuICAgICAgICAgICAgICBzaGFyZWRTdGF0ZS55eSxcbiAgICAgICAgICAgICAgYWN0aW9uWzFdLFxuICAgICAgICAgICAgICB2c3RhY2ssXG4gICAgICAgICAgICAgIGxzdGFja1xuICAgICAgICAgICAgXS5jb25jYXQoYXJncykpO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiByICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICAgIHJldHVybiByO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGxlbikge1xuICAgICAgICAgICAgICBzdGFjayA9IHN0YWNrLnNsaWNlKDAsIC0xICogbGVuICogMik7XG4gICAgICAgICAgICAgIHZzdGFjayA9IHZzdGFjay5zbGljZSgwLCAtMSAqIGxlbik7XG4gICAgICAgICAgICAgIGxzdGFjayA9IGxzdGFjay5zbGljZSgwLCAtMSAqIGxlbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzdGFjay5wdXNoKHRoaXMucHJvZHVjdGlvbnNfW2FjdGlvblsxXV1bMF0pO1xuICAgICAgICAgICAgdnN0YWNrLnB1c2goeXl2YWwuJCk7XG4gICAgICAgICAgICBsc3RhY2sucHVzaCh5eXZhbC5fJCk7XG4gICAgICAgICAgICBuZXdTdGF0ZSA9IHRhYmxlW3N0YWNrW3N0YWNrLmxlbmd0aCAtIDJdXVtzdGFja1tzdGFjay5sZW5ndGggLSAxXV07XG4gICAgICAgICAgICBzdGFjay5wdXNoKG5ld1N0YXRlKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LCBcInBhcnNlXCIpXG4gIH07XG4gIHZhciBsZXhlciA9IC8qIEBfX1BVUkVfXyAqLyBmdW5jdGlvbigpIHtcbiAgICB2YXIgbGV4ZXIyID0ge1xuICAgICAgRU9GOiAxLFxuICAgICAgcGFyc2VFcnJvcjogLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbiBwYXJzZUVycm9yKHN0ciwgaGFzaCkge1xuICAgICAgICBpZiAodGhpcy55eS5wYXJzZXIpIHtcbiAgICAgICAgICB0aGlzLnl5LnBhcnNlci5wYXJzZUVycm9yKHN0ciwgaGFzaCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKHN0cik7XG4gICAgICAgIH1cbiAgICAgIH0sIFwicGFyc2VFcnJvclwiKSxcbiAgICAgIC8vIHJlc2V0cyB0aGUgbGV4ZXIsIHNldHMgbmV3IGlucHV0XG4gICAgICBzZXRJbnB1dDogLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbihpbnB1dCwgeXkpIHtcbiAgICAgICAgdGhpcy55eSA9IHl5IHx8IHRoaXMueXkgfHwge307XG4gICAgICAgIHRoaXMuX2lucHV0ID0gaW5wdXQ7XG4gICAgICAgIHRoaXMuX21vcmUgPSB0aGlzLl9iYWNrdHJhY2sgPSB0aGlzLmRvbmUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy55eWxpbmVubyA9IHRoaXMueXlsZW5nID0gMDtcbiAgICAgICAgdGhpcy55eXRleHQgPSB0aGlzLm1hdGNoZWQgPSB0aGlzLm1hdGNoID0gXCJcIjtcbiAgICAgICAgdGhpcy5jb25kaXRpb25TdGFjayA9IFtcIklOSVRJQUxcIl07XG4gICAgICAgIHRoaXMueXlsbG9jID0ge1xuICAgICAgICAgIGZpcnN0X2xpbmU6IDEsXG4gICAgICAgICAgZmlyc3RfY29sdW1uOiAwLFxuICAgICAgICAgIGxhc3RfbGluZTogMSxcbiAgICAgICAgICBsYXN0X2NvbHVtbjogMFxuICAgICAgICB9O1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnJhbmdlcykge1xuICAgICAgICAgIHRoaXMueXlsbG9jLnJhbmdlID0gWzAsIDBdO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gMDtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9LCBcInNldElucHV0XCIpLFxuICAgICAgLy8gY29uc3VtZXMgYW5kIHJldHVybnMgb25lIGNoYXIgZnJvbSB0aGUgaW5wdXRcbiAgICAgIGlucHV0OiAvKiBAX19QVVJFX18gKi8gX19uYW1lKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgY2ggPSB0aGlzLl9pbnB1dFswXTtcbiAgICAgICAgdGhpcy55eXRleHQgKz0gY2g7XG4gICAgICAgIHRoaXMueXlsZW5nKys7XG4gICAgICAgIHRoaXMub2Zmc2V0Kys7XG4gICAgICAgIHRoaXMubWF0Y2ggKz0gY2g7XG4gICAgICAgIHRoaXMubWF0Y2hlZCArPSBjaDtcbiAgICAgICAgdmFyIGxpbmVzID0gY2gubWF0Y2goLyg/Olxcclxcbj98XFxuKS4qL2cpO1xuICAgICAgICBpZiAobGluZXMpIHtcbiAgICAgICAgICB0aGlzLnl5bGluZW5vKys7XG4gICAgICAgICAgdGhpcy55eWxsb2MubGFzdF9saW5lKys7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy55eWxsb2MubGFzdF9jb2x1bW4rKztcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnJhbmdlcykge1xuICAgICAgICAgIHRoaXMueXlsbG9jLnJhbmdlWzFdKys7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5faW5wdXQgPSB0aGlzLl9pbnB1dC5zbGljZSgxKTtcbiAgICAgICAgcmV0dXJuIGNoO1xuICAgICAgfSwgXCJpbnB1dFwiKSxcbiAgICAgIC8vIHVuc2hpZnRzIG9uZSBjaGFyIChvciBhIHN0cmluZykgaW50byB0aGUgaW5wdXRcbiAgICAgIHVucHV0OiAvKiBAX19QVVJFX18gKi8gX19uYW1lKGZ1bmN0aW9uKGNoKSB7XG4gICAgICAgIHZhciBsZW4gPSBjaC5sZW5ndGg7XG4gICAgICAgIHZhciBsaW5lcyA9IGNoLnNwbGl0KC8oPzpcXHJcXG4/fFxcbikvZyk7XG4gICAgICAgIHRoaXMuX2lucHV0ID0gY2ggKyB0aGlzLl9pbnB1dDtcbiAgICAgICAgdGhpcy55eXRleHQgPSB0aGlzLnl5dGV4dC5zdWJzdHIoMCwgdGhpcy55eXRleHQubGVuZ3RoIC0gbGVuKTtcbiAgICAgICAgdGhpcy5vZmZzZXQgLT0gbGVuO1xuICAgICAgICB2YXIgb2xkTGluZXMgPSB0aGlzLm1hdGNoLnNwbGl0KC8oPzpcXHJcXG4/fFxcbikvZyk7XG4gICAgICAgIHRoaXMubWF0Y2ggPSB0aGlzLm1hdGNoLnN1YnN0cigwLCB0aGlzLm1hdGNoLmxlbmd0aCAtIDEpO1xuICAgICAgICB0aGlzLm1hdGNoZWQgPSB0aGlzLm1hdGNoZWQuc3Vic3RyKDAsIHRoaXMubWF0Y2hlZC5sZW5ndGggLSAxKTtcbiAgICAgICAgaWYgKGxpbmVzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICB0aGlzLnl5bGluZW5vIC09IGxpbmVzLmxlbmd0aCAtIDE7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHIgPSB0aGlzLnl5bGxvYy5yYW5nZTtcbiAgICAgICAgdGhpcy55eWxsb2MgPSB7XG4gICAgICAgICAgZmlyc3RfbGluZTogdGhpcy55eWxsb2MuZmlyc3RfbGluZSxcbiAgICAgICAgICBsYXN0X2xpbmU6IHRoaXMueXlsaW5lbm8gKyAxLFxuICAgICAgICAgIGZpcnN0X2NvbHVtbjogdGhpcy55eWxsb2MuZmlyc3RfY29sdW1uLFxuICAgICAgICAgIGxhc3RfY29sdW1uOiBsaW5lcyA/IChsaW5lcy5sZW5ndGggPT09IG9sZExpbmVzLmxlbmd0aCA/IHRoaXMueXlsbG9jLmZpcnN0X2NvbHVtbiA6IDApICsgb2xkTGluZXNbb2xkTGluZXMubGVuZ3RoIC0gbGluZXMubGVuZ3RoXS5sZW5ndGggLSBsaW5lc1swXS5sZW5ndGggOiB0aGlzLnl5bGxvYy5maXJzdF9jb2x1bW4gLSBsZW5cbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5yYW5nZXMpIHtcbiAgICAgICAgICB0aGlzLnl5bGxvYy5yYW5nZSA9IFtyWzBdLCByWzBdICsgdGhpcy55eWxlbmcgLSBsZW5dO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMueXlsZW5nID0gdGhpcy55eXRleHQubGVuZ3RoO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH0sIFwidW5wdXRcIiksXG4gICAgICAvLyBXaGVuIGNhbGxlZCBmcm9tIGFjdGlvbiwgY2FjaGVzIG1hdGNoZWQgdGV4dCBhbmQgYXBwZW5kcyBpdCBvbiBuZXh0IGFjdGlvblxuICAgICAgbW9yZTogLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5fbW9yZSA9IHRydWU7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfSwgXCJtb3JlXCIpLFxuICAgICAgLy8gV2hlbiBjYWxsZWQgZnJvbSBhY3Rpb24sIHNpZ25hbHMgdGhlIGxleGVyIHRoYXQgdGhpcyBydWxlIGZhaWxzIHRvIG1hdGNoIHRoZSBpbnB1dCwgc28gdGhlIG5leHQgbWF0Y2hpbmcgcnVsZSAocmVnZXgpIHNob3VsZCBiZSB0ZXN0ZWQgaW5zdGVhZC5cbiAgICAgIHJlamVjdDogLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5iYWNrdHJhY2tfbGV4ZXIpIHtcbiAgICAgICAgICB0aGlzLl9iYWNrdHJhY2sgPSB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiB0aGlzLnBhcnNlRXJyb3IoXCJMZXhpY2FsIGVycm9yIG9uIGxpbmUgXCIgKyAodGhpcy55eWxpbmVubyArIDEpICsgXCIuIFlvdSBjYW4gb25seSBpbnZva2UgcmVqZWN0KCkgaW4gdGhlIGxleGVyIHdoZW4gdGhlIGxleGVyIGlzIG9mIHRoZSBiYWNrdHJhY2tpbmcgcGVyc3Vhc2lvbiAob3B0aW9ucy5iYWNrdHJhY2tfbGV4ZXIgPSB0cnVlKS5cXG5cIiArIHRoaXMuc2hvd1Bvc2l0aW9uKCksIHtcbiAgICAgICAgICAgIHRleHQ6IFwiXCIsXG4gICAgICAgICAgICB0b2tlbjogbnVsbCxcbiAgICAgICAgICAgIGxpbmU6IHRoaXMueXlsaW5lbm9cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH0sIFwicmVqZWN0XCIpLFxuICAgICAgLy8gcmV0YWluIGZpcnN0IG4gY2hhcmFjdGVycyBvZiB0aGUgbWF0Y2hcbiAgICAgIGxlc3M6IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoZnVuY3Rpb24obikge1xuICAgICAgICB0aGlzLnVucHV0KHRoaXMubWF0Y2guc2xpY2UobikpO1xuICAgICAgfSwgXCJsZXNzXCIpLFxuICAgICAgLy8gZGlzcGxheXMgYWxyZWFkeSBtYXRjaGVkIGlucHV0LCBpLmUuIGZvciBlcnJvciBtZXNzYWdlc1xuICAgICAgcGFzdElucHV0OiAvKiBAX19QVVJFX18gKi8gX19uYW1lKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgcGFzdCA9IHRoaXMubWF0Y2hlZC5zdWJzdHIoMCwgdGhpcy5tYXRjaGVkLmxlbmd0aCAtIHRoaXMubWF0Y2gubGVuZ3RoKTtcbiAgICAgICAgcmV0dXJuIChwYXN0Lmxlbmd0aCA+IDIwID8gXCIuLi5cIiA6IFwiXCIpICsgcGFzdC5zdWJzdHIoLTIwKS5yZXBsYWNlKC9cXG4vZywgXCJcIik7XG4gICAgICB9LCBcInBhc3RJbnB1dFwiKSxcbiAgICAgIC8vIGRpc3BsYXlzIHVwY29taW5nIGlucHV0LCBpLmUuIGZvciBlcnJvciBtZXNzYWdlc1xuICAgICAgdXBjb21pbmdJbnB1dDogLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIG5leHQgPSB0aGlzLm1hdGNoO1xuICAgICAgICBpZiAobmV4dC5sZW5ndGggPCAyMCkge1xuICAgICAgICAgIG5leHQgKz0gdGhpcy5faW5wdXQuc3Vic3RyKDAsIDIwIC0gbmV4dC5sZW5ndGgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAobmV4dC5zdWJzdHIoMCwgMjApICsgKG5leHQubGVuZ3RoID4gMjAgPyBcIi4uLlwiIDogXCJcIikpLnJlcGxhY2UoL1xcbi9nLCBcIlwiKTtcbiAgICAgIH0sIFwidXBjb21pbmdJbnB1dFwiKSxcbiAgICAgIC8vIGRpc3BsYXlzIHRoZSBjaGFyYWN0ZXIgcG9zaXRpb24gd2hlcmUgdGhlIGxleGluZyBlcnJvciBvY2N1cnJlZCwgaS5lLiBmb3IgZXJyb3IgbWVzc2FnZXNcbiAgICAgIHNob3dQb3NpdGlvbjogLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHByZSA9IHRoaXMucGFzdElucHV0KCk7XG4gICAgICAgIHZhciBjID0gbmV3IEFycmF5KHByZS5sZW5ndGggKyAxKS5qb2luKFwiLVwiKTtcbiAgICAgICAgcmV0dXJuIHByZSArIHRoaXMudXBjb21pbmdJbnB1dCgpICsgXCJcXG5cIiArIGMgKyBcIl5cIjtcbiAgICAgIH0sIFwic2hvd1Bvc2l0aW9uXCIpLFxuICAgICAgLy8gdGVzdCB0aGUgbGV4ZWQgdG9rZW46IHJldHVybiBGQUxTRSB3aGVuIG5vdCBhIG1hdGNoLCBvdGhlcndpc2UgcmV0dXJuIHRva2VuXG4gICAgICB0ZXN0X21hdGNoOiAvKiBAX19QVVJFX18gKi8gX19uYW1lKGZ1bmN0aW9uKG1hdGNoLCBpbmRleGVkX3J1bGUpIHtcbiAgICAgICAgdmFyIHRva2VuLCBsaW5lcywgYmFja3VwO1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmJhY2t0cmFja19sZXhlcikge1xuICAgICAgICAgIGJhY2t1cCA9IHtcbiAgICAgICAgICAgIHl5bGluZW5vOiB0aGlzLnl5bGluZW5vLFxuICAgICAgICAgICAgeXlsbG9jOiB7XG4gICAgICAgICAgICAgIGZpcnN0X2xpbmU6IHRoaXMueXlsbG9jLmZpcnN0X2xpbmUsXG4gICAgICAgICAgICAgIGxhc3RfbGluZTogdGhpcy5sYXN0X2xpbmUsXG4gICAgICAgICAgICAgIGZpcnN0X2NvbHVtbjogdGhpcy55eWxsb2MuZmlyc3RfY29sdW1uLFxuICAgICAgICAgICAgICBsYXN0X2NvbHVtbjogdGhpcy55eWxsb2MubGFzdF9jb2x1bW5cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB5eXRleHQ6IHRoaXMueXl0ZXh0LFxuICAgICAgICAgICAgbWF0Y2g6IHRoaXMubWF0Y2gsXG4gICAgICAgICAgICBtYXRjaGVzOiB0aGlzLm1hdGNoZXMsXG4gICAgICAgICAgICBtYXRjaGVkOiB0aGlzLm1hdGNoZWQsXG4gICAgICAgICAgICB5eWxlbmc6IHRoaXMueXlsZW5nLFxuICAgICAgICAgICAgb2Zmc2V0OiB0aGlzLm9mZnNldCxcbiAgICAgICAgICAgIF9tb3JlOiB0aGlzLl9tb3JlLFxuICAgICAgICAgICAgX2lucHV0OiB0aGlzLl9pbnB1dCxcbiAgICAgICAgICAgIHl5OiB0aGlzLnl5LFxuICAgICAgICAgICAgY29uZGl0aW9uU3RhY2s6IHRoaXMuY29uZGl0aW9uU3RhY2suc2xpY2UoMCksXG4gICAgICAgICAgICBkb25lOiB0aGlzLmRvbmVcbiAgICAgICAgICB9O1xuICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMucmFuZ2VzKSB7XG4gICAgICAgICAgICBiYWNrdXAueXlsbG9jLnJhbmdlID0gdGhpcy55eWxsb2MucmFuZ2Uuc2xpY2UoMCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGxpbmVzID0gbWF0Y2hbMF0ubWF0Y2goLyg/Olxcclxcbj98XFxuKS4qL2cpO1xuICAgICAgICBpZiAobGluZXMpIHtcbiAgICAgICAgICB0aGlzLnl5bGluZW5vICs9IGxpbmVzLmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnl5bGxvYyA9IHtcbiAgICAgICAgICBmaXJzdF9saW5lOiB0aGlzLnl5bGxvYy5sYXN0X2xpbmUsXG4gICAgICAgICAgbGFzdF9saW5lOiB0aGlzLnl5bGluZW5vICsgMSxcbiAgICAgICAgICBmaXJzdF9jb2x1bW46IHRoaXMueXlsbG9jLmxhc3RfY29sdW1uLFxuICAgICAgICAgIGxhc3RfY29sdW1uOiBsaW5lcyA/IGxpbmVzW2xpbmVzLmxlbmd0aCAtIDFdLmxlbmd0aCAtIGxpbmVzW2xpbmVzLmxlbmd0aCAtIDFdLm1hdGNoKC9cXHI/XFxuPy8pWzBdLmxlbmd0aCA6IHRoaXMueXlsbG9jLmxhc3RfY29sdW1uICsgbWF0Y2hbMF0ubGVuZ3RoXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMueXl0ZXh0ICs9IG1hdGNoWzBdO1xuICAgICAgICB0aGlzLm1hdGNoICs9IG1hdGNoWzBdO1xuICAgICAgICB0aGlzLm1hdGNoZXMgPSBtYXRjaDtcbiAgICAgICAgdGhpcy55eWxlbmcgPSB0aGlzLnl5dGV4dC5sZW5ndGg7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMucmFuZ2VzKSB7XG4gICAgICAgICAgdGhpcy55eWxsb2MucmFuZ2UgPSBbdGhpcy5vZmZzZXQsIHRoaXMub2Zmc2V0ICs9IHRoaXMueXlsZW5nXTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9tb3JlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX2JhY2t0cmFjayA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9pbnB1dCA9IHRoaXMuX2lucHV0LnNsaWNlKG1hdGNoWzBdLmxlbmd0aCk7XG4gICAgICAgIHRoaXMubWF0Y2hlZCArPSBtYXRjaFswXTtcbiAgICAgICAgdG9rZW4gPSB0aGlzLnBlcmZvcm1BY3Rpb24uY2FsbCh0aGlzLCB0aGlzLnl5LCB0aGlzLCBpbmRleGVkX3J1bGUsIHRoaXMuY29uZGl0aW9uU3RhY2tbdGhpcy5jb25kaXRpb25TdGFjay5sZW5ndGggLSAxXSk7XG4gICAgICAgIGlmICh0aGlzLmRvbmUgJiYgdGhpcy5faW5wdXQpIHtcbiAgICAgICAgICB0aGlzLmRvbmUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodG9rZW4pIHtcbiAgICAgICAgICByZXR1cm4gdG9rZW47XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5fYmFja3RyYWNrKSB7XG4gICAgICAgICAgZm9yICh2YXIgayBpbiBiYWNrdXApIHtcbiAgICAgICAgICAgIHRoaXNba10gPSBiYWNrdXBba107XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9LCBcInRlc3RfbWF0Y2hcIiksXG4gICAgICAvLyByZXR1cm4gbmV4dCBtYXRjaCBpbiBpbnB1dFxuICAgICAgbmV4dDogLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHRoaXMuZG9uZSkge1xuICAgICAgICAgIHJldHVybiB0aGlzLkVPRjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMuX2lucHV0KSB7XG4gICAgICAgICAgdGhpcy5kb25lID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdG9rZW4sIG1hdGNoLCB0ZW1wTWF0Y2gsIGluZGV4O1xuICAgICAgICBpZiAoIXRoaXMuX21vcmUpIHtcbiAgICAgICAgICB0aGlzLnl5dGV4dCA9IFwiXCI7XG4gICAgICAgICAgdGhpcy5tYXRjaCA9IFwiXCI7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJ1bGVzID0gdGhpcy5fY3VycmVudFJ1bGVzKCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcnVsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICB0ZW1wTWF0Y2ggPSB0aGlzLl9pbnB1dC5tYXRjaCh0aGlzLnJ1bGVzW3J1bGVzW2ldXSk7XG4gICAgICAgICAgaWYgKHRlbXBNYXRjaCAmJiAoIW1hdGNoIHx8IHRlbXBNYXRjaFswXS5sZW5ndGggPiBtYXRjaFswXS5sZW5ndGgpKSB7XG4gICAgICAgICAgICBtYXRjaCA9IHRlbXBNYXRjaDtcbiAgICAgICAgICAgIGluZGV4ID0gaTtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuYmFja3RyYWNrX2xleGVyKSB7XG4gICAgICAgICAgICAgIHRva2VuID0gdGhpcy50ZXN0X21hdGNoKHRlbXBNYXRjaCwgcnVsZXNbaV0pO1xuICAgICAgICAgICAgICBpZiAodG9rZW4gIT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRva2VuO1xuICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuX2JhY2t0cmFjaykge1xuICAgICAgICAgICAgICAgIG1hdGNoID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKCF0aGlzLm9wdGlvbnMuZmxleCkge1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgdG9rZW4gPSB0aGlzLnRlc3RfbWF0Y2gobWF0Y2gsIHJ1bGVzW2luZGV4XSk7XG4gICAgICAgICAgaWYgKHRva2VuICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRva2VuO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuX2lucHV0ID09PSBcIlwiKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuRU9GO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiB0aGlzLnBhcnNlRXJyb3IoXCJMZXhpY2FsIGVycm9yIG9uIGxpbmUgXCIgKyAodGhpcy55eWxpbmVubyArIDEpICsgXCIuIFVucmVjb2duaXplZCB0ZXh0LlxcblwiICsgdGhpcy5zaG93UG9zaXRpb24oKSwge1xuICAgICAgICAgICAgdGV4dDogXCJcIixcbiAgICAgICAgICAgIHRva2VuOiBudWxsLFxuICAgICAgICAgICAgbGluZTogdGhpcy55eWxpbmVub1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9LCBcIm5leHRcIiksXG4gICAgICAvLyByZXR1cm4gbmV4dCBtYXRjaCB0aGF0IGhhcyBhIHRva2VuXG4gICAgICBsZXg6IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoZnVuY3Rpb24gbGV4KCkge1xuICAgICAgICB2YXIgciA9IHRoaXMubmV4dCgpO1xuICAgICAgICBpZiAocikge1xuICAgICAgICAgIHJldHVybiByO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiB0aGlzLmxleCgpO1xuICAgICAgICB9XG4gICAgICB9LCBcImxleFwiKSxcbiAgICAgIC8vIGFjdGl2YXRlcyBhIG5ldyBsZXhlciBjb25kaXRpb24gc3RhdGUgKHB1c2hlcyB0aGUgbmV3IGxleGVyIGNvbmRpdGlvbiBzdGF0ZSBvbnRvIHRoZSBjb25kaXRpb24gc3RhY2spXG4gICAgICBiZWdpbjogLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbiBiZWdpbihjb25kaXRpb24pIHtcbiAgICAgICAgdGhpcy5jb25kaXRpb25TdGFjay5wdXNoKGNvbmRpdGlvbik7XG4gICAgICB9LCBcImJlZ2luXCIpLFxuICAgICAgLy8gcG9wIHRoZSBwcmV2aW91c2x5IGFjdGl2ZSBsZXhlciBjb25kaXRpb24gc3RhdGUgb2ZmIHRoZSBjb25kaXRpb24gc3RhY2tcbiAgICAgIHBvcFN0YXRlOiAvKiBAX19QVVJFX18gKi8gX19uYW1lKGZ1bmN0aW9uIHBvcFN0YXRlKCkge1xuICAgICAgICB2YXIgbiA9IHRoaXMuY29uZGl0aW9uU3RhY2subGVuZ3RoIC0gMTtcbiAgICAgICAgaWYgKG4gPiAwKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuY29uZGl0aW9uU3RhY2sucG9wKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuY29uZGl0aW9uU3RhY2tbMF07XG4gICAgICAgIH1cbiAgICAgIH0sIFwicG9wU3RhdGVcIiksXG4gICAgICAvLyBwcm9kdWNlIHRoZSBsZXhlciBydWxlIHNldCB3aGljaCBpcyBhY3RpdmUgZm9yIHRoZSBjdXJyZW50bHkgYWN0aXZlIGxleGVyIGNvbmRpdGlvbiBzdGF0ZVxuICAgICAgX2N1cnJlbnRSdWxlczogLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbiBfY3VycmVudFJ1bGVzKCkge1xuICAgICAgICBpZiAodGhpcy5jb25kaXRpb25TdGFjay5sZW5ndGggJiYgdGhpcy5jb25kaXRpb25TdGFja1t0aGlzLmNvbmRpdGlvblN0YWNrLmxlbmd0aCAtIDFdKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuY29uZGl0aW9uc1t0aGlzLmNvbmRpdGlvblN0YWNrW3RoaXMuY29uZGl0aW9uU3RhY2subGVuZ3RoIC0gMV1dLnJ1bGVzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiB0aGlzLmNvbmRpdGlvbnNbXCJJTklUSUFMXCJdLnJ1bGVzO1xuICAgICAgICB9XG4gICAgICB9LCBcIl9jdXJyZW50UnVsZXNcIiksXG4gICAgICAvLyByZXR1cm4gdGhlIGN1cnJlbnRseSBhY3RpdmUgbGV4ZXIgY29uZGl0aW9uIHN0YXRlOyB3aGVuIGFuIGluZGV4IGFyZ3VtZW50IGlzIHByb3ZpZGVkIGl0IHByb2R1Y2VzIHRoZSBOLXRoIHByZXZpb3VzIGNvbmRpdGlvbiBzdGF0ZSwgaWYgYXZhaWxhYmxlXG4gICAgICB0b3BTdGF0ZTogLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbiB0b3BTdGF0ZShuKSB7XG4gICAgICAgIG4gPSB0aGlzLmNvbmRpdGlvblN0YWNrLmxlbmd0aCAtIDEgLSBNYXRoLmFicyhuIHx8IDApO1xuICAgICAgICBpZiAobiA+PSAwKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuY29uZGl0aW9uU3RhY2tbbl07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIFwiSU5JVElBTFwiO1xuICAgICAgICB9XG4gICAgICB9LCBcInRvcFN0YXRlXCIpLFxuICAgICAgLy8gYWxpYXMgZm9yIGJlZ2luKGNvbmRpdGlvbilcbiAgICAgIHB1c2hTdGF0ZTogLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbiBwdXNoU3RhdGUoY29uZGl0aW9uKSB7XG4gICAgICAgIHRoaXMuYmVnaW4oY29uZGl0aW9uKTtcbiAgICAgIH0sIFwicHVzaFN0YXRlXCIpLFxuICAgICAgLy8gcmV0dXJuIHRoZSBudW1iZXIgb2Ygc3RhdGVzIGN1cnJlbnRseSBvbiB0aGUgc3RhY2tcbiAgICAgIHN0YXRlU3RhY2tTaXplOiAvKiBAX19QVVJFX18gKi8gX19uYW1lKGZ1bmN0aW9uIHN0YXRlU3RhY2tTaXplKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb25kaXRpb25TdGFjay5sZW5ndGg7XG4gICAgICB9LCBcInN0YXRlU3RhY2tTaXplXCIpLFxuICAgICAgb3B0aW9uczoge30sXG4gICAgICBwZXJmb3JtQWN0aW9uOiAvKiBAX19QVVJFX18gKi8gX19uYW1lKGZ1bmN0aW9uIGFub255bW91cyh5eSwgeXlfLCAkYXZvaWRpbmdfbmFtZV9jb2xsaXNpb25zLCBZWV9TVEFSVCkge1xuICAgICAgICB2YXIgWVlTVEFURSA9IFlZX1NUQVJUO1xuICAgICAgICBzd2l0Y2ggKCRhdm9pZGluZ19uYW1lX2NvbGxpc2lvbnMpIHtcbiAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICByZXR1cm4gMTA7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkZvdW5kIHNwYWNlLWJsb2NrXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDMxO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJGb3VuZCBubC1ibG9ja1wiKTtcbiAgICAgICAgICAgIHJldHVybiAzMTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiRm91bmQgc3BhY2UtYmxvY2tcIik7XG4gICAgICAgICAgICByZXR1cm4gMjk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIi5cIiwgeXlfLnl5dGV4dCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDU6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIl9cIiwgeXlfLnl5dGV4dCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDY6XG4gICAgICAgICAgICByZXR1cm4gNTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNzpcbiAgICAgICAgICAgIHl5Xy55eXRleHQgPSAtMTtcbiAgICAgICAgICAgIHJldHVybiAyODtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgODpcbiAgICAgICAgICAgIHl5Xy55eXRleHQgPSB5eV8ueXl0ZXh0LnJlcGxhY2UoL2NvbHVtbnNcXHMrLywgXCJcIik7XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkNPTFVNTlMgKExFWClcIiwgeXlfLnl5dGV4dCk7XG4gICAgICAgICAgICByZXR1cm4gMjg7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcIm1kX3N0cmluZ1wiKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICByZXR1cm4gXCJNRF9TVFJcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMTE6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgICAgdGhpcy5wdXNoU3RhdGUoXCJzdHJpbmdcIik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDEzOlxuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMRVg6IFBPUFBJTkcgU1RSOlwiLCB5eV8ueXl0ZXh0KTtcbiAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMTQ6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxFWDogU1RSIGVuZDpcIiwgeXlfLnl5dGV4dCk7XG4gICAgICAgICAgICByZXR1cm4gXCJTVFJcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMTU6XG4gICAgICAgICAgICB5eV8ueXl0ZXh0ID0geXlfLnl5dGV4dC5yZXBsYWNlKC9zcGFjZVxcOi8sIFwiXCIpO1xuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJTUEFDRSBOVU0gKExFWClcIiwgeXlfLnl5dGV4dCk7XG4gICAgICAgICAgICByZXR1cm4gMjE7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDE2OlxuICAgICAgICAgICAgeXlfLnl5dGV4dCA9IFwiMVwiO1xuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJDT0xVTU5TIChMRVgpXCIsIHl5Xy55eXRleHQpO1xuICAgICAgICAgICAgcmV0dXJuIDIxO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAxNzpcbiAgICAgICAgICAgIHJldHVybiA0MztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMTg6XG4gICAgICAgICAgICByZXR1cm4gXCJMSU5LU1RZTEVcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMTk6XG4gICAgICAgICAgICByZXR1cm4gXCJJTlRFUlBPTEFURVwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAyMDpcbiAgICAgICAgICAgIHRoaXMucHVzaFN0YXRlKFwiQ0xBU1NERUZcIik7XG4gICAgICAgICAgICByZXR1cm4gNDA7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDIxOlxuICAgICAgICAgICAgdGhpcy5wb3BTdGF0ZSgpO1xuICAgICAgICAgICAgdGhpcy5wdXNoU3RhdGUoXCJDTEFTU0RFRklEXCIpO1xuICAgICAgICAgICAgcmV0dXJuIFwiREVGQVVMVF9DTEFTU0RFRl9JRFwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAyMjpcbiAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtcbiAgICAgICAgICAgIHRoaXMucHVzaFN0YXRlKFwiQ0xBU1NERUZJRFwiKTtcbiAgICAgICAgICAgIHJldHVybiA0MTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMjM6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICByZXR1cm4gNDI7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDI0OlxuICAgICAgICAgICAgdGhpcy5wdXNoU3RhdGUoXCJDTEFTU1wiKTtcbiAgICAgICAgICAgIHJldHVybiA0NDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMjU6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcIkNMQVNTX1NUWUxFXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDQ1O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAyNjpcbiAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtcbiAgICAgICAgICAgIHJldHVybiA0NjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMjc6XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcIlNUWUxFX1NUTU5UXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDQ3O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAyODpcbiAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtcbiAgICAgICAgICAgIHRoaXMucHVzaFN0YXRlKFwiU1RZTEVfREVGSU5JVElPTlwiKTtcbiAgICAgICAgICAgIHJldHVybiA0ODtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMjk6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICByZXR1cm4gNDk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDMwOlxuICAgICAgICAgICAgdGhpcy5wdXNoU3RhdGUoXCJhY2NfdGl0bGVcIik7XG4gICAgICAgICAgICByZXR1cm4gXCJhY2NfdGl0bGVcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMzE6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICByZXR1cm4gXCJhY2NfdGl0bGVfdmFsdWVcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcImFjY19kZXNjclwiKTtcbiAgICAgICAgICAgIHJldHVybiBcImFjY19kZXNjclwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAzMzpcbiAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtcbiAgICAgICAgICAgIHJldHVybiBcImFjY19kZXNjcl92YWx1ZVwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAzNDpcbiAgICAgICAgICAgIHRoaXMucHVzaFN0YXRlKFwiYWNjX2Rlc2NyX211bHRpbGluZVwiKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMzU6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDM2OlxuICAgICAgICAgICAgcmV0dXJuIFwiYWNjX2Rlc2NyX211bHRpbGluZV92YWx1ZVwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAzNzpcbiAgICAgICAgICAgIHJldHVybiAzMDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMzg6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogKChcIik7XG4gICAgICAgICAgICByZXR1cm4gXCJOT0RFX0RFTkRcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMzk6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogKChcIik7XG4gICAgICAgICAgICByZXR1cm4gXCJOT0RFX0RFTkRcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNDA6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogKSlcIik7XG4gICAgICAgICAgICByZXR1cm4gXCJOT0RFX0RFTkRcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNDE6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogKChcIik7XG4gICAgICAgICAgICByZXR1cm4gXCJOT0RFX0RFTkRcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNDI6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogKChcIik7XG4gICAgICAgICAgICByZXR1cm4gXCJOT0RFX0RFTkRcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNDM6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogKC1cIik7XG4gICAgICAgICAgICByZXR1cm4gXCJOT0RFX0RFTkRcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNDQ6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogLSlcIik7XG4gICAgICAgICAgICByZXR1cm4gXCJOT0RFX0RFTkRcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNDU6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogKChcIik7XG4gICAgICAgICAgICByZXR1cm4gXCJOT0RFX0RFTkRcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNDY6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogXV1cIik7XG4gICAgICAgICAgICByZXR1cm4gXCJOT0RFX0RFTkRcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogKFwiKTtcbiAgICAgICAgICAgIHJldHVybiBcIk5PREVfREVORFwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA0ODpcbiAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4OiBdKVwiKTtcbiAgICAgICAgICAgIHJldHVybiBcIk5PREVfREVORFwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA0OTpcbiAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4OiAvXVwiKTtcbiAgICAgICAgICAgIHJldHVybiBcIk5PREVfREVORFwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA1MDpcbiAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4OiAvXVwiKTtcbiAgICAgICAgICAgIHJldHVybiBcIk5PREVfREVORFwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA1MTpcbiAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4OiApXVwiKTtcbiAgICAgICAgICAgIHJldHVybiBcIk5PREVfREVORFwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA1MjpcbiAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4OiApXCIpO1xuICAgICAgICAgICAgcmV0dXJuIFwiTk9ERV9ERU5EXCI7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDUzOlxuICAgICAgICAgICAgdGhpcy5wb3BTdGF0ZSgpO1xuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXg6IF0+XCIpO1xuICAgICAgICAgICAgcmV0dXJuIFwiTk9ERV9ERU5EXCI7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDU0OlxuICAgICAgICAgICAgdGhpcy5wb3BTdGF0ZSgpO1xuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXg6IF1cIik7XG4gICAgICAgICAgICByZXR1cm4gXCJOT0RFX0RFTkRcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNTU6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleGE6IC0pXCIpO1xuICAgICAgICAgICAgdGhpcy5wdXNoU3RhdGUoXCJOT0RFXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDM2O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA1NjpcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4YTogKC1cIik7XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcIk5PREVcIik7XG4gICAgICAgICAgICByZXR1cm4gMzY7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDU3OlxuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXhhOiApKVwiKTtcbiAgICAgICAgICAgIHRoaXMucHVzaFN0YXRlKFwiTk9ERVwiKTtcbiAgICAgICAgICAgIHJldHVybiAzNjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNTg6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleGE6IClcIik7XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcIk5PREVcIik7XG4gICAgICAgICAgICByZXR1cm4gMzY7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDU5OlxuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXg6ICgoKFwiKTtcbiAgICAgICAgICAgIHRoaXMucHVzaFN0YXRlKFwiTk9ERVwiKTtcbiAgICAgICAgICAgIHJldHVybiAzNjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNjA6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleGE6IClcIik7XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcIk5PREVcIik7XG4gICAgICAgICAgICByZXR1cm4gMzY7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDYxOlxuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXhhOiApXCIpO1xuICAgICAgICAgICAgdGhpcy5wdXNoU3RhdGUoXCJOT0RFXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDM2O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA2MjpcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4YTogKVwiKTtcbiAgICAgICAgICAgIHRoaXMucHVzaFN0YXRlKFwiTk9ERVwiKTtcbiAgICAgICAgICAgIHJldHVybiAzNjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNjM6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleGM6ID5cIik7XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcIk5PREVcIik7XG4gICAgICAgICAgICByZXR1cm4gMzY7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXhhOiAoW1wiKTtcbiAgICAgICAgICAgIHRoaXMucHVzaFN0YXRlKFwiTk9ERVwiKTtcbiAgICAgICAgICAgIHJldHVybiAzNjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNjU6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleGE6IClcIik7XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcIk5PREVcIik7XG4gICAgICAgICAgICByZXR1cm4gMzY7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDY2OlxuICAgICAgICAgICAgdGhpcy5wdXNoU3RhdGUoXCJOT0RFXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDM2O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA2NzpcbiAgICAgICAgICAgIHRoaXMucHVzaFN0YXRlKFwiTk9ERVwiKTtcbiAgICAgICAgICAgIHJldHVybiAzNjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNjg6XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcIk5PREVcIik7XG4gICAgICAgICAgICByZXR1cm4gMzY7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDY5OlxuICAgICAgICAgICAgdGhpcy5wdXNoU3RhdGUoXCJOT0RFXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDM2O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA3MDpcbiAgICAgICAgICAgIHRoaXMucHVzaFN0YXRlKFwiTk9ERVwiKTtcbiAgICAgICAgICAgIHJldHVybiAzNjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNzE6XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcIk5PREVcIik7XG4gICAgICAgICAgICByZXR1cm4gMzY7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDcyOlxuICAgICAgICAgICAgdGhpcy5wdXNoU3RhdGUoXCJOT0RFXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDM2O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA3MzpcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4YTogW1wiKTtcbiAgICAgICAgICAgIHRoaXMucHVzaFN0YXRlKFwiTk9ERVwiKTtcbiAgICAgICAgICAgIHJldHVybiAzNjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNzQ6XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcIkJMT0NLX0FSUk9XXCIpO1xuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMRVggQVJSIFNUQVJUXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDM4O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA3NTpcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4OiBOT0RFX0lEXCIsIHl5Xy55eXRleHQpO1xuICAgICAgICAgICAgcmV0dXJuIDMyO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA3NjpcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4OiBFT0ZcIiwgeXlfLnl5dGV4dCk7XG4gICAgICAgICAgICByZXR1cm4gODtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNzc6XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcIm1kX3N0cmluZ1wiKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNzg6XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcIm1kX3N0cmluZ1wiKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNzk6XG4gICAgICAgICAgICByZXR1cm4gXCJOT0RFX0RFU0NSXCI7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDgwOlxuICAgICAgICAgICAgdGhpcy5wb3BTdGF0ZSgpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA4MTpcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4OiBTdGFydGluZyBzdHJpbmdcIik7XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcInN0cmluZ1wiKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgODI6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxFWCBBUlI6IFN0YXJ0aW5nIHN0cmluZ1wiKTtcbiAgICAgICAgICAgIHRoaXMucHVzaFN0YXRlKFwic3RyaW5nXCIpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA4MzpcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTEVYOiBOT0RFX0RFU0NSOlwiLCB5eV8ueXl0ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiBcIk5PREVfREVTQ1JcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgODQ6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxFWCBQT1BQSU5HXCIpO1xuICAgICAgICAgICAgdGhpcy5wb3BTdGF0ZSgpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA4NTpcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4OiA9PkJBRVwiKTtcbiAgICAgICAgICAgIHRoaXMucHVzaFN0YXRlKFwiQVJST1dfRElSXCIpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA4NjpcbiAgICAgICAgICAgIHl5Xy55eXRleHQgPSB5eV8ueXl0ZXh0LnJlcGxhY2UoL14sXFxzKi8sIFwiXCIpO1xuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXggKHJpZ2h0KTogZGlyOlwiLCB5eV8ueXl0ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiBcIkRJUlwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA4NzpcbiAgICAgICAgICAgIHl5Xy55eXRleHQgPSB5eV8ueXl0ZXh0LnJlcGxhY2UoL14sXFxzKi8sIFwiXCIpO1xuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXggKGxlZnQpOlwiLCB5eV8ueXl0ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiBcIkRJUlwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA4ODpcbiAgICAgICAgICAgIHl5Xy55eXRleHQgPSB5eV8ueXl0ZXh0LnJlcGxhY2UoL14sXFxzKi8sIFwiXCIpO1xuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXggKHgpOlwiLCB5eV8ueXl0ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiBcIkRJUlwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA4OTpcbiAgICAgICAgICAgIHl5Xy55eXRleHQgPSB5eV8ueXl0ZXh0LnJlcGxhY2UoL14sXFxzKi8sIFwiXCIpO1xuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXggKHkpOlwiLCB5eV8ueXl0ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiBcIkRJUlwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA5MDpcbiAgICAgICAgICAgIHl5Xy55eXRleHQgPSB5eV8ueXl0ZXh0LnJlcGxhY2UoL14sXFxzKi8sIFwiXCIpO1xuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXggKHVwKTpcIiwgeXlfLnl5dGV4dCk7XG4gICAgICAgICAgICByZXR1cm4gXCJESVJcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgOTE6XG4gICAgICAgICAgICB5eV8ueXl0ZXh0ID0geXlfLnl5dGV4dC5yZXBsYWNlKC9eLFxccyovLCBcIlwiKTtcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4IChkb3duKTpcIiwgeXlfLnl5dGV4dCk7XG4gICAgICAgICAgICByZXR1cm4gXCJESVJcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgOTI6XG4gICAgICAgICAgICB5eV8ueXl0ZXh0ID0gXCJdPlwiO1xuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXggKEFSUk9XX0RJUiBlbmQpOlwiLCB5eV8ueXl0ZXh0KTtcbiAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtcbiAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtcbiAgICAgICAgICAgIHJldHVybiBcIkJMT0NLX0FSUk9XX0VORFwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA5MzpcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4OiBMSU5LXCIsIFwiI1wiICsgeXlfLnl5dGV4dCArIFwiI1wiKTtcbiAgICAgICAgICAgIHJldHVybiAxNTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgOTQ6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogTElOS1wiLCB5eV8ueXl0ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiAxNTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgOTU6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogTElOS1wiLCB5eV8ueXl0ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiAxNTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgOTY6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogTElOS1wiLCB5eV8ueXl0ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiAxNTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgOTc6XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogU1RBUlRfTElOS1wiLCB5eV8ueXl0ZXh0KTtcbiAgICAgICAgICAgIHRoaXMucHVzaFN0YXRlKFwiTExBQkVMXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDE2O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA5ODpcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4OiBTVEFSVF9MSU5LXCIsIHl5Xy55eXRleHQpO1xuICAgICAgICAgICAgdGhpcy5wdXNoU3RhdGUoXCJMTEFCRUxcIik7XG4gICAgICAgICAgICByZXR1cm4gMTY7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDk5OlxuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXg6IFNUQVJUX0xJTktcIiwgeXlfLnl5dGV4dCk7XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcIkxMQUJFTFwiKTtcbiAgICAgICAgICAgIHJldHVybiAxNjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMTAwOlxuICAgICAgICAgICAgdGhpcy5wdXNoU3RhdGUoXCJtZF9zdHJpbmdcIik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDEwMTpcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4OiBTdGFydGluZyBzdHJpbmdcIik7XG4gICAgICAgICAgICB0aGlzLnB1c2hTdGF0ZShcInN0cmluZ1wiKTtcbiAgICAgICAgICAgIHJldHVybiBcIkxJTktfTEFCRUxcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMTAyOlxuICAgICAgICAgICAgdGhpcy5wb3BTdGF0ZSgpO1xuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXg6IExJTktcIiwgXCIjXCIgKyB5eV8ueXl0ZXh0ICsgXCIjXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDE1O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAxMDM6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICB5eS5nZXRMb2dnZXIoKS5kZWJ1ZyhcIkxleDogTElOS1wiLCB5eV8ueXl0ZXh0KTtcbiAgICAgICAgICAgIHJldHVybiAxNTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMTA0OlxuICAgICAgICAgICAgdGhpcy5wb3BTdGF0ZSgpO1xuICAgICAgICAgICAgeXkuZ2V0TG9nZ2VyKCkuZGVidWcoXCJMZXg6IExJTktcIiwgeXlfLnl5dGV4dCk7XG4gICAgICAgICAgICByZXR1cm4gMTU7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDEwNTpcbiAgICAgICAgICAgIHl5LmdldExvZ2dlcigpLmRlYnVnKFwiTGV4OiBDT0xPTlwiLCB5eV8ueXl0ZXh0KTtcbiAgICAgICAgICAgIHl5Xy55eXRleHQgPSB5eV8ueXl0ZXh0LnNsaWNlKDEpO1xuICAgICAgICAgICAgcmV0dXJuIDI3O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH0sIFwiYW5vbnltb3VzXCIpLFxuICAgICAgcnVsZXM6IFsvXig/OmJsb2NrLWJldGFcXGIpLywgL14oPzpibG9ja1xccyspLywgL14oPzpibG9ja1xcbispLywgL14oPzpibG9jazopLywgL14oPzpbXFxzXSspLywgL14oPzpbXFxuXSspLywgL14oPzooKFxcdTAwMERcXHUwMDBBKXwoXFx1MDAwQSkpKS8sIC9eKD86Y29sdW1uc1xccythdXRvXFxiKS8sIC9eKD86Y29sdW1uc1xccytbXFxkXSspLywgL14oPzpbXCJdW2BdKS8sIC9eKD86W15gXCJdKykvLCAvXig/OltgXVtcIl0pLywgL14oPzpbXCJdKS8sIC9eKD86W1wiXSkvLCAvXig/OlteXCJdKikvLCAvXig/OnNwYWNlWzpdXFxkKykvLCAvXig/OnNwYWNlXFxiKS8sIC9eKD86ZGVmYXVsdFxcYikvLCAvXig/OmxpbmtTdHlsZVxcYikvLCAvXig/OmludGVycG9sYXRlXFxiKS8sIC9eKD86Y2xhc3NEZWZcXHMrKS8sIC9eKD86REVGQVVMVFxccyspLywgL14oPzpcXHcrXFxzKykvLCAvXig/OlteXFxuXSopLywgL14oPzpjbGFzc1xccyspLywgL14oPzooXFx3KykrKCgsXFxzKlxcdyspKikpLywgL14oPzpbXlxcbl0qKS8sIC9eKD86c3R5bGVcXHMrKS8sIC9eKD86KFxcdyspKygoLFxccypcXHcrKSopKS8sIC9eKD86W15cXG5dKikvLCAvXig/OmFjY1RpdGxlXFxzKjpcXHMqKS8sIC9eKD86KD8hXFxufHwpKlteXFxuXSopLywgL14oPzphY2NEZXNjclxccyo6XFxzKikvLCAvXig/Oig/IVxcbnx8KSpbXlxcbl0qKS8sIC9eKD86YWNjRGVzY3JcXHMqXFx7XFxzKikvLCAvXig/OltcXH1dKS8sIC9eKD86W15cXH1dKikvLCAvXig/OmVuZFxcYlxccyopLywgL14oPzpcXChcXChcXCgpLywgL14oPzpcXClcXClcXCkpLywgL14oPzpbXFwpXVxcKSkvLCAvXig/OlxcfVxcfSkvLCAvXig/OlxcfSkvLCAvXig/OlxcKC0pLywgL14oPzotXFwpKS8sIC9eKD86XFwoXFwoKS8sIC9eKD86XFxdXFxdKS8sIC9eKD86XFwoKS8sIC9eKD86XFxdXFwpKS8sIC9eKD86XFxcXFxcXSkvLCAvXig/OlxcL1xcXSkvLCAvXig/OlxcKVxcXSkvLCAvXig/OltcXCldKS8sIC9eKD86XFxdPikvLCAvXig/OltcXF1dKS8sIC9eKD86LVxcKSkvLCAvXig/OlxcKC0pLywgL14oPzpcXClcXCkpLywgL14oPzpcXCkpLywgL14oPzpcXChcXChcXCgpLywgL14oPzpcXChcXCgpLywgL14oPzpcXHtcXHspLywgL14oPzpcXHspLywgL14oPzo+KS8sIC9eKD86XFwoXFxbKS8sIC9eKD86XFwoKS8sIC9eKD86XFxbXFxbKS8sIC9eKD86XFxbXFx8KS8sIC9eKD86XFxbXFwoKS8sIC9eKD86XFwpXFwpXFwpKS8sIC9eKD86XFxbXFxcXCkvLCAvXig/OlxcW1xcLykvLCAvXig/OlxcW1xcXFwpLywgL14oPzpcXFspLywgL14oPzo8XFxbKS8sIC9eKD86W15cXChcXFtcXG5cXC1cXClcXHtcXH1cXHNcXDxcXD46XSspLywgL14oPzokKS8sIC9eKD86W1wiXVtgXSkvLCAvXig/OltcIl1bYF0pLywgL14oPzpbXmBcIl0rKS8sIC9eKD86W2BdW1wiXSkvLCAvXig/OltcIl0pLywgL14oPzpbXCJdKS8sIC9eKD86W15cIl0rKS8sIC9eKD86W1wiXSkvLCAvXig/OlxcXT5cXHMqXFwoKS8sIC9eKD86LD9cXHMqcmlnaHRcXHMqKS8sIC9eKD86LD9cXHMqbGVmdFxccyopLywgL14oPzosP1xccyp4XFxzKikvLCAvXig/Oiw/XFxzKnlcXHMqKS8sIC9eKD86LD9cXHMqdXBcXHMqKS8sIC9eKD86LD9cXHMqZG93blxccyopLywgL14oPzpcXClcXHMqKS8sIC9eKD86XFxzKlt4bzxdPy0tK1steG8+XVxccyopLywgL14oPzpcXHMqW3hvPF0/PT0rWz14bz5dXFxzKikvLCAvXig/OlxccypbeG88XT8tP1xcListW3hvPl0/XFxzKikvLCAvXig/Olxccyp+fltcXH5dK1xccyopLywgL14oPzpcXHMqW3hvPF0/LS1cXHMqKS8sIC9eKD86XFxzKlt4bzxdPz09XFxzKikvLCAvXig/OlxccypbeG88XT8tXFwuXFxzKikvLCAvXig/OltcIl1bYF0pLywgL14oPzpbXCJdKS8sIC9eKD86XFxzKlt4bzxdPy0tK1steG8+XVxccyopLywgL14oPzpcXHMqW3hvPF0/PT0rWz14bz5dXFxzKikvLCAvXig/OlxccypbeG88XT8tP1xcListW3hvPl0/XFxzKikvLCAvXig/OjpcXGQrKS9dLFxuICAgICAgY29uZGl0aW9uczogeyBcIlNUWUxFX0RFRklOSVRJT05cIjogeyBcInJ1bGVzXCI6IFsyOV0sIFwiaW5jbHVzaXZlXCI6IGZhbHNlIH0sIFwiU1RZTEVfU1RNTlRcIjogeyBcInJ1bGVzXCI6IFsyOF0sIFwiaW5jbHVzaXZlXCI6IGZhbHNlIH0sIFwiQ0xBU1NERUZJRFwiOiB7IFwicnVsZXNcIjogWzIzXSwgXCJpbmNsdXNpdmVcIjogZmFsc2UgfSwgXCJDTEFTU0RFRlwiOiB7IFwicnVsZXNcIjogWzIxLCAyMl0sIFwiaW5jbHVzaXZlXCI6IGZhbHNlIH0sIFwiQ0xBU1NfU1RZTEVcIjogeyBcInJ1bGVzXCI6IFsyNl0sIFwiaW5jbHVzaXZlXCI6IGZhbHNlIH0sIFwiQ0xBU1NcIjogeyBcInJ1bGVzXCI6IFsyNV0sIFwiaW5jbHVzaXZlXCI6IGZhbHNlIH0sIFwiTExBQkVMXCI6IHsgXCJydWxlc1wiOiBbMTAwLCAxMDEsIDEwMiwgMTAzLCAxMDRdLCBcImluY2x1c2l2ZVwiOiBmYWxzZSB9LCBcIkFSUk9XX0RJUlwiOiB7IFwicnVsZXNcIjogWzg2LCA4NywgODgsIDg5LCA5MCwgOTEsIDkyXSwgXCJpbmNsdXNpdmVcIjogZmFsc2UgfSwgXCJCTE9DS19BUlJPV1wiOiB7IFwicnVsZXNcIjogWzc3LCA4MiwgODVdLCBcImluY2x1c2l2ZVwiOiBmYWxzZSB9LCBcIk5PREVcIjogeyBcInJ1bGVzXCI6IFszOCwgMzksIDQwLCA0MSwgNDIsIDQzLCA0NCwgNDUsIDQ2LCA0NywgNDgsIDQ5LCA1MCwgNTEsIDUyLCA1MywgNTQsIDc4LCA4MV0sIFwiaW5jbHVzaXZlXCI6IGZhbHNlIH0sIFwibWRfc3RyaW5nXCI6IHsgXCJydWxlc1wiOiBbMTAsIDExLCA3OSwgODBdLCBcImluY2x1c2l2ZVwiOiBmYWxzZSB9LCBcInNwYWNlXCI6IHsgXCJydWxlc1wiOiBbXSwgXCJpbmNsdXNpdmVcIjogZmFsc2UgfSwgXCJzdHJpbmdcIjogeyBcInJ1bGVzXCI6IFsxMywgMTQsIDgzLCA4NF0sIFwiaW5jbHVzaXZlXCI6IGZhbHNlIH0sIFwiYWNjX2Rlc2NyX211bHRpbGluZVwiOiB7IFwicnVsZXNcIjogWzM1LCAzNl0sIFwiaW5jbHVzaXZlXCI6IGZhbHNlIH0sIFwiYWNjX2Rlc2NyXCI6IHsgXCJydWxlc1wiOiBbMzNdLCBcImluY2x1c2l2ZVwiOiBmYWxzZSB9LCBcImFjY190aXRsZVwiOiB7IFwicnVsZXNcIjogWzMxXSwgXCJpbmNsdXNpdmVcIjogZmFsc2UgfSwgXCJJTklUSUFMXCI6IHsgXCJydWxlc1wiOiBbMCwgMSwgMiwgMywgNCwgNSwgNiwgNywgOCwgOSwgMTIsIDE1LCAxNiwgMTcsIDE4LCAxOSwgMjAsIDI0LCAyNywgMzAsIDMyLCAzNCwgMzcsIDU1LCA1NiwgNTcsIDU4LCA1OSwgNjAsIDYxLCA2MiwgNjMsIDY0LCA2NSwgNjYsIDY3LCA2OCwgNjksIDcwLCA3MSwgNzIsIDczLCA3NCwgNzUsIDc2LCA5MywgOTQsIDk1LCA5NiwgOTcsIDk4LCA5OSwgMTA1XSwgXCJpbmNsdXNpdmVcIjogdHJ1ZSB9IH1cbiAgICB9O1xuICAgIHJldHVybiBsZXhlcjI7XG4gIH0oKTtcbiAgcGFyc2VyMi5sZXhlciA9IGxleGVyO1xuICBmdW5jdGlvbiBQYXJzZXIoKSB7XG4gICAgdGhpcy55eSA9IHt9O1xuICB9XG4gIF9fbmFtZShQYXJzZXIsIFwiUGFyc2VyXCIpO1xuICBQYXJzZXIucHJvdG90eXBlID0gcGFyc2VyMjtcbiAgcGFyc2VyMi5QYXJzZXIgPSBQYXJzZXI7XG4gIHJldHVybiBuZXcgUGFyc2VyKCk7XG59KCk7XG5wYXJzZXIucGFyc2VyID0gcGFyc2VyO1xudmFyIGJsb2NrX2RlZmF1bHQgPSBwYXJzZXI7XG5cbi8vIHNyYy9kaWFncmFtcy9ibG9jay9ibG9ja0RCLnRzXG5pbXBvcnQgY2xvbmUgZnJvbSBcImxvZGFzaC1lcy9jbG9uZS5qc1wiO1xudmFyIGJsb2NrRGF0YWJhc2UgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xudmFyIGVkZ2VMaXN0ID0gW107XG52YXIgZWRnZUNvdW50ID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbnZhciBDT0xPUl9LRVlXT1JEID0gXCJjb2xvclwiO1xudmFyIEZJTExfS0VZV09SRCA9IFwiZmlsbFwiO1xudmFyIEJHX0ZJTEwgPSBcImJnRmlsbFwiO1xudmFyIFNUWUxFQ0xBU1NfU0VQID0gXCIsXCI7XG52YXIgY29uZmlnID0gZ2V0Q29uZmlnMigpO1xudmFyIGNsYXNzZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xudmFyIHNhbml0aXplVGV4dDIgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKCh0eHQpID0+IGNvbW1vbl9kZWZhdWx0LnNhbml0aXplVGV4dCh0eHQsIGNvbmZpZyksIFwic2FuaXRpemVUZXh0XCIpO1xudmFyIGFkZFN0eWxlQ2xhc3MgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKGZ1bmN0aW9uKGlkLCBzdHlsZUF0dHJpYnV0ZXMgPSBcIlwiKSB7XG4gIGxldCBmb3VuZENsYXNzID0gY2xhc3Nlcy5nZXQoaWQpO1xuICBpZiAoIWZvdW5kQ2xhc3MpIHtcbiAgICBmb3VuZENsYXNzID0geyBpZCwgc3R5bGVzOiBbXSwgdGV4dFN0eWxlczogW10gfTtcbiAgICBjbGFzc2VzLnNldChpZCwgZm91bmRDbGFzcyk7XG4gIH1cbiAgaWYgKHN0eWxlQXR0cmlidXRlcyAhPT0gdm9pZCAwICYmIHN0eWxlQXR0cmlidXRlcyAhPT0gbnVsbCkge1xuICAgIHN0eWxlQXR0cmlidXRlcy5zcGxpdChTVFlMRUNMQVNTX1NFUCkuZm9yRWFjaCgoYXR0cmliKSA9PiB7XG4gICAgICBjb25zdCBmaXhlZEF0dHJpYiA9IGF0dHJpYi5yZXBsYWNlKC8oW147XSopOy8sIFwiJDFcIikudHJpbSgpO1xuICAgICAgaWYgKFJlZ0V4cChDT0xPUl9LRVlXT1JEKS5leGVjKGF0dHJpYikpIHtcbiAgICAgICAgY29uc3QgbmV3U3R5bGUxID0gZml4ZWRBdHRyaWIucmVwbGFjZShGSUxMX0tFWVdPUkQsIEJHX0ZJTEwpO1xuICAgICAgICBjb25zdCBuZXdTdHlsZTIgPSBuZXdTdHlsZTEucmVwbGFjZShDT0xPUl9LRVlXT1JELCBGSUxMX0tFWVdPUkQpO1xuICAgICAgICBmb3VuZENsYXNzLnRleHRTdHlsZXMucHVzaChuZXdTdHlsZTIpO1xuICAgICAgfVxuICAgICAgZm91bmRDbGFzcy5zdHlsZXMucHVzaChmaXhlZEF0dHJpYik7XG4gICAgfSk7XG4gIH1cbn0sIFwiYWRkU3R5bGVDbGFzc1wiKTtcbnZhciBhZGRTdHlsZTJOb2RlID0gLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbihpZCwgc3R5bGVzID0gXCJcIikge1xuICBjb25zdCBmb3VuZEJsb2NrID0gYmxvY2tEYXRhYmFzZS5nZXQoaWQpO1xuICBpZiAoc3R5bGVzICE9PSB2b2lkIDAgJiYgc3R5bGVzICE9PSBudWxsKSB7XG4gICAgZm91bmRCbG9jay5zdHlsZXMgPSBzdHlsZXMuc3BsaXQoU1RZTEVDTEFTU19TRVApO1xuICB9XG59LCBcImFkZFN0eWxlMk5vZGVcIik7XG52YXIgc2V0Q3NzQ2xhc3MgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKGZ1bmN0aW9uKGl0ZW1JZHMsIGNzc0NsYXNzTmFtZSkge1xuICBpdGVtSWRzLnNwbGl0KFwiLFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGlkKSB7XG4gICAgbGV0IGZvdW5kQmxvY2sgPSBibG9ja0RhdGFiYXNlLmdldChpZCk7XG4gICAgaWYgKGZvdW5kQmxvY2sgPT09IHZvaWQgMCkge1xuICAgICAgY29uc3QgdHJpbW1lZElkID0gaWQudHJpbSgpO1xuICAgICAgZm91bmRCbG9jayA9IHsgaWQ6IHRyaW1tZWRJZCwgdHlwZTogXCJuYVwiLCBjaGlsZHJlbjogW10gfTtcbiAgICAgIGJsb2NrRGF0YWJhc2Uuc2V0KHRyaW1tZWRJZCwgZm91bmRCbG9jayk7XG4gICAgfVxuICAgIGlmICghZm91bmRCbG9jay5jbGFzc2VzKSB7XG4gICAgICBmb3VuZEJsb2NrLmNsYXNzZXMgPSBbXTtcbiAgICB9XG4gICAgZm91bmRCbG9jay5jbGFzc2VzLnB1c2goY3NzQ2xhc3NOYW1lKTtcbiAgfSk7XG59LCBcInNldENzc0NsYXNzXCIpO1xudmFyIHBvcHVsYXRlQmxvY2tEYXRhYmFzZSA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKF9ibG9ja0xpc3QsIHBhcmVudCkgPT4ge1xuICBjb25zdCBibG9ja0xpc3QgPSBfYmxvY2tMaXN0LmZsYXQoKTtcbiAgY29uc3QgY2hpbGRyZW4gPSBbXTtcbiAgZm9yIChjb25zdCBibG9jayBvZiBibG9ja0xpc3QpIHtcbiAgICBpZiAoYmxvY2subGFiZWwpIHtcbiAgICAgIGJsb2NrLmxhYmVsID0gc2FuaXRpemVUZXh0MihibG9jay5sYWJlbCk7XG4gICAgfVxuICAgIGlmIChibG9jay50eXBlID09PSBcImNsYXNzRGVmXCIpIHtcbiAgICAgIGFkZFN0eWxlQ2xhc3MoYmxvY2suaWQsIGJsb2NrLmNzcyk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKGJsb2NrLnR5cGUgPT09IFwiYXBwbHlDbGFzc1wiKSB7XG4gICAgICBzZXRDc3NDbGFzcyhibG9jay5pZCwgYmxvY2s/LnN0eWxlQ2xhc3MgPz8gXCJcIik7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKGJsb2NrLnR5cGUgPT09IFwiYXBwbHlTdHlsZXNcIikge1xuICAgICAgaWYgKGJsb2NrPy5zdHlsZXNTdHIpIHtcbiAgICAgICAgYWRkU3R5bGUyTm9kZShibG9jay5pZCwgYmxvY2s/LnN0eWxlc1N0cik7XG4gICAgICB9XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKGJsb2NrLnR5cGUgPT09IFwiY29sdW1uLXNldHRpbmdcIikge1xuICAgICAgcGFyZW50LmNvbHVtbnMgPSBibG9jay5jb2x1bW5zID8/IC0xO1xuICAgIH0gZWxzZSBpZiAoYmxvY2sudHlwZSA9PT0gXCJlZGdlXCIpIHtcbiAgICAgIGNvbnN0IGNvdW50ID0gKGVkZ2VDb3VudC5nZXQoYmxvY2suaWQpID8/IDApICsgMTtcbiAgICAgIGVkZ2VDb3VudC5zZXQoYmxvY2suaWQsIGNvdW50KTtcbiAgICAgIGJsb2NrLmlkID0gY291bnQgKyBcIi1cIiArIGJsb2NrLmlkO1xuICAgICAgZWRnZUxpc3QucHVzaChibG9jayk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICghYmxvY2subGFiZWwpIHtcbiAgICAgICAgaWYgKGJsb2NrLnR5cGUgPT09IFwiY29tcG9zaXRlXCIpIHtcbiAgICAgICAgICBibG9jay5sYWJlbCA9IFwiXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYmxvY2subGFiZWwgPSBibG9jay5pZDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY29uc3QgZXhpc3RpbmdCbG9jayA9IGJsb2NrRGF0YWJhc2UuZ2V0KGJsb2NrLmlkKTtcbiAgICAgIGlmIChleGlzdGluZ0Jsb2NrID09PSB2b2lkIDApIHtcbiAgICAgICAgYmxvY2tEYXRhYmFzZS5zZXQoYmxvY2suaWQsIGJsb2NrKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChibG9jay50eXBlICE9PSBcIm5hXCIpIHtcbiAgICAgICAgICBleGlzdGluZ0Jsb2NrLnR5cGUgPSBibG9jay50eXBlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChibG9jay5sYWJlbCAhPT0gYmxvY2suaWQpIHtcbiAgICAgICAgICBleGlzdGluZ0Jsb2NrLmxhYmVsID0gYmxvY2subGFiZWw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChibG9jay5jaGlsZHJlbikge1xuICAgICAgICBwb3B1bGF0ZUJsb2NrRGF0YWJhc2UoYmxvY2suY2hpbGRyZW4sIGJsb2NrKTtcbiAgICAgIH1cbiAgICAgIGlmIChibG9jay50eXBlID09PSBcInNwYWNlXCIpIHtcbiAgICAgICAgY29uc3QgdyA9IGJsb2NrLndpZHRoID8/IDE7XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdzsgaisrKSB7XG4gICAgICAgICAgY29uc3QgbmV3QmxvY2sgPSBjbG9uZShibG9jayk7XG4gICAgICAgICAgbmV3QmxvY2suaWQgPSBuZXdCbG9jay5pZCArIFwiLVwiICsgajtcbiAgICAgICAgICBibG9ja0RhdGFiYXNlLnNldChuZXdCbG9jay5pZCwgbmV3QmxvY2spO1xuICAgICAgICAgIGNoaWxkcmVuLnB1c2gobmV3QmxvY2spO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGV4aXN0aW5nQmxvY2sgPT09IHZvaWQgMCkge1xuICAgICAgICBjaGlsZHJlbi5wdXNoKGJsb2NrKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcGFyZW50LmNoaWxkcmVuID0gY2hpbGRyZW47XG59LCBcInBvcHVsYXRlQmxvY2tEYXRhYmFzZVwiKTtcbnZhciBibG9ja3MgPSBbXTtcbnZhciByb290QmxvY2sgPSB7IGlkOiBcInJvb3RcIiwgdHlwZTogXCJjb21wb3NpdGVcIiwgY2hpbGRyZW46IFtdLCBjb2x1bW5zOiAtMSB9O1xudmFyIGNsZWFyMiA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKCkgPT4ge1xuICBsb2cuZGVidWcoXCJDbGVhciBjYWxsZWRcIik7XG4gIGNsZWFyKCk7XG4gIHJvb3RCbG9jayA9IHsgaWQ6IFwicm9vdFwiLCB0eXBlOiBcImNvbXBvc2l0ZVwiLCBjaGlsZHJlbjogW10sIGNvbHVtbnM6IC0xIH07XG4gIGJsb2NrRGF0YWJhc2UgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcChbW1wicm9vdFwiLCByb290QmxvY2tdXSk7XG4gIGJsb2NrcyA9IFtdO1xuICBjbGFzc2VzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgZWRnZUxpc3QgPSBbXTtcbiAgZWRnZUNvdW50ID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbn0sIFwiY2xlYXJcIik7XG5mdW5jdGlvbiB0eXBlU3RyMlR5cGUodHlwZVN0cikge1xuICBsb2cuZGVidWcoXCJ0eXBlU3RyMlR5cGVcIiwgdHlwZVN0cik7XG4gIHN3aXRjaCAodHlwZVN0cikge1xuICAgIGNhc2UgXCJbXVwiOlxuICAgICAgcmV0dXJuIFwic3F1YXJlXCI7XG4gICAgY2FzZSBcIigpXCI6XG4gICAgICBsb2cuZGVidWcoXCJ3ZSBoYXZlIGEgcm91bmRcIik7XG4gICAgICByZXR1cm4gXCJyb3VuZFwiO1xuICAgIGNhc2UgXCIoKCkpXCI6XG4gICAgICByZXR1cm4gXCJjaXJjbGVcIjtcbiAgICBjYXNlIFwiPl1cIjpcbiAgICAgIHJldHVybiBcInJlY3RfbGVmdF9pbnZfYXJyb3dcIjtcbiAgICBjYXNlIFwie31cIjpcbiAgICAgIHJldHVybiBcImRpYW1vbmRcIjtcbiAgICBjYXNlIFwie3t9fVwiOlxuICAgICAgcmV0dXJuIFwiaGV4YWdvblwiO1xuICAgIGNhc2UgXCIoW10pXCI6XG4gICAgICByZXR1cm4gXCJzdGFkaXVtXCI7XG4gICAgY2FzZSBcIltbXV1cIjpcbiAgICAgIHJldHVybiBcInN1YnJvdXRpbmVcIjtcbiAgICBjYXNlIFwiWygpXVwiOlxuICAgICAgcmV0dXJuIFwiY3lsaW5kZXJcIjtcbiAgICBjYXNlIFwiKCgoKSkpXCI6XG4gICAgICByZXR1cm4gXCJkb3VibGVjaXJjbGVcIjtcbiAgICBjYXNlIFwiWy8vXVwiOlxuICAgICAgcmV0dXJuIFwibGVhbl9yaWdodFwiO1xuICAgIGNhc2UgXCJbXFxcXFxcXFxdXCI6XG4gICAgICByZXR1cm4gXCJsZWFuX2xlZnRcIjtcbiAgICBjYXNlIFwiWy9cXFxcXVwiOlxuICAgICAgcmV0dXJuIFwidHJhcGV6b2lkXCI7XG4gICAgY2FzZSBcIltcXFxcL11cIjpcbiAgICAgIHJldHVybiBcImludl90cmFwZXpvaWRcIjtcbiAgICBjYXNlIFwiPFtdPlwiOlxuICAgICAgcmV0dXJuIFwiYmxvY2tfYXJyb3dcIjtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIFwibmFcIjtcbiAgfVxufVxuX19uYW1lKHR5cGVTdHIyVHlwZSwgXCJ0eXBlU3RyMlR5cGVcIik7XG5mdW5jdGlvbiBlZGdlVHlwZVN0cjJUeXBlKHR5cGVTdHIpIHtcbiAgbG9nLmRlYnVnKFwidHlwZVN0cjJUeXBlXCIsIHR5cGVTdHIpO1xuICBzd2l0Y2ggKHR5cGVTdHIpIHtcbiAgICBjYXNlIFwiPT1cIjpcbiAgICAgIHJldHVybiBcInRoaWNrXCI7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBcIm5vcm1hbFwiO1xuICB9XG59XG5fX25hbWUoZWRnZVR5cGVTdHIyVHlwZSwgXCJlZGdlVHlwZVN0cjJUeXBlXCIpO1xuZnVuY3Rpb24gZWRnZVN0clRvRWRnZURhdGEodHlwZVN0cikge1xuICBzd2l0Y2ggKHR5cGVTdHIudHJpbSgpKSB7XG4gICAgY2FzZSBcIi0teFwiOlxuICAgICAgcmV0dXJuIFwiYXJyb3dfY3Jvc3NcIjtcbiAgICBjYXNlIFwiLS1vXCI6XG4gICAgICByZXR1cm4gXCJhcnJvd19jaXJjbGVcIjtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIFwiYXJyb3dfcG9pbnRcIjtcbiAgfVxufVxuX19uYW1lKGVkZ2VTdHJUb0VkZ2VEYXRhLCBcImVkZ2VTdHJUb0VkZ2VEYXRhXCIpO1xudmFyIGNudCA9IDA7XG52YXIgZ2VuZXJhdGVJZCA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKCkgPT4ge1xuICBjbnQrKztcbiAgcmV0dXJuIFwiaWQtXCIgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgMTIpICsgXCItXCIgKyBjbnQ7XG59LCBcImdlbmVyYXRlSWRcIik7XG52YXIgc2V0SGllcmFyY2h5ID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoYmxvY2spID0+IHtcbiAgcm9vdEJsb2NrLmNoaWxkcmVuID0gYmxvY2s7XG4gIHBvcHVsYXRlQmxvY2tEYXRhYmFzZShibG9jaywgcm9vdEJsb2NrKTtcbiAgYmxvY2tzID0gcm9vdEJsb2NrLmNoaWxkcmVuO1xufSwgXCJzZXRIaWVyYXJjaHlcIik7XG52YXIgZ2V0Q29sdW1ucyA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKGJsb2NrSWQpID0+IHtcbiAgY29uc3QgYmxvY2sgPSBibG9ja0RhdGFiYXNlLmdldChibG9ja0lkKTtcbiAgaWYgKCFibG9jaykge1xuICAgIHJldHVybiAtMTtcbiAgfVxuICBpZiAoYmxvY2suY29sdW1ucykge1xuICAgIHJldHVybiBibG9jay5jb2x1bW5zO1xuICB9XG4gIGlmICghYmxvY2suY2hpbGRyZW4pIHtcbiAgICByZXR1cm4gLTE7XG4gIH1cbiAgcmV0dXJuIGJsb2NrLmNoaWxkcmVuLmxlbmd0aDtcbn0sIFwiZ2V0Q29sdW1uc1wiKTtcbnZhciBnZXRCbG9ja3NGbGF0ID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoKSA9PiB7XG4gIHJldHVybiBbLi4uYmxvY2tEYXRhYmFzZS52YWx1ZXMoKV07XG59LCBcImdldEJsb2Nrc0ZsYXRcIik7XG52YXIgZ2V0QmxvY2tzID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoKSA9PiB7XG4gIHJldHVybiBibG9ja3MgfHwgW107XG59LCBcImdldEJsb2Nrc1wiKTtcbnZhciBnZXRFZGdlcyA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKCkgPT4ge1xuICByZXR1cm4gZWRnZUxpc3Q7XG59LCBcImdldEVkZ2VzXCIpO1xudmFyIGdldEJsb2NrID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoaWQpID0+IHtcbiAgcmV0dXJuIGJsb2NrRGF0YWJhc2UuZ2V0KGlkKTtcbn0sIFwiZ2V0QmxvY2tcIik7XG52YXIgc2V0QmxvY2sgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChibG9jaykgPT4ge1xuICBibG9ja0RhdGFiYXNlLnNldChibG9jay5pZCwgYmxvY2spO1xufSwgXCJzZXRCbG9ja1wiKTtcbnZhciBnZXRMb2dnZXIgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKCgpID0+IGNvbnNvbGUsIFwiZ2V0TG9nZ2VyXCIpO1xudmFyIGdldENsYXNzZXMgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKGZ1bmN0aW9uKCkge1xuICByZXR1cm4gY2xhc3Nlcztcbn0sIFwiZ2V0Q2xhc3Nlc1wiKTtcbnZhciBkYiA9IHtcbiAgZ2V0Q29uZmlnOiAvKiBAX19QVVJFX18gKi8gX19uYW1lKCgpID0+IGdldENvbmZpZygpLmJsb2NrLCBcImdldENvbmZpZ1wiKSxcbiAgdHlwZVN0cjJUeXBlLFxuICBlZGdlVHlwZVN0cjJUeXBlLFxuICBlZGdlU3RyVG9FZGdlRGF0YSxcbiAgZ2V0TG9nZ2VyLFxuICBnZXRCbG9ja3NGbGF0LFxuICBnZXRCbG9ja3MsXG4gIGdldEVkZ2VzLFxuICBzZXRIaWVyYXJjaHksXG4gIGdldEJsb2NrLFxuICBzZXRCbG9jayxcbiAgZ2V0Q29sdW1ucyxcbiAgZ2V0Q2xhc3NlcyxcbiAgY2xlYXI6IGNsZWFyMixcbiAgZ2VuZXJhdGVJZFxufTtcbnZhciBibG9ja0RCX2RlZmF1bHQgPSBkYjtcblxuLy8gc3JjL2RpYWdyYW1zL2Jsb2NrL3N0eWxlcy50c1xuaW1wb3J0ICogYXMga2hyb21hIGZyb20gXCJraHJvbWFcIjtcbnZhciBmYWRlID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoY29sb3IsIG9wYWNpdHkpID0+IHtcbiAgY29uc3QgY2hhbm5lbDIgPSBraHJvbWEuY2hhbm5lbDtcbiAgY29uc3QgciA9IGNoYW5uZWwyKGNvbG9yLCBcInJcIik7XG4gIGNvbnN0IGcgPSBjaGFubmVsMihjb2xvciwgXCJnXCIpO1xuICBjb25zdCBiID0gY2hhbm5lbDIoY29sb3IsIFwiYlwiKTtcbiAgcmV0dXJuIGtocm9tYS5yZ2JhKHIsIGcsIGIsIG9wYWNpdHkpO1xufSwgXCJmYWRlXCIpO1xudmFyIGdldFN0eWxlcyA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKG9wdGlvbnMpID0+IGAubGFiZWwge1xuICAgIGZvbnQtZmFtaWx5OiAke29wdGlvbnMuZm9udEZhbWlseX07XG4gICAgY29sb3I6ICR7b3B0aW9ucy5ub2RlVGV4dENvbG9yIHx8IG9wdGlvbnMudGV4dENvbG9yfTtcbiAgfVxuICAuY2x1c3Rlci1sYWJlbCB0ZXh0IHtcbiAgICBmaWxsOiAke29wdGlvbnMudGl0bGVDb2xvcn07XG4gIH1cbiAgLmNsdXN0ZXItbGFiZWwgc3BhbixwIHtcbiAgICBjb2xvcjogJHtvcHRpb25zLnRpdGxlQ29sb3J9O1xuICB9XG5cblxuXG4gIC5sYWJlbCB0ZXh0LHNwYW4scCB7XG4gICAgZmlsbDogJHtvcHRpb25zLm5vZGVUZXh0Q29sb3IgfHwgb3B0aW9ucy50ZXh0Q29sb3J9O1xuICAgIGNvbG9yOiAke29wdGlvbnMubm9kZVRleHRDb2xvciB8fCBvcHRpb25zLnRleHRDb2xvcn07XG4gIH1cblxuICAubm9kZSByZWN0LFxuICAubm9kZSBjaXJjbGUsXG4gIC5ub2RlIGVsbGlwc2UsXG4gIC5ub2RlIHBvbHlnb24sXG4gIC5ub2RlIHBhdGgge1xuICAgIGZpbGw6ICR7b3B0aW9ucy5tYWluQmtnfTtcbiAgICBzdHJva2U6ICR7b3B0aW9ucy5ub2RlQm9yZGVyfTtcbiAgICBzdHJva2Utd2lkdGg6IDFweDtcbiAgfVxuICAuZmxvd2NoYXJ0LWxhYmVsIHRleHQge1xuICAgIHRleHQtYW5jaG9yOiBtaWRkbGU7XG4gIH1cbiAgLy8gLmZsb3djaGFydC1sYWJlbCAudGV4dC1vdXRlci10c3BhbiB7XG4gIC8vICAgdGV4dC1hbmNob3I6IG1pZGRsZTtcbiAgLy8gfVxuICAvLyAuZmxvd2NoYXJ0LWxhYmVsIC50ZXh0LWlubmVyLXRzcGFuIHtcbiAgLy8gICB0ZXh0LWFuY2hvcjogc3RhcnQ7XG4gIC8vIH1cblxuICAubm9kZSAubGFiZWwge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICAubm9kZS5jbGlja2FibGUge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuXG4gIC5hcnJvd2hlYWRQYXRoIHtcbiAgICBmaWxsOiAke29wdGlvbnMuYXJyb3doZWFkQ29sb3J9O1xuICB9XG5cbiAgLmVkZ2VQYXRoIC5wYXRoIHtcbiAgICBzdHJva2U6ICR7b3B0aW9ucy5saW5lQ29sb3J9O1xuICAgIHN0cm9rZS13aWR0aDogMi4wcHg7XG4gIH1cblxuICAuZmxvd2NoYXJ0LWxpbmsge1xuICAgIHN0cm9rZTogJHtvcHRpb25zLmxpbmVDb2xvcn07XG4gICAgZmlsbDogbm9uZTtcbiAgfVxuXG4gIC5lZGdlTGFiZWwge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7b3B0aW9ucy5lZGdlTGFiZWxCYWNrZ3JvdW5kfTtcbiAgICByZWN0IHtcbiAgICAgIG9wYWNpdHk6IDAuNTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7b3B0aW9ucy5lZGdlTGFiZWxCYWNrZ3JvdW5kfTtcbiAgICAgIGZpbGw6ICR7b3B0aW9ucy5lZGdlTGFiZWxCYWNrZ3JvdW5kfTtcbiAgICB9XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbiAgLyogRm9yIGh0bWwgbGFiZWxzIG9ubHkgKi9cbiAgLmxhYmVsQmtnIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2ZhZGUob3B0aW9ucy5lZGdlTGFiZWxCYWNrZ3JvdW5kLCAwLjUpfTtcbiAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOlxuICB9XG5cbiAgLm5vZGUgLmNsdXN0ZXIge1xuICAgIC8vIGZpbGw6ICR7ZmFkZShvcHRpb25zLm1haW5Ca2csIDAuNSl9O1xuICAgIGZpbGw6ICR7ZmFkZShvcHRpb25zLmNsdXN0ZXJCa2csIDAuNSl9O1xuICAgIHN0cm9rZTogJHtmYWRlKG9wdGlvbnMuY2x1c3RlckJvcmRlciwgMC4yKX07XG4gICAgYm94LXNoYWRvdzogcmdiYSg1MCwgNTAsIDkzLCAwLjI1KSAwcHggMTNweCAyN3B4IC01cHgsIHJnYmEoMCwgMCwgMCwgMC4zKSAwcHggOHB4IDE2cHggLThweDtcbiAgICBzdHJva2Utd2lkdGg6IDFweDtcbiAgfVxuXG4gIC5jbHVzdGVyIHRleHQge1xuICAgIGZpbGw6ICR7b3B0aW9ucy50aXRsZUNvbG9yfTtcbiAgfVxuXG4gIC5jbHVzdGVyIHNwYW4scCB7XG4gICAgY29sb3I6ICR7b3B0aW9ucy50aXRsZUNvbG9yfTtcbiAgfVxuICAvKiAuY2x1c3RlciBkaXYge1xuICAgIGNvbG9yOiAke29wdGlvbnMudGl0bGVDb2xvcn07XG4gIH0gKi9cblxuICBkaXYubWVybWFpZFRvb2x0aXAge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWF4LXdpZHRoOiAyMDBweDtcbiAgICBwYWRkaW5nOiAycHg7XG4gICAgZm9udC1mYW1pbHk6ICR7b3B0aW9ucy5mb250RmFtaWx5fTtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgYmFja2dyb3VuZDogJHtvcHRpb25zLnRlcnRpYXJ5Q29sb3J9O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICR7b3B0aW9ucy5ib3JkZXIyfTtcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgei1pbmRleDogMTAwO1xuICB9XG5cbiAgLmZsb3djaGFydFRpdGxlVGV4dCB7XG4gICAgdGV4dC1hbmNob3I6IG1pZGRsZTtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgZmlsbDogJHtvcHRpb25zLnRleHRDb2xvcn07XG4gIH1cbmAsIFwiZ2V0U3R5bGVzXCIpO1xudmFyIHN0eWxlc19kZWZhdWx0ID0gZ2V0U3R5bGVzO1xuXG4vLyBzcmMvZGlhZ3JhbXMvYmxvY2svYmxvY2tSZW5kZXJlci50c1xuaW1wb3J0IHsgc2VsZWN0IGFzIGQzc2VsZWN0IH0gZnJvbSBcImQzXCI7XG5cbi8vIHNyYy9kYWdyZS13cmFwcGVyL21hcmtlcnMuanNcbnZhciBpbnNlcnRNYXJrZXJzID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoZWxlbSwgbWFya2VyQXJyYXksIHR5cGUsIGlkKSA9PiB7XG4gIG1hcmtlckFycmF5LmZvckVhY2goKG1hcmtlck5hbWUpID0+IHtcbiAgICBtYXJrZXJzW21hcmtlck5hbWVdKGVsZW0sIHR5cGUsIGlkKTtcbiAgfSk7XG59LCBcImluc2VydE1hcmtlcnNcIik7XG52YXIgZXh0ZW5zaW9uID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoZWxlbSwgdHlwZSwgaWQpID0+IHtcbiAgbG9nLnRyYWNlKFwiTWFraW5nIG1hcmtlcnMgZm9yIFwiLCBpZCk7XG4gIGVsZW0uYXBwZW5kKFwiZGVmc1wiKS5hcHBlbmQoXCJtYXJrZXJcIikuYXR0cihcImlkXCIsIGlkICsgXCJfXCIgKyB0eXBlICsgXCItZXh0ZW5zaW9uU3RhcnRcIikuYXR0cihcImNsYXNzXCIsIFwibWFya2VyIGV4dGVuc2lvbiBcIiArIHR5cGUpLmF0dHIoXCJyZWZYXCIsIDE4KS5hdHRyKFwicmVmWVwiLCA3KS5hdHRyKFwibWFya2VyV2lkdGhcIiwgMTkwKS5hdHRyKFwibWFya2VySGVpZ2h0XCIsIDI0MCkuYXR0cihcIm9yaWVudFwiLCBcImF1dG9cIikuYXBwZW5kKFwicGF0aFwiKS5hdHRyKFwiZFwiLCBcIk0gMSw3IEwxOCwxMyBWIDEgWlwiKTtcbiAgZWxlbS5hcHBlbmQoXCJkZWZzXCIpLmFwcGVuZChcIm1hcmtlclwiKS5hdHRyKFwiaWRcIiwgaWQgKyBcIl9cIiArIHR5cGUgKyBcIi1leHRlbnNpb25FbmRcIikuYXR0cihcImNsYXNzXCIsIFwibWFya2VyIGV4dGVuc2lvbiBcIiArIHR5cGUpLmF0dHIoXCJyZWZYXCIsIDEpLmF0dHIoXCJyZWZZXCIsIDcpLmF0dHIoXCJtYXJrZXJXaWR0aFwiLCAyMCkuYXR0cihcIm1hcmtlckhlaWdodFwiLCAyOCkuYXR0cihcIm9yaWVudFwiLCBcImF1dG9cIikuYXBwZW5kKFwicGF0aFwiKS5hdHRyKFwiZFwiLCBcIk0gMSwxIFYgMTMgTDE4LDcgWlwiKTtcbn0sIFwiZXh0ZW5zaW9uXCIpO1xudmFyIGNvbXBvc2l0aW9uID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoZWxlbSwgdHlwZSwgaWQpID0+IHtcbiAgZWxlbS5hcHBlbmQoXCJkZWZzXCIpLmFwcGVuZChcIm1hcmtlclwiKS5hdHRyKFwiaWRcIiwgaWQgKyBcIl9cIiArIHR5cGUgKyBcIi1jb21wb3NpdGlvblN0YXJ0XCIpLmF0dHIoXCJjbGFzc1wiLCBcIm1hcmtlciBjb21wb3NpdGlvbiBcIiArIHR5cGUpLmF0dHIoXCJyZWZYXCIsIDE4KS5hdHRyKFwicmVmWVwiLCA3KS5hdHRyKFwibWFya2VyV2lkdGhcIiwgMTkwKS5hdHRyKFwibWFya2VySGVpZ2h0XCIsIDI0MCkuYXR0cihcIm9yaWVudFwiLCBcImF1dG9cIikuYXBwZW5kKFwicGF0aFwiKS5hdHRyKFwiZFwiLCBcIk0gMTgsNyBMOSwxMyBMMSw3IEw5LDEgWlwiKTtcbiAgZWxlbS5hcHBlbmQoXCJkZWZzXCIpLmFwcGVuZChcIm1hcmtlclwiKS5hdHRyKFwiaWRcIiwgaWQgKyBcIl9cIiArIHR5cGUgKyBcIi1jb21wb3NpdGlvbkVuZFwiKS5hdHRyKFwiY2xhc3NcIiwgXCJtYXJrZXIgY29tcG9zaXRpb24gXCIgKyB0eXBlKS5hdHRyKFwicmVmWFwiLCAxKS5hdHRyKFwicmVmWVwiLCA3KS5hdHRyKFwibWFya2VyV2lkdGhcIiwgMjApLmF0dHIoXCJtYXJrZXJIZWlnaHRcIiwgMjgpLmF0dHIoXCJvcmllbnRcIiwgXCJhdXRvXCIpLmFwcGVuZChcInBhdGhcIikuYXR0cihcImRcIiwgXCJNIDE4LDcgTDksMTMgTDEsNyBMOSwxIFpcIik7XG59LCBcImNvbXBvc2l0aW9uXCIpO1xudmFyIGFnZ3JlZ2F0aW9uID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoZWxlbSwgdHlwZSwgaWQpID0+IHtcbiAgZWxlbS5hcHBlbmQoXCJkZWZzXCIpLmFwcGVuZChcIm1hcmtlclwiKS5hdHRyKFwiaWRcIiwgaWQgKyBcIl9cIiArIHR5cGUgKyBcIi1hZ2dyZWdhdGlvblN0YXJ0XCIpLmF0dHIoXCJjbGFzc1wiLCBcIm1hcmtlciBhZ2dyZWdhdGlvbiBcIiArIHR5cGUpLmF0dHIoXCJyZWZYXCIsIDE4KS5hdHRyKFwicmVmWVwiLCA3KS5hdHRyKFwibWFya2VyV2lkdGhcIiwgMTkwKS5hdHRyKFwibWFya2VySGVpZ2h0XCIsIDI0MCkuYXR0cihcIm9yaWVudFwiLCBcImF1dG9cIikuYXBwZW5kKFwicGF0aFwiKS5hdHRyKFwiZFwiLCBcIk0gMTgsNyBMOSwxMyBMMSw3IEw5LDEgWlwiKTtcbiAgZWxlbS5hcHBlbmQoXCJkZWZzXCIpLmFwcGVuZChcIm1hcmtlclwiKS5hdHRyKFwiaWRcIiwgaWQgKyBcIl9cIiArIHR5cGUgKyBcIi1hZ2dyZWdhdGlvbkVuZFwiKS5hdHRyKFwiY2xhc3NcIiwgXCJtYXJrZXIgYWdncmVnYXRpb24gXCIgKyB0eXBlKS5hdHRyKFwicmVmWFwiLCAxKS5hdHRyKFwicmVmWVwiLCA3KS5hdHRyKFwibWFya2VyV2lkdGhcIiwgMjApLmF0dHIoXCJtYXJrZXJIZWlnaHRcIiwgMjgpLmF0dHIoXCJvcmllbnRcIiwgXCJhdXRvXCIpLmFwcGVuZChcInBhdGhcIikuYXR0cihcImRcIiwgXCJNIDE4LDcgTDksMTMgTDEsNyBMOSwxIFpcIik7XG59LCBcImFnZ3JlZ2F0aW9uXCIpO1xudmFyIGRlcGVuZGVuY3kgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChlbGVtLCB0eXBlLCBpZCkgPT4ge1xuICBlbGVtLmFwcGVuZChcImRlZnNcIikuYXBwZW5kKFwibWFya2VyXCIpLmF0dHIoXCJpZFwiLCBpZCArIFwiX1wiICsgdHlwZSArIFwiLWRlcGVuZGVuY3lTdGFydFwiKS5hdHRyKFwiY2xhc3NcIiwgXCJtYXJrZXIgZGVwZW5kZW5jeSBcIiArIHR5cGUpLmF0dHIoXCJyZWZYXCIsIDYpLmF0dHIoXCJyZWZZXCIsIDcpLmF0dHIoXCJtYXJrZXJXaWR0aFwiLCAxOTApLmF0dHIoXCJtYXJrZXJIZWlnaHRcIiwgMjQwKS5hdHRyKFwib3JpZW50XCIsIFwiYXV0b1wiKS5hcHBlbmQoXCJwYXRoXCIpLmF0dHIoXCJkXCIsIFwiTSA1LDcgTDksMTMgTDEsNyBMOSwxIFpcIik7XG4gIGVsZW0uYXBwZW5kKFwiZGVmc1wiKS5hcHBlbmQoXCJtYXJrZXJcIikuYXR0cihcImlkXCIsIGlkICsgXCJfXCIgKyB0eXBlICsgXCItZGVwZW5kZW5jeUVuZFwiKS5hdHRyKFwiY2xhc3NcIiwgXCJtYXJrZXIgZGVwZW5kZW5jeSBcIiArIHR5cGUpLmF0dHIoXCJyZWZYXCIsIDEzKS5hdHRyKFwicmVmWVwiLCA3KS5hdHRyKFwibWFya2VyV2lkdGhcIiwgMjApLmF0dHIoXCJtYXJrZXJIZWlnaHRcIiwgMjgpLmF0dHIoXCJvcmllbnRcIiwgXCJhdXRvXCIpLmFwcGVuZChcInBhdGhcIikuYXR0cihcImRcIiwgXCJNIDE4LDcgTDksMTMgTDE0LDcgTDksMSBaXCIpO1xufSwgXCJkZXBlbmRlbmN5XCIpO1xudmFyIGxvbGxpcG9wID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoZWxlbSwgdHlwZSwgaWQpID0+IHtcbiAgZWxlbS5hcHBlbmQoXCJkZWZzXCIpLmFwcGVuZChcIm1hcmtlclwiKS5hdHRyKFwiaWRcIiwgaWQgKyBcIl9cIiArIHR5cGUgKyBcIi1sb2xsaXBvcFN0YXJ0XCIpLmF0dHIoXCJjbGFzc1wiLCBcIm1hcmtlciBsb2xsaXBvcCBcIiArIHR5cGUpLmF0dHIoXCJyZWZYXCIsIDEzKS5hdHRyKFwicmVmWVwiLCA3KS5hdHRyKFwibWFya2VyV2lkdGhcIiwgMTkwKS5hdHRyKFwibWFya2VySGVpZ2h0XCIsIDI0MCkuYXR0cihcIm9yaWVudFwiLCBcImF1dG9cIikuYXBwZW5kKFwiY2lyY2xlXCIpLmF0dHIoXCJzdHJva2VcIiwgXCJibGFja1wiKS5hdHRyKFwiZmlsbFwiLCBcInRyYW5zcGFyZW50XCIpLmF0dHIoXCJjeFwiLCA3KS5hdHRyKFwiY3lcIiwgNykuYXR0cihcInJcIiwgNik7XG4gIGVsZW0uYXBwZW5kKFwiZGVmc1wiKS5hcHBlbmQoXCJtYXJrZXJcIikuYXR0cihcImlkXCIsIGlkICsgXCJfXCIgKyB0eXBlICsgXCItbG9sbGlwb3BFbmRcIikuYXR0cihcImNsYXNzXCIsIFwibWFya2VyIGxvbGxpcG9wIFwiICsgdHlwZSkuYXR0cihcInJlZlhcIiwgMSkuYXR0cihcInJlZllcIiwgNykuYXR0cihcIm1hcmtlcldpZHRoXCIsIDE5MCkuYXR0cihcIm1hcmtlckhlaWdodFwiLCAyNDApLmF0dHIoXCJvcmllbnRcIiwgXCJhdXRvXCIpLmFwcGVuZChcImNpcmNsZVwiKS5hdHRyKFwic3Ryb2tlXCIsIFwiYmxhY2tcIikuYXR0cihcImZpbGxcIiwgXCJ0cmFuc3BhcmVudFwiKS5hdHRyKFwiY3hcIiwgNykuYXR0cihcImN5XCIsIDcpLmF0dHIoXCJyXCIsIDYpO1xufSwgXCJsb2xsaXBvcFwiKTtcbnZhciBwb2ludCA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKGVsZW0sIHR5cGUsIGlkKSA9PiB7XG4gIGVsZW0uYXBwZW5kKFwibWFya2VyXCIpLmF0dHIoXCJpZFwiLCBpZCArIFwiX1wiICsgdHlwZSArIFwiLXBvaW50RW5kXCIpLmF0dHIoXCJjbGFzc1wiLCBcIm1hcmtlciBcIiArIHR5cGUpLmF0dHIoXCJ2aWV3Qm94XCIsIFwiMCAwIDEwIDEwXCIpLmF0dHIoXCJyZWZYXCIsIDYpLmF0dHIoXCJyZWZZXCIsIDUpLmF0dHIoXCJtYXJrZXJVbml0c1wiLCBcInVzZXJTcGFjZU9uVXNlXCIpLmF0dHIoXCJtYXJrZXJXaWR0aFwiLCAxMikuYXR0cihcIm1hcmtlckhlaWdodFwiLCAxMikuYXR0cihcIm9yaWVudFwiLCBcImF1dG9cIikuYXBwZW5kKFwicGF0aFwiKS5hdHRyKFwiZFwiLCBcIk0gMCAwIEwgMTAgNSBMIDAgMTAgelwiKS5hdHRyKFwiY2xhc3NcIiwgXCJhcnJvd01hcmtlclBhdGhcIikuc3R5bGUoXCJzdHJva2Utd2lkdGhcIiwgMSkuc3R5bGUoXCJzdHJva2UtZGFzaGFycmF5XCIsIFwiMSwwXCIpO1xuICBlbGVtLmFwcGVuZChcIm1hcmtlclwiKS5hdHRyKFwiaWRcIiwgaWQgKyBcIl9cIiArIHR5cGUgKyBcIi1wb2ludFN0YXJ0XCIpLmF0dHIoXCJjbGFzc1wiLCBcIm1hcmtlciBcIiArIHR5cGUpLmF0dHIoXCJ2aWV3Qm94XCIsIFwiMCAwIDEwIDEwXCIpLmF0dHIoXCJyZWZYXCIsIDQuNSkuYXR0cihcInJlZllcIiwgNSkuYXR0cihcIm1hcmtlclVuaXRzXCIsIFwidXNlclNwYWNlT25Vc2VcIikuYXR0cihcIm1hcmtlcldpZHRoXCIsIDEyKS5hdHRyKFwibWFya2VySGVpZ2h0XCIsIDEyKS5hdHRyKFwib3JpZW50XCIsIFwiYXV0b1wiKS5hcHBlbmQoXCJwYXRoXCIpLmF0dHIoXCJkXCIsIFwiTSAwIDUgTCAxMCAxMCBMIDEwIDAgelwiKS5hdHRyKFwiY2xhc3NcIiwgXCJhcnJvd01hcmtlclBhdGhcIikuc3R5bGUoXCJzdHJva2Utd2lkdGhcIiwgMSkuc3R5bGUoXCJzdHJva2UtZGFzaGFycmF5XCIsIFwiMSwwXCIpO1xufSwgXCJwb2ludFwiKTtcbnZhciBjaXJjbGUgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChlbGVtLCB0eXBlLCBpZCkgPT4ge1xuICBlbGVtLmFwcGVuZChcIm1hcmtlclwiKS5hdHRyKFwiaWRcIiwgaWQgKyBcIl9cIiArIHR5cGUgKyBcIi1jaXJjbGVFbmRcIikuYXR0cihcImNsYXNzXCIsIFwibWFya2VyIFwiICsgdHlwZSkuYXR0cihcInZpZXdCb3hcIiwgXCIwIDAgMTAgMTBcIikuYXR0cihcInJlZlhcIiwgMTEpLmF0dHIoXCJyZWZZXCIsIDUpLmF0dHIoXCJtYXJrZXJVbml0c1wiLCBcInVzZXJTcGFjZU9uVXNlXCIpLmF0dHIoXCJtYXJrZXJXaWR0aFwiLCAxMSkuYXR0cihcIm1hcmtlckhlaWdodFwiLCAxMSkuYXR0cihcIm9yaWVudFwiLCBcImF1dG9cIikuYXBwZW5kKFwiY2lyY2xlXCIpLmF0dHIoXCJjeFwiLCBcIjVcIikuYXR0cihcImN5XCIsIFwiNVwiKS5hdHRyKFwiclwiLCBcIjVcIikuYXR0cihcImNsYXNzXCIsIFwiYXJyb3dNYXJrZXJQYXRoXCIpLnN0eWxlKFwic3Ryb2tlLXdpZHRoXCIsIDEpLnN0eWxlKFwic3Ryb2tlLWRhc2hhcnJheVwiLCBcIjEsMFwiKTtcbiAgZWxlbS5hcHBlbmQoXCJtYXJrZXJcIikuYXR0cihcImlkXCIsIGlkICsgXCJfXCIgKyB0eXBlICsgXCItY2lyY2xlU3RhcnRcIikuYXR0cihcImNsYXNzXCIsIFwibWFya2VyIFwiICsgdHlwZSkuYXR0cihcInZpZXdCb3hcIiwgXCIwIDAgMTAgMTBcIikuYXR0cihcInJlZlhcIiwgLTEpLmF0dHIoXCJyZWZZXCIsIDUpLmF0dHIoXCJtYXJrZXJVbml0c1wiLCBcInVzZXJTcGFjZU9uVXNlXCIpLmF0dHIoXCJtYXJrZXJXaWR0aFwiLCAxMSkuYXR0cihcIm1hcmtlckhlaWdodFwiLCAxMSkuYXR0cihcIm9yaWVudFwiLCBcImF1dG9cIikuYXBwZW5kKFwiY2lyY2xlXCIpLmF0dHIoXCJjeFwiLCBcIjVcIikuYXR0cihcImN5XCIsIFwiNVwiKS5hdHRyKFwiclwiLCBcIjVcIikuYXR0cihcImNsYXNzXCIsIFwiYXJyb3dNYXJrZXJQYXRoXCIpLnN0eWxlKFwic3Ryb2tlLXdpZHRoXCIsIDEpLnN0eWxlKFwic3Ryb2tlLWRhc2hhcnJheVwiLCBcIjEsMFwiKTtcbn0sIFwiY2lyY2xlXCIpO1xudmFyIGNyb3NzID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoZWxlbSwgdHlwZSwgaWQpID0+IHtcbiAgZWxlbS5hcHBlbmQoXCJtYXJrZXJcIikuYXR0cihcImlkXCIsIGlkICsgXCJfXCIgKyB0eXBlICsgXCItY3Jvc3NFbmRcIikuYXR0cihcImNsYXNzXCIsIFwibWFya2VyIGNyb3NzIFwiICsgdHlwZSkuYXR0cihcInZpZXdCb3hcIiwgXCIwIDAgMTEgMTFcIikuYXR0cihcInJlZlhcIiwgMTIpLmF0dHIoXCJyZWZZXCIsIDUuMikuYXR0cihcIm1hcmtlclVuaXRzXCIsIFwidXNlclNwYWNlT25Vc2VcIikuYXR0cihcIm1hcmtlcldpZHRoXCIsIDExKS5hdHRyKFwibWFya2VySGVpZ2h0XCIsIDExKS5hdHRyKFwib3JpZW50XCIsIFwiYXV0b1wiKS5hcHBlbmQoXCJwYXRoXCIpLmF0dHIoXCJkXCIsIFwiTSAxLDEgbCA5LDkgTSAxMCwxIGwgLTksOVwiKS5hdHRyKFwiY2xhc3NcIiwgXCJhcnJvd01hcmtlclBhdGhcIikuc3R5bGUoXCJzdHJva2Utd2lkdGhcIiwgMikuc3R5bGUoXCJzdHJva2UtZGFzaGFycmF5XCIsIFwiMSwwXCIpO1xuICBlbGVtLmFwcGVuZChcIm1hcmtlclwiKS5hdHRyKFwiaWRcIiwgaWQgKyBcIl9cIiArIHR5cGUgKyBcIi1jcm9zc1N0YXJ0XCIpLmF0dHIoXCJjbGFzc1wiLCBcIm1hcmtlciBjcm9zcyBcIiArIHR5cGUpLmF0dHIoXCJ2aWV3Qm94XCIsIFwiMCAwIDExIDExXCIpLmF0dHIoXCJyZWZYXCIsIC0xKS5hdHRyKFwicmVmWVwiLCA1LjIpLmF0dHIoXCJtYXJrZXJVbml0c1wiLCBcInVzZXJTcGFjZU9uVXNlXCIpLmF0dHIoXCJtYXJrZXJXaWR0aFwiLCAxMSkuYXR0cihcIm1hcmtlckhlaWdodFwiLCAxMSkuYXR0cihcIm9yaWVudFwiLCBcImF1dG9cIikuYXBwZW5kKFwicGF0aFwiKS5hdHRyKFwiZFwiLCBcIk0gMSwxIGwgOSw5IE0gMTAsMSBsIC05LDlcIikuYXR0cihcImNsYXNzXCIsIFwiYXJyb3dNYXJrZXJQYXRoXCIpLnN0eWxlKFwic3Ryb2tlLXdpZHRoXCIsIDIpLnN0eWxlKFwic3Ryb2tlLWRhc2hhcnJheVwiLCBcIjEsMFwiKTtcbn0sIFwiY3Jvc3NcIik7XG52YXIgYmFyYiA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKGVsZW0sIHR5cGUsIGlkKSA9PiB7XG4gIGVsZW0uYXBwZW5kKFwiZGVmc1wiKS5hcHBlbmQoXCJtYXJrZXJcIikuYXR0cihcImlkXCIsIGlkICsgXCJfXCIgKyB0eXBlICsgXCItYmFyYkVuZFwiKS5hdHRyKFwicmVmWFwiLCAxOSkuYXR0cihcInJlZllcIiwgNykuYXR0cihcIm1hcmtlcldpZHRoXCIsIDIwKS5hdHRyKFwibWFya2VySGVpZ2h0XCIsIDE0KS5hdHRyKFwibWFya2VyVW5pdHNcIiwgXCJzdHJva2VXaWR0aFwiKS5hdHRyKFwib3JpZW50XCIsIFwiYXV0b1wiKS5hcHBlbmQoXCJwYXRoXCIpLmF0dHIoXCJkXCIsIFwiTSAxOSw3IEw5LDEzIEwxNCw3IEw5LDEgWlwiKTtcbn0sIFwiYmFyYlwiKTtcbnZhciBtYXJrZXJzID0ge1xuICBleHRlbnNpb24sXG4gIGNvbXBvc2l0aW9uLFxuICBhZ2dyZWdhdGlvbixcbiAgZGVwZW5kZW5jeSxcbiAgbG9sbGlwb3AsXG4gIHBvaW50LFxuICBjaXJjbGUsXG4gIGNyb3NzLFxuICBiYXJiXG59O1xudmFyIG1hcmtlcnNfZGVmYXVsdCA9IGluc2VydE1hcmtlcnM7XG5cbi8vIHNyYy9kaWFncmFtcy9ibG9jay9sYXlvdXQudHNcbnZhciBwYWRkaW5nID0gZ2V0Q29uZmlnMigpPy5ibG9jaz8ucGFkZGluZyA/PyA4O1xuZnVuY3Rpb24gY2FsY3VsYXRlQmxvY2tQb3NpdGlvbihjb2x1bW5zLCBwb3NpdGlvbikge1xuICBpZiAoY29sdW1ucyA9PT0gMCB8fCAhTnVtYmVyLmlzSW50ZWdlcihjb2x1bW5zKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvbHVtbnMgbXVzdCBiZSBhbiBpbnRlZ2VyICE9PSAwLlwiKTtcbiAgfVxuICBpZiAocG9zaXRpb24gPCAwIHx8ICFOdW1iZXIuaXNJbnRlZ2VyKHBvc2l0aW9uKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlBvc2l0aW9uIG11c3QgYmUgYSBub24tbmVnYXRpdmUgaW50ZWdlci5cIiArIHBvc2l0aW9uKTtcbiAgfVxuICBpZiAoY29sdW1ucyA8IDApIHtcbiAgICByZXR1cm4geyBweDogcG9zaXRpb24sIHB5OiAwIH07XG4gIH1cbiAgaWYgKGNvbHVtbnMgPT09IDEpIHtcbiAgICByZXR1cm4geyBweDogMCwgcHk6IHBvc2l0aW9uIH07XG4gIH1cbiAgY29uc3QgcHggPSBwb3NpdGlvbiAlIGNvbHVtbnM7XG4gIGNvbnN0IHB5ID0gTWF0aC5mbG9vcihwb3NpdGlvbiAvIGNvbHVtbnMpO1xuICByZXR1cm4geyBweCwgcHkgfTtcbn1cbl9fbmFtZShjYWxjdWxhdGVCbG9ja1Bvc2l0aW9uLCBcImNhbGN1bGF0ZUJsb2NrUG9zaXRpb25cIik7XG52YXIgZ2V0TWF4Q2hpbGRTaXplID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoYmxvY2spID0+IHtcbiAgbGV0IG1heFdpZHRoID0gMDtcbiAgbGV0IG1heEhlaWdodCA9IDA7XG4gIGZvciAoY29uc3QgY2hpbGQgb2YgYmxvY2suY2hpbGRyZW4pIHtcbiAgICBjb25zdCB7IHdpZHRoLCBoZWlnaHQsIHgsIHkgfSA9IGNoaWxkLnNpemUgPz8geyB3aWR0aDogMCwgaGVpZ2h0OiAwLCB4OiAwLCB5OiAwIH07XG4gICAgbG9nLmRlYnVnKFxuICAgICAgXCJnZXRNYXhDaGlsZFNpemUgYWJjOTUgY2hpbGQ6XCIsXG4gICAgICBjaGlsZC5pZCxcbiAgICAgIFwid2lkdGg6XCIsXG4gICAgICB3aWR0aCxcbiAgICAgIFwiaGVpZ2h0OlwiLFxuICAgICAgaGVpZ2h0LFxuICAgICAgXCJ4OlwiLFxuICAgICAgeCxcbiAgICAgIFwieTpcIixcbiAgICAgIHksXG4gICAgICBjaGlsZC50eXBlXG4gICAgKTtcbiAgICBpZiAoY2hpbGQudHlwZSA9PT0gXCJzcGFjZVwiKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKHdpZHRoID4gbWF4V2lkdGgpIHtcbiAgICAgIG1heFdpZHRoID0gd2lkdGggLyAoYmxvY2sud2lkdGhJbkNvbHVtbnMgPz8gMSk7XG4gICAgfVxuICAgIGlmIChoZWlnaHQgPiBtYXhIZWlnaHQpIHtcbiAgICAgIG1heEhlaWdodCA9IGhlaWdodDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHsgd2lkdGg6IG1heFdpZHRoLCBoZWlnaHQ6IG1heEhlaWdodCB9O1xufSwgXCJnZXRNYXhDaGlsZFNpemVcIik7XG5mdW5jdGlvbiBzZXRCbG9ja1NpemVzKGJsb2NrLCBkYjIsIHNpYmxpbmdXaWR0aCA9IDAsIHNpYmxpbmdIZWlnaHQgPSAwKSB7XG4gIGxvZy5kZWJ1ZyhcbiAgICBcInNldEJsb2NrU2l6ZXMgYWJjOTUgKHN0YXJ0KVwiLFxuICAgIGJsb2NrLmlkLFxuICAgIGJsb2NrPy5zaXplPy54LFxuICAgIFwiYmxvY2sgd2lkdGggPVwiLFxuICAgIGJsb2NrPy5zaXplLFxuICAgIFwic2llYmxpbmdXaWR0aFwiLFxuICAgIHNpYmxpbmdXaWR0aFxuICApO1xuICBpZiAoIWJsb2NrPy5zaXplPy53aWR0aCkge1xuICAgIGJsb2NrLnNpemUgPSB7XG4gICAgICB3aWR0aDogc2libGluZ1dpZHRoLFxuICAgICAgaGVpZ2h0OiBzaWJsaW5nSGVpZ2h0LFxuICAgICAgeDogMCxcbiAgICAgIHk6IDBcbiAgICB9O1xuICB9XG4gIGxldCBtYXhXaWR0aCA9IDA7XG4gIGxldCBtYXhIZWlnaHQgPSAwO1xuICBpZiAoYmxvY2suY2hpbGRyZW4/Lmxlbmd0aCA+IDApIHtcbiAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGJsb2NrLmNoaWxkcmVuKSB7XG4gICAgICBzZXRCbG9ja1NpemVzKGNoaWxkLCBkYjIpO1xuICAgIH1cbiAgICBjb25zdCBjaGlsZFNpemUgPSBnZXRNYXhDaGlsZFNpemUoYmxvY2spO1xuICAgIG1heFdpZHRoID0gY2hpbGRTaXplLndpZHRoO1xuICAgIG1heEhlaWdodCA9IGNoaWxkU2l6ZS5oZWlnaHQ7XG4gICAgbG9nLmRlYnVnKFwic2V0QmxvY2tTaXplcyBhYmM5NSBtYXhXaWR0aCBvZlwiLCBibG9jay5pZCwgXCI6cyBjaGlsZHJlbiBpcyBcIiwgbWF4V2lkdGgsIG1heEhlaWdodCk7XG4gICAgZm9yIChjb25zdCBjaGlsZCBvZiBibG9jay5jaGlsZHJlbikge1xuICAgICAgaWYgKGNoaWxkLnNpemUpIHtcbiAgICAgICAgbG9nLmRlYnVnKFxuICAgICAgICAgIGBhYmM5NSBTZXR0aW5nIHNpemUgb2YgY2hpbGRyZW4gb2YgJHtibG9jay5pZH0gaWQ9JHtjaGlsZC5pZH0gJHttYXhXaWR0aH0gJHttYXhIZWlnaHR9ICR7SlNPTi5zdHJpbmdpZnkoY2hpbGQuc2l6ZSl9YFxuICAgICAgICApO1xuICAgICAgICBjaGlsZC5zaXplLndpZHRoID0gbWF4V2lkdGggKiAoY2hpbGQud2lkdGhJbkNvbHVtbnMgPz8gMSkgKyBwYWRkaW5nICogKChjaGlsZC53aWR0aEluQ29sdW1ucyA/PyAxKSAtIDEpO1xuICAgICAgICBjaGlsZC5zaXplLmhlaWdodCA9IG1heEhlaWdodDtcbiAgICAgICAgY2hpbGQuc2l6ZS54ID0gMDtcbiAgICAgICAgY2hpbGQuc2l6ZS55ID0gMDtcbiAgICAgICAgbG9nLmRlYnVnKFxuICAgICAgICAgIGBhYmM5NSB1cGRhdGluZyBzaXplIG9mICR7YmxvY2suaWR9IGNoaWxkcmVuIGNoaWxkOiR7Y2hpbGQuaWR9IG1heFdpZHRoOiR7bWF4V2lkdGh9IG1heEhlaWdodDoke21heEhlaWdodH1gXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAoY29uc3QgY2hpbGQgb2YgYmxvY2suY2hpbGRyZW4pIHtcbiAgICAgIHNldEJsb2NrU2l6ZXMoY2hpbGQsIGRiMiwgbWF4V2lkdGgsIG1heEhlaWdodCk7XG4gICAgfVxuICAgIGNvbnN0IGNvbHVtbnMgPSBibG9jay5jb2x1bW5zID8/IC0xO1xuICAgIGxldCBudW1JdGVtcyA9IDA7XG4gICAgZm9yIChjb25zdCBjaGlsZCBvZiBibG9jay5jaGlsZHJlbikge1xuICAgICAgbnVtSXRlbXMgKz0gY2hpbGQud2lkdGhJbkNvbHVtbnMgPz8gMTtcbiAgICB9XG4gICAgbGV0IHhTaXplID0gYmxvY2suY2hpbGRyZW4ubGVuZ3RoO1xuICAgIGlmIChjb2x1bW5zID4gMCAmJiBjb2x1bW5zIDwgbnVtSXRlbXMpIHtcbiAgICAgIHhTaXplID0gY29sdW1ucztcbiAgICB9XG4gICAgY29uc3QgeVNpemUgPSBNYXRoLmNlaWwobnVtSXRlbXMgLyB4U2l6ZSk7XG4gICAgbGV0IHdpZHRoID0geFNpemUgKiAobWF4V2lkdGggKyBwYWRkaW5nKSArIHBhZGRpbmc7XG4gICAgbGV0IGhlaWdodCA9IHlTaXplICogKG1heEhlaWdodCArIHBhZGRpbmcpICsgcGFkZGluZztcbiAgICBpZiAod2lkdGggPCBzaWJsaW5nV2lkdGgpIHtcbiAgICAgIGxvZy5kZWJ1ZyhcbiAgICAgICAgYERldGVjdGVkIHRvIHNtYWxsIHNpZWJsaW5nOiBhYmM5NSAke2Jsb2NrLmlkfSBzaWVibGluZ1dpZHRoICR7c2libGluZ1dpZHRofSBzaWVibGluZ0hlaWdodCAke3NpYmxpbmdIZWlnaHR9IHdpZHRoICR7d2lkdGh9YFxuICAgICAgKTtcbiAgICAgIHdpZHRoID0gc2libGluZ1dpZHRoO1xuICAgICAgaGVpZ2h0ID0gc2libGluZ0hlaWdodDtcbiAgICAgIGNvbnN0IGNoaWxkV2lkdGggPSAoc2libGluZ1dpZHRoIC0geFNpemUgKiBwYWRkaW5nIC0gcGFkZGluZykgLyB4U2l6ZTtcbiAgICAgIGNvbnN0IGNoaWxkSGVpZ2h0ID0gKHNpYmxpbmdIZWlnaHQgLSB5U2l6ZSAqIHBhZGRpbmcgLSBwYWRkaW5nKSAvIHlTaXplO1xuICAgICAgbG9nLmRlYnVnKFwiU2l6ZSBpbmRhdGEgYWJjODhcIiwgYmxvY2suaWQsIFwiY2hpbGRXaWR0aFwiLCBjaGlsZFdpZHRoLCBcIm1heFdpZHRoXCIsIG1heFdpZHRoKTtcbiAgICAgIGxvZy5kZWJ1ZyhcIlNpemUgaW5kYXRhIGFiYzg4XCIsIGJsb2NrLmlkLCBcImNoaWxkSGVpZ2h0XCIsIGNoaWxkSGVpZ2h0LCBcIm1heEhlaWdodFwiLCBtYXhIZWlnaHQpO1xuICAgICAgbG9nLmRlYnVnKFwiU2l6ZSBpbmRhdGEgYWJjODggeFNpemVcIiwgeFNpemUsIFwicGFkZGluZ1wiLCBwYWRkaW5nKTtcbiAgICAgIGZvciAoY29uc3QgY2hpbGQgb2YgYmxvY2suY2hpbGRyZW4pIHtcbiAgICAgICAgaWYgKGNoaWxkLnNpemUpIHtcbiAgICAgICAgICBjaGlsZC5zaXplLndpZHRoID0gY2hpbGRXaWR0aDtcbiAgICAgICAgICBjaGlsZC5zaXplLmhlaWdodCA9IGNoaWxkSGVpZ2h0O1xuICAgICAgICAgIGNoaWxkLnNpemUueCA9IDA7XG4gICAgICAgICAgY2hpbGQuc2l6ZS55ID0gMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBsb2cuZGVidWcoXG4gICAgICBgYWJjOTUgKGZpbmFsZSBjYWxjKSAke2Jsb2NrLmlkfSB4U2l6ZSAke3hTaXplfSB5U2l6ZSAke3lTaXplfSBjb2x1bW5zICR7Y29sdW1uc30ke2Jsb2NrLmNoaWxkcmVuLmxlbmd0aH0gd2lkdGg9JHtNYXRoLm1heCh3aWR0aCwgYmxvY2suc2l6ZT8ud2lkdGggfHwgMCl9YFxuICAgICk7XG4gICAgaWYgKHdpZHRoIDwgKGJsb2NrPy5zaXplPy53aWR0aCB8fCAwKSkge1xuICAgICAgd2lkdGggPSBibG9jaz8uc2l6ZT8ud2lkdGggfHwgMDtcbiAgICAgIGNvbnN0IG51bSA9IGNvbHVtbnMgPiAwID8gTWF0aC5taW4oYmxvY2suY2hpbGRyZW4ubGVuZ3RoLCBjb2x1bW5zKSA6IGJsb2NrLmNoaWxkcmVuLmxlbmd0aDtcbiAgICAgIGlmIChudW0gPiAwKSB7XG4gICAgICAgIGNvbnN0IGNoaWxkV2lkdGggPSAod2lkdGggLSBudW0gKiBwYWRkaW5nIC0gcGFkZGluZykgLyBudW07XG4gICAgICAgIGxvZy5kZWJ1ZyhcImFiYzk1IChncm93aW5nIHRvIGZpdCkgd2lkdGhcIiwgYmxvY2suaWQsIHdpZHRoLCBibG9jay5zaXplPy53aWR0aCwgY2hpbGRXaWR0aCk7XG4gICAgICAgIGZvciAoY29uc3QgY2hpbGQgb2YgYmxvY2suY2hpbGRyZW4pIHtcbiAgICAgICAgICBpZiAoY2hpbGQuc2l6ZSkge1xuICAgICAgICAgICAgY2hpbGQuc2l6ZS53aWR0aCA9IGNoaWxkV2lkdGg7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGJsb2NrLnNpemUgPSB7XG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwXG4gICAgfTtcbiAgfVxuICBsb2cuZGVidWcoXG4gICAgXCJzZXRCbG9ja1NpemVzIGFiYzk0IChkb25lKVwiLFxuICAgIGJsb2NrLmlkLFxuICAgIGJsb2NrPy5zaXplPy54LFxuICAgIGJsb2NrPy5zaXplPy53aWR0aCxcbiAgICBibG9jaz8uc2l6ZT8ueSxcbiAgICBibG9jaz8uc2l6ZT8uaGVpZ2h0XG4gICk7XG59XG5fX25hbWUoc2V0QmxvY2tTaXplcywgXCJzZXRCbG9ja1NpemVzXCIpO1xuZnVuY3Rpb24gbGF5b3V0QmxvY2tzKGJsb2NrLCBkYjIpIHtcbiAgbG9nLmRlYnVnKFxuICAgIGBhYmM4NSBsYXlvdXQgYmxvY2tzICg9PmxheW91dEJsb2NrcykgJHtibG9jay5pZH0geDogJHtibG9jaz8uc2l6ZT8ueH0geTogJHtibG9jaz8uc2l6ZT8ueX0gd2lkdGg6ICR7YmxvY2s/LnNpemU/LndpZHRofWBcbiAgKTtcbiAgY29uc3QgY29sdW1ucyA9IGJsb2NrLmNvbHVtbnMgPz8gLTE7XG4gIGxvZy5kZWJ1ZyhcImxheW91dEJsb2NrcyBjb2x1bW5zIGFiYzk1XCIsIGJsb2NrLmlkLCBcIj0+XCIsIGNvbHVtbnMsIGJsb2NrKTtcbiAgaWYgKGJsb2NrLmNoaWxkcmVuICYmIC8vIGZpbmQgbWF4IHdpZHRoIG9mIGNoaWxkcmVuXG4gIGJsb2NrLmNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICBjb25zdCB3aWR0aCA9IGJsb2NrPy5jaGlsZHJlblswXT8uc2l6ZT8ud2lkdGggPz8gMDtcbiAgICBjb25zdCB3aWR0aE9mQ2hpbGRyZW4gPSBibG9jay5jaGlsZHJlbi5sZW5ndGggKiB3aWR0aCArIChibG9jay5jaGlsZHJlbi5sZW5ndGggLSAxKSAqIHBhZGRpbmc7XG4gICAgbG9nLmRlYnVnKFwid2lkdGhPZkNoaWxkcmVuIDg4XCIsIHdpZHRoT2ZDaGlsZHJlbiwgXCJwb3NYXCIpO1xuICAgIGxldCBjb2x1bW5Qb3MgPSAwO1xuICAgIGxvZy5kZWJ1ZyhcImFiYzkxIGJsb2NrPy5zaXplPy54XCIsIGJsb2NrLmlkLCBibG9jaz8uc2l6ZT8ueCk7XG4gICAgbGV0IHN0YXJ0aW5nUG9zWCA9IGJsb2NrPy5zaXplPy54ID8gYmxvY2s/LnNpemU/LnggKyAoLWJsb2NrPy5zaXplPy53aWR0aCAvIDIgfHwgMCkgOiAtcGFkZGluZztcbiAgICBsZXQgcm93UG9zID0gMDtcbiAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGJsb2NrLmNoaWxkcmVuKSB7XG4gICAgICBjb25zdCBwYXJlbnQgPSBibG9jaztcbiAgICAgIGlmICghY2hpbGQuc2l6ZSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHsgd2lkdGg6IHdpZHRoMiwgaGVpZ2h0IH0gPSBjaGlsZC5zaXplO1xuICAgICAgY29uc3QgeyBweCwgcHkgfSA9IGNhbGN1bGF0ZUJsb2NrUG9zaXRpb24oY29sdW1ucywgY29sdW1uUG9zKTtcbiAgICAgIGlmIChweSAhPSByb3dQb3MpIHtcbiAgICAgICAgcm93UG9zID0gcHk7XG4gICAgICAgIHN0YXJ0aW5nUG9zWCA9IGJsb2NrPy5zaXplPy54ID8gYmxvY2s/LnNpemU/LnggKyAoLWJsb2NrPy5zaXplPy53aWR0aCAvIDIgfHwgMCkgOiAtcGFkZGluZztcbiAgICAgICAgbG9nLmRlYnVnKFwiTmV3IHJvdyBpbiBsYXlvdXQgZm9yIGJsb2NrXCIsIGJsb2NrLmlkLCBcIiBhbmQgY2hpbGQgXCIsIGNoaWxkLmlkLCByb3dQb3MpO1xuICAgICAgfVxuICAgICAgbG9nLmRlYnVnKFxuICAgICAgICBgYWJjODkgbGF5b3V0IGJsb2NrcyAoY2hpbGQpIGlkOiAke2NoaWxkLmlkfSBQb3M6ICR7Y29sdW1uUG9zfSAocHgsIHB5KSAke3B4fSwke3B5fSAoJHtwYXJlbnQ/LnNpemU/Lnh9LCR7cGFyZW50Py5zaXplPy55fSkgcGFyZW50OiAke3BhcmVudC5pZH0gd2lkdGg6ICR7d2lkdGgyfSR7cGFkZGluZ31gXG4gICAgICApO1xuICAgICAgaWYgKHBhcmVudC5zaXplKSB7XG4gICAgICAgIGNvbnN0IGhhbGZXaWR0aCA9IHdpZHRoMiAvIDI7XG4gICAgICAgIGNoaWxkLnNpemUueCA9IHN0YXJ0aW5nUG9zWCArIHBhZGRpbmcgKyBoYWxmV2lkdGg7XG4gICAgICAgIGxvZy5kZWJ1ZyhcbiAgICAgICAgICBgYWJjOTEgbGF5b3V0IGJsb2NrcyAoY2FsYykgcHgsIHB5aWQ6JHtjaGlsZC5pZH0gc3RhcnRpbmdQb3M9WCR7c3RhcnRpbmdQb3NYfSBuZXcgc3RhcnRpbmdQb3NYJHtjaGlsZC5zaXplLnh9ICR7aGFsZldpZHRofSBwYWRkaW5nPSR7cGFkZGluZ30gd2lkdGg9JHt3aWR0aDJ9IGhhbGZXaWR0aD0ke2hhbGZXaWR0aH0gPT4geDoke2NoaWxkLnNpemUueH0geToke2NoaWxkLnNpemUueX0gJHtjaGlsZC53aWR0aEluQ29sdW1uc30gKHdpZHRoICogKGNoaWxkPy53IHx8IDEpKSAvIDIgJHt3aWR0aDIgKiAoY2hpbGQ/LndpZHRoSW5Db2x1bW5zID8/IDEpIC8gMn1gXG4gICAgICAgICk7XG4gICAgICAgIHN0YXJ0aW5nUG9zWCA9IGNoaWxkLnNpemUueCArIGhhbGZXaWR0aDtcbiAgICAgICAgY2hpbGQuc2l6ZS55ID0gcGFyZW50LnNpemUueSAtIHBhcmVudC5zaXplLmhlaWdodCAvIDIgKyBweSAqIChoZWlnaHQgKyBwYWRkaW5nKSArIGhlaWdodCAvIDIgKyBwYWRkaW5nO1xuICAgICAgICBsb2cuZGVidWcoXG4gICAgICAgICAgYGFiYzg4IGxheW91dCBibG9ja3MgKGNhbGMpIHB4LCBweWlkOiR7Y2hpbGQuaWR9c3RhcnRpbmdQb3NYJHtzdGFydGluZ1Bvc1h9JHtwYWRkaW5nfSR7aGFsZldpZHRofT0+eDoke2NoaWxkLnNpemUueH15OiR7Y2hpbGQuc2l6ZS55fSR7Y2hpbGQud2lkdGhJbkNvbHVtbnN9KHdpZHRoICogKGNoaWxkPy53IHx8IDEpKSAvIDIke3dpZHRoMiAqIChjaGlsZD8ud2lkdGhJbkNvbHVtbnMgPz8gMSkgLyAyfWBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGlmIChjaGlsZC5jaGlsZHJlbikge1xuICAgICAgICBsYXlvdXRCbG9ja3MoY2hpbGQsIGRiMik7XG4gICAgICB9XG4gICAgICBjb2x1bW5Qb3MgKz0gY2hpbGQ/LndpZHRoSW5Db2x1bW5zID8/IDE7XG4gICAgICBsb2cuZGVidWcoXCJhYmM4OCBjb2x1bW5zUG9zXCIsIGNoaWxkLCBjb2x1bW5Qb3MpO1xuICAgIH1cbiAgfVxuICBsb2cuZGVidWcoXG4gICAgYGxheW91dCBibG9ja3MgKDw9PWxheW91dEJsb2NrcykgJHtibG9jay5pZH0geDogJHtibG9jaz8uc2l6ZT8ueH0geTogJHtibG9jaz8uc2l6ZT8ueX0gd2lkdGg6ICR7YmxvY2s/LnNpemU/LndpZHRofWBcbiAgKTtcbn1cbl9fbmFtZShsYXlvdXRCbG9ja3MsIFwibGF5b3V0QmxvY2tzXCIpO1xuZnVuY3Rpb24gZmluZEJvdW5kcyhibG9jaywgeyBtaW5YLCBtaW5ZLCBtYXhYLCBtYXhZIH0gPSB7IG1pblg6IDAsIG1pblk6IDAsIG1heFg6IDAsIG1heFk6IDAgfSkge1xuICBpZiAoYmxvY2suc2l6ZSAmJiBibG9jay5pZCAhPT0gXCJyb290XCIpIHtcbiAgICBjb25zdCB7IHgsIHksIHdpZHRoLCBoZWlnaHQgfSA9IGJsb2NrLnNpemU7XG4gICAgaWYgKHggLSB3aWR0aCAvIDIgPCBtaW5YKSB7XG4gICAgICBtaW5YID0geCAtIHdpZHRoIC8gMjtcbiAgICB9XG4gICAgaWYgKHkgLSBoZWlnaHQgLyAyIDwgbWluWSkge1xuICAgICAgbWluWSA9IHkgLSBoZWlnaHQgLyAyO1xuICAgIH1cbiAgICBpZiAoeCArIHdpZHRoIC8gMiA+IG1heFgpIHtcbiAgICAgIG1heFggPSB4ICsgd2lkdGggLyAyO1xuICAgIH1cbiAgICBpZiAoeSArIGhlaWdodCAvIDIgPiBtYXhZKSB7XG4gICAgICBtYXhZID0geSArIGhlaWdodCAvIDI7XG4gICAgfVxuICB9XG4gIGlmIChibG9jay5jaGlsZHJlbikge1xuICAgIGZvciAoY29uc3QgY2hpbGQgb2YgYmxvY2suY2hpbGRyZW4pIHtcbiAgICAgICh7IG1pblgsIG1pblksIG1heFgsIG1heFkgfSA9IGZpbmRCb3VuZHMoY2hpbGQsIHsgbWluWCwgbWluWSwgbWF4WCwgbWF4WSB9KSk7XG4gICAgfVxuICB9XG4gIHJldHVybiB7IG1pblgsIG1pblksIG1heFgsIG1heFkgfTtcbn1cbl9fbmFtZShmaW5kQm91bmRzLCBcImZpbmRCb3VuZHNcIik7XG5mdW5jdGlvbiBsYXlvdXQoZGIyKSB7XG4gIGNvbnN0IHJvb3QgPSBkYjIuZ2V0QmxvY2soXCJyb290XCIpO1xuICBpZiAoIXJvb3QpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgc2V0QmxvY2tTaXplcyhyb290LCBkYjIsIDAsIDApO1xuICBsYXlvdXRCbG9ja3Mocm9vdCwgZGIyKTtcbiAgbG9nLmRlYnVnKFwiZ2V0QmxvY2tzXCIsIEpTT04uc3RyaW5naWZ5KHJvb3QsIG51bGwsIDIpKTtcbiAgY29uc3QgeyBtaW5YLCBtaW5ZLCBtYXhYLCBtYXhZIH0gPSBmaW5kQm91bmRzKHJvb3QpO1xuICBjb25zdCBoZWlnaHQgPSBtYXhZIC0gbWluWTtcbiAgY29uc3Qgd2lkdGggPSBtYXhYIC0gbWluWDtcbiAgcmV0dXJuIHsgeDogbWluWCwgeTogbWluWSwgd2lkdGgsIGhlaWdodCB9O1xufVxuX19uYW1lKGxheW91dCwgXCJsYXlvdXRcIik7XG5cbi8vIHNyYy9kaWFncmFtcy9ibG9jay9yZW5kZXJIZWxwZXJzLnRzXG5pbXBvcnQgKiBhcyBncmFwaGxpYiBmcm9tIFwiZGFncmUtZDMtZXMvc3JjL2dyYXBobGliL2luZGV4LmpzXCI7XG5cbi8vIHNyYy9kYWdyZS13cmFwcGVyL2NyZWF0ZUxhYmVsLmpzXG5pbXBvcnQgeyBzZWxlY3QgfSBmcm9tIFwiZDNcIjtcbmZ1bmN0aW9uIGFwcGx5U3R5bGUoZG9tLCBzdHlsZUZuKSB7XG4gIGlmIChzdHlsZUZuKSB7XG4gICAgZG9tLmF0dHIoXCJzdHlsZVwiLCBzdHlsZUZuKTtcbiAgfVxufVxuX19uYW1lKGFwcGx5U3R5bGUsIFwiYXBwbHlTdHlsZVwiKTtcbmZ1bmN0aW9uIGFkZEh0bWxMYWJlbChub2RlKSB7XG4gIGNvbnN0IGZvID0gc2VsZWN0KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwiZm9yZWlnbk9iamVjdFwiKSk7XG4gIGNvbnN0IGRpdiA9IGZvLmFwcGVuZChcInhodG1sOmRpdlwiKTtcbiAgY29uc3QgbGFiZWwgPSBub2RlLmxhYmVsO1xuICBjb25zdCBsYWJlbENsYXNzID0gbm9kZS5pc05vZGUgPyBcIm5vZGVMYWJlbFwiIDogXCJlZGdlTGFiZWxcIjtcbiAgY29uc3Qgc3BhbiA9IGRpdi5hcHBlbmQoXCJzcGFuXCIpO1xuICBzcGFuLmh0bWwobGFiZWwpO1xuICBhcHBseVN0eWxlKHNwYW4sIG5vZGUubGFiZWxTdHlsZSk7XG4gIHNwYW4uYXR0cihcImNsYXNzXCIsIGxhYmVsQ2xhc3MpO1xuICBhcHBseVN0eWxlKGRpdiwgbm9kZS5sYWJlbFN0eWxlKTtcbiAgZGl2LnN0eWxlKFwiZGlzcGxheVwiLCBcImlubGluZS1ibG9ja1wiKTtcbiAgZGl2LnN0eWxlKFwid2hpdGUtc3BhY2VcIiwgXCJub3dyYXBcIik7XG4gIGRpdi5hdHRyKFwieG1sbnNcIiwgXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIpO1xuICByZXR1cm4gZm8ubm9kZSgpO1xufVxuX19uYW1lKGFkZEh0bWxMYWJlbCwgXCJhZGRIdG1sTGFiZWxcIik7XG52YXIgY3JlYXRlTGFiZWwgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChfdmVydGV4VGV4dCwgc3R5bGUsIGlzVGl0bGUsIGlzTm9kZSkgPT4ge1xuICBsZXQgdmVydGV4VGV4dCA9IF92ZXJ0ZXhUZXh0IHx8IFwiXCI7XG4gIGlmICh0eXBlb2YgdmVydGV4VGV4dCA9PT0gXCJvYmplY3RcIikge1xuICAgIHZlcnRleFRleHQgPSB2ZXJ0ZXhUZXh0WzBdO1xuICB9XG4gIGlmIChldmFsdWF0ZShnZXRDb25maWcyKCkuZmxvd2NoYXJ0Lmh0bWxMYWJlbHMpKSB7XG4gICAgdmVydGV4VGV4dCA9IHZlcnRleFRleHQucmVwbGFjZSgvXFxcXG58XFxuL2csIFwiPGJyIC8+XCIpO1xuICAgIGxvZy5kZWJ1ZyhcInZlcnRleFRleHRcIiArIHZlcnRleFRleHQpO1xuICAgIGNvbnN0IG5vZGUgPSB7XG4gICAgICBpc05vZGUsXG4gICAgICBsYWJlbDogcmVwbGFjZUljb25TdWJzdHJpbmcoZGVjb2RlRW50aXRpZXModmVydGV4VGV4dCkpLFxuICAgICAgbGFiZWxTdHlsZTogc3R5bGUucmVwbGFjZShcImZpbGw6XCIsIFwiY29sb3I6XCIpXG4gICAgfTtcbiAgICBsZXQgdmVydGV4Tm9kZSA9IGFkZEh0bWxMYWJlbChub2RlKTtcbiAgICByZXR1cm4gdmVydGV4Tm9kZTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBzdmdMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidGV4dFwiKTtcbiAgICBzdmdMYWJlbC5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBzdHlsZS5yZXBsYWNlKFwiY29sb3I6XCIsIFwiZmlsbDpcIikpO1xuICAgIGxldCByb3dzID0gW107XG4gICAgaWYgKHR5cGVvZiB2ZXJ0ZXhUZXh0ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICByb3dzID0gdmVydGV4VGV4dC5zcGxpdCgvXFxcXG58XFxufDxiclxccypcXC8/Pi9naSk7XG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZlcnRleFRleHQpKSB7XG4gICAgICByb3dzID0gdmVydGV4VGV4dDtcbiAgICB9IGVsc2Uge1xuICAgICAgcm93cyA9IFtdO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IHJvdyBvZiByb3dzKSB7XG4gICAgICBjb25zdCB0c3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidHNwYW5cIik7XG4gICAgICB0c3Bhbi5zZXRBdHRyaWJ1dGVOUyhcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCBcInhtbDpzcGFjZVwiLCBcInByZXNlcnZlXCIpO1xuICAgICAgdHNwYW4uc2V0QXR0cmlidXRlKFwiZHlcIiwgXCIxZW1cIik7XG4gICAgICB0c3Bhbi5zZXRBdHRyaWJ1dGUoXCJ4XCIsIFwiMFwiKTtcbiAgICAgIGlmIChpc1RpdGxlKSB7XG4gICAgICAgIHRzcGFuLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwidGl0bGUtcm93XCIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdHNwYW4uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJyb3dcIik7XG4gICAgICB9XG4gICAgICB0c3Bhbi50ZXh0Q29udGVudCA9IHJvdy50cmltKCk7XG4gICAgICBzdmdMYWJlbC5hcHBlbmRDaGlsZCh0c3Bhbik7XG4gICAgfVxuICAgIHJldHVybiBzdmdMYWJlbDtcbiAgfVxufSwgXCJjcmVhdGVMYWJlbFwiKTtcbnZhciBjcmVhdGVMYWJlbF9kZWZhdWx0ID0gY3JlYXRlTGFiZWw7XG5cbi8vIHNyYy9kYWdyZS13cmFwcGVyL2VkZ2VzLmpzXG5pbXBvcnQgeyBsaW5lLCBjdXJ2ZUJhc2lzLCBzZWxlY3QgYXMgc2VsZWN0MiB9IGZyb20gXCJkM1wiO1xuXG4vLyBzcmMvZGFncmUtd3JhcHBlci9lZGdlTWFya2VyLnRzXG52YXIgYWRkRWRnZU1hcmtlcnMgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChzdmdQYXRoLCBlZGdlLCB1cmwsIGlkLCBkaWFncmFtVHlwZSkgPT4ge1xuICBpZiAoZWRnZS5hcnJvd1R5cGVTdGFydCkge1xuICAgIGFkZEVkZ2VNYXJrZXIoc3ZnUGF0aCwgXCJzdGFydFwiLCBlZGdlLmFycm93VHlwZVN0YXJ0LCB1cmwsIGlkLCBkaWFncmFtVHlwZSk7XG4gIH1cbiAgaWYgKGVkZ2UuYXJyb3dUeXBlRW5kKSB7XG4gICAgYWRkRWRnZU1hcmtlcihzdmdQYXRoLCBcImVuZFwiLCBlZGdlLmFycm93VHlwZUVuZCwgdXJsLCBpZCwgZGlhZ3JhbVR5cGUpO1xuICB9XG59LCBcImFkZEVkZ2VNYXJrZXJzXCIpO1xudmFyIGFycm93VHlwZXNNYXAgPSB7XG4gIGFycm93X2Nyb3NzOiBcImNyb3NzXCIsXG4gIGFycm93X3BvaW50OiBcInBvaW50XCIsXG4gIGFycm93X2JhcmI6IFwiYmFyYlwiLFxuICBhcnJvd19jaXJjbGU6IFwiY2lyY2xlXCIsXG4gIGFnZ3JlZ2F0aW9uOiBcImFnZ3JlZ2F0aW9uXCIsXG4gIGV4dGVuc2lvbjogXCJleHRlbnNpb25cIixcbiAgY29tcG9zaXRpb246IFwiY29tcG9zaXRpb25cIixcbiAgZGVwZW5kZW5jeTogXCJkZXBlbmRlbmN5XCIsXG4gIGxvbGxpcG9wOiBcImxvbGxpcG9wXCJcbn07XG52YXIgYWRkRWRnZU1hcmtlciA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKHN2Z1BhdGgsIHBvc2l0aW9uLCBhcnJvd1R5cGUsIHVybCwgaWQsIGRpYWdyYW1UeXBlKSA9PiB7XG4gIGNvbnN0IGVuZE1hcmtlclR5cGUgPSBhcnJvd1R5cGVzTWFwW2Fycm93VHlwZV07XG4gIGlmICghZW5kTWFya2VyVHlwZSkge1xuICAgIGxvZy53YXJuKGBVbmtub3duIGFycm93IHR5cGU6ICR7YXJyb3dUeXBlfWApO1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBzdWZmaXggPSBwb3NpdGlvbiA9PT0gXCJzdGFydFwiID8gXCJTdGFydFwiIDogXCJFbmRcIjtcbiAgc3ZnUGF0aC5hdHRyKGBtYXJrZXItJHtwb3NpdGlvbn1gLCBgdXJsKCR7dXJsfSMke2lkfV8ke2RpYWdyYW1UeXBlfS0ke2VuZE1hcmtlclR5cGV9JHtzdWZmaXh9KWApO1xufSwgXCJhZGRFZGdlTWFya2VyXCIpO1xuXG4vLyBzcmMvZGFncmUtd3JhcHBlci9lZGdlcy5qc1xudmFyIGVkZ2VMYWJlbHMgPSB7fTtcbnZhciB0ZXJtaW5hbExhYmVscyA9IHt9O1xudmFyIGluc2VydEVkZ2VMYWJlbCA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKGVsZW0sIGVkZ2UpID0+IHtcbiAgY29uc3QgY29uZmlnMiA9IGdldENvbmZpZzIoKTtcbiAgY29uc3QgdXNlSHRtbExhYmVscyA9IGV2YWx1YXRlKGNvbmZpZzIuZmxvd2NoYXJ0Lmh0bWxMYWJlbHMpO1xuICBjb25zdCBsYWJlbEVsZW1lbnQgPSBlZGdlLmxhYmVsVHlwZSA9PT0gXCJtYXJrZG93blwiID8gY3JlYXRlVGV4dChcbiAgICBlbGVtLFxuICAgIGVkZ2UubGFiZWwsXG4gICAge1xuICAgICAgc3R5bGU6IGVkZ2UubGFiZWxTdHlsZSxcbiAgICAgIHVzZUh0bWxMYWJlbHMsXG4gICAgICBhZGRTdmdCYWNrZ3JvdW5kOiB0cnVlXG4gICAgfSxcbiAgICBjb25maWcyXG4gICkgOiBjcmVhdGVMYWJlbF9kZWZhdWx0KGVkZ2UubGFiZWwsIGVkZ2UubGFiZWxTdHlsZSk7XG4gIGNvbnN0IGVkZ2VMYWJlbCA9IGVsZW0uaW5zZXJ0KFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJlZGdlTGFiZWxcIik7XG4gIGNvbnN0IGxhYmVsID0gZWRnZUxhYmVsLmluc2VydChcImdcIikuYXR0cihcImNsYXNzXCIsIFwibGFiZWxcIik7XG4gIGxhYmVsLm5vZGUoKS5hcHBlbmRDaGlsZChsYWJlbEVsZW1lbnQpO1xuICBsZXQgYmJveCA9IGxhYmVsRWxlbWVudC5nZXRCQm94KCk7XG4gIGlmICh1c2VIdG1sTGFiZWxzKSB7XG4gICAgY29uc3QgZGl2ID0gbGFiZWxFbGVtZW50LmNoaWxkcmVuWzBdO1xuICAgIGNvbnN0IGR2ID0gc2VsZWN0MihsYWJlbEVsZW1lbnQpO1xuICAgIGJib3ggPSBkaXYuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgZHYuYXR0cihcIndpZHRoXCIsIGJib3gud2lkdGgpO1xuICAgIGR2LmF0dHIoXCJoZWlnaHRcIiwgYmJveC5oZWlnaHQpO1xuICB9XG4gIGxhYmVsLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgXCJ0cmFuc2xhdGUoXCIgKyAtYmJveC53aWR0aCAvIDIgKyBcIiwgXCIgKyAtYmJveC5oZWlnaHQgLyAyICsgXCIpXCIpO1xuICBlZGdlTGFiZWxzW2VkZ2UuaWRdID0gZWRnZUxhYmVsO1xuICBlZGdlLndpZHRoID0gYmJveC53aWR0aDtcbiAgZWRnZS5oZWlnaHQgPSBiYm94LmhlaWdodDtcbiAgbGV0IGZvO1xuICBpZiAoZWRnZS5zdGFydExhYmVsTGVmdCkge1xuICAgIGNvbnN0IHN0YXJ0TGFiZWxFbGVtZW50ID0gY3JlYXRlTGFiZWxfZGVmYXVsdChlZGdlLnN0YXJ0TGFiZWxMZWZ0LCBlZGdlLmxhYmVsU3R5bGUpO1xuICAgIGNvbnN0IHN0YXJ0RWRnZUxhYmVsTGVmdCA9IGVsZW0uaW5zZXJ0KFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJlZGdlVGVybWluYWxzXCIpO1xuICAgIGNvbnN0IGlubmVyID0gc3RhcnRFZGdlTGFiZWxMZWZ0Lmluc2VydChcImdcIikuYXR0cihcImNsYXNzXCIsIFwiaW5uZXJcIik7XG4gICAgZm8gPSBpbm5lci5ub2RlKCkuYXBwZW5kQ2hpbGQoc3RhcnRMYWJlbEVsZW1lbnQpO1xuICAgIGNvbnN0IHNsQm94ID0gc3RhcnRMYWJlbEVsZW1lbnQuZ2V0QkJveCgpO1xuICAgIGlubmVyLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgXCJ0cmFuc2xhdGUoXCIgKyAtc2xCb3gud2lkdGggLyAyICsgXCIsIFwiICsgLXNsQm94LmhlaWdodCAvIDIgKyBcIilcIik7XG4gICAgaWYgKCF0ZXJtaW5hbExhYmVsc1tlZGdlLmlkXSkge1xuICAgICAgdGVybWluYWxMYWJlbHNbZWRnZS5pZF0gPSB7fTtcbiAgICB9XG4gICAgdGVybWluYWxMYWJlbHNbZWRnZS5pZF0uc3RhcnRMZWZ0ID0gc3RhcnRFZGdlTGFiZWxMZWZ0O1xuICAgIHNldFRlcm1pbmFsV2lkdGgoZm8sIGVkZ2Uuc3RhcnRMYWJlbExlZnQpO1xuICB9XG4gIGlmIChlZGdlLnN0YXJ0TGFiZWxSaWdodCkge1xuICAgIGNvbnN0IHN0YXJ0TGFiZWxFbGVtZW50ID0gY3JlYXRlTGFiZWxfZGVmYXVsdChlZGdlLnN0YXJ0TGFiZWxSaWdodCwgZWRnZS5sYWJlbFN0eWxlKTtcbiAgICBjb25zdCBzdGFydEVkZ2VMYWJlbFJpZ2h0ID0gZWxlbS5pbnNlcnQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLCBcImVkZ2VUZXJtaW5hbHNcIik7XG4gICAgY29uc3QgaW5uZXIgPSBzdGFydEVkZ2VMYWJlbFJpZ2h0Lmluc2VydChcImdcIikuYXR0cihcImNsYXNzXCIsIFwiaW5uZXJcIik7XG4gICAgZm8gPSBzdGFydEVkZ2VMYWJlbFJpZ2h0Lm5vZGUoKS5hcHBlbmRDaGlsZChzdGFydExhYmVsRWxlbWVudCk7XG4gICAgaW5uZXIubm9kZSgpLmFwcGVuZENoaWxkKHN0YXJ0TGFiZWxFbGVtZW50KTtcbiAgICBjb25zdCBzbEJveCA9IHN0YXJ0TGFiZWxFbGVtZW50LmdldEJCb3goKTtcbiAgICBpbm5lci5hdHRyKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKFwiICsgLXNsQm94LndpZHRoIC8gMiArIFwiLCBcIiArIC1zbEJveC5oZWlnaHQgLyAyICsgXCIpXCIpO1xuICAgIGlmICghdGVybWluYWxMYWJlbHNbZWRnZS5pZF0pIHtcbiAgICAgIHRlcm1pbmFsTGFiZWxzW2VkZ2UuaWRdID0ge307XG4gICAgfVxuICAgIHRlcm1pbmFsTGFiZWxzW2VkZ2UuaWRdLnN0YXJ0UmlnaHQgPSBzdGFydEVkZ2VMYWJlbFJpZ2h0O1xuICAgIHNldFRlcm1pbmFsV2lkdGgoZm8sIGVkZ2Uuc3RhcnRMYWJlbFJpZ2h0KTtcbiAgfVxuICBpZiAoZWRnZS5lbmRMYWJlbExlZnQpIHtcbiAgICBjb25zdCBlbmRMYWJlbEVsZW1lbnQgPSBjcmVhdGVMYWJlbF9kZWZhdWx0KGVkZ2UuZW5kTGFiZWxMZWZ0LCBlZGdlLmxhYmVsU3R5bGUpO1xuICAgIGNvbnN0IGVuZEVkZ2VMYWJlbExlZnQgPSBlbGVtLmluc2VydChcImdcIikuYXR0cihcImNsYXNzXCIsIFwiZWRnZVRlcm1pbmFsc1wiKTtcbiAgICBjb25zdCBpbm5lciA9IGVuZEVkZ2VMYWJlbExlZnQuaW5zZXJ0KFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJpbm5lclwiKTtcbiAgICBmbyA9IGlubmVyLm5vZGUoKS5hcHBlbmRDaGlsZChlbmRMYWJlbEVsZW1lbnQpO1xuICAgIGNvbnN0IHNsQm94ID0gZW5kTGFiZWxFbGVtZW50LmdldEJCb3goKTtcbiAgICBpbm5lci5hdHRyKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKFwiICsgLXNsQm94LndpZHRoIC8gMiArIFwiLCBcIiArIC1zbEJveC5oZWlnaHQgLyAyICsgXCIpXCIpO1xuICAgIGVuZEVkZ2VMYWJlbExlZnQubm9kZSgpLmFwcGVuZENoaWxkKGVuZExhYmVsRWxlbWVudCk7XG4gICAgaWYgKCF0ZXJtaW5hbExhYmVsc1tlZGdlLmlkXSkge1xuICAgICAgdGVybWluYWxMYWJlbHNbZWRnZS5pZF0gPSB7fTtcbiAgICB9XG4gICAgdGVybWluYWxMYWJlbHNbZWRnZS5pZF0uZW5kTGVmdCA9IGVuZEVkZ2VMYWJlbExlZnQ7XG4gICAgc2V0VGVybWluYWxXaWR0aChmbywgZWRnZS5lbmRMYWJlbExlZnQpO1xuICB9XG4gIGlmIChlZGdlLmVuZExhYmVsUmlnaHQpIHtcbiAgICBjb25zdCBlbmRMYWJlbEVsZW1lbnQgPSBjcmVhdGVMYWJlbF9kZWZhdWx0KGVkZ2UuZW5kTGFiZWxSaWdodCwgZWRnZS5sYWJlbFN0eWxlKTtcbiAgICBjb25zdCBlbmRFZGdlTGFiZWxSaWdodCA9IGVsZW0uaW5zZXJ0KFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJlZGdlVGVybWluYWxzXCIpO1xuICAgIGNvbnN0IGlubmVyID0gZW5kRWRnZUxhYmVsUmlnaHQuaW5zZXJ0KFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJpbm5lclwiKTtcbiAgICBmbyA9IGlubmVyLm5vZGUoKS5hcHBlbmRDaGlsZChlbmRMYWJlbEVsZW1lbnQpO1xuICAgIGNvbnN0IHNsQm94ID0gZW5kTGFiZWxFbGVtZW50LmdldEJCb3goKTtcbiAgICBpbm5lci5hdHRyKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKFwiICsgLXNsQm94LndpZHRoIC8gMiArIFwiLCBcIiArIC1zbEJveC5oZWlnaHQgLyAyICsgXCIpXCIpO1xuICAgIGVuZEVkZ2VMYWJlbFJpZ2h0Lm5vZGUoKS5hcHBlbmRDaGlsZChlbmRMYWJlbEVsZW1lbnQpO1xuICAgIGlmICghdGVybWluYWxMYWJlbHNbZWRnZS5pZF0pIHtcbiAgICAgIHRlcm1pbmFsTGFiZWxzW2VkZ2UuaWRdID0ge307XG4gICAgfVxuICAgIHRlcm1pbmFsTGFiZWxzW2VkZ2UuaWRdLmVuZFJpZ2h0ID0gZW5kRWRnZUxhYmVsUmlnaHQ7XG4gICAgc2V0VGVybWluYWxXaWR0aChmbywgZWRnZS5lbmRMYWJlbFJpZ2h0KTtcbiAgfVxuICByZXR1cm4gbGFiZWxFbGVtZW50O1xufSwgXCJpbnNlcnRFZGdlTGFiZWxcIik7XG5mdW5jdGlvbiBzZXRUZXJtaW5hbFdpZHRoKGZvLCB2YWx1ZSkge1xuICBpZiAoZ2V0Q29uZmlnMigpLmZsb3djaGFydC5odG1sTGFiZWxzICYmIGZvKSB7XG4gICAgZm8uc3R5bGUud2lkdGggPSB2YWx1ZS5sZW5ndGggKiA5ICsgXCJweFwiO1xuICAgIGZvLnN0eWxlLmhlaWdodCA9IFwiMTJweFwiO1xuICB9XG59XG5fX25hbWUoc2V0VGVybWluYWxXaWR0aCwgXCJzZXRUZXJtaW5hbFdpZHRoXCIpO1xudmFyIHBvc2l0aW9uRWRnZUxhYmVsID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoZWRnZSwgcGF0aHMpID0+IHtcbiAgbG9nLmRlYnVnKFwiTW92aW5nIGxhYmVsIGFiYzg4IFwiLCBlZGdlLmlkLCBlZGdlLmxhYmVsLCBlZGdlTGFiZWxzW2VkZ2UuaWRdLCBwYXRocyk7XG4gIGxldCBwYXRoID0gcGF0aHMudXBkYXRlZFBhdGggPyBwYXRocy51cGRhdGVkUGF0aCA6IHBhdGhzLm9yaWdpbmFsUGF0aDtcbiAgY29uc3Qgc2l0ZUNvbmZpZyA9IGdldENvbmZpZzIoKTtcbiAgY29uc3QgeyBzdWJHcmFwaFRpdGxlVG90YWxNYXJnaW4gfSA9IGdldFN1YkdyYXBoVGl0bGVNYXJnaW5zKHNpdGVDb25maWcpO1xuICBpZiAoZWRnZS5sYWJlbCkge1xuICAgIGNvbnN0IGVsID0gZWRnZUxhYmVsc1tlZGdlLmlkXTtcbiAgICBsZXQgeCA9IGVkZ2UueDtcbiAgICBsZXQgeSA9IGVkZ2UueTtcbiAgICBpZiAocGF0aCkge1xuICAgICAgY29uc3QgcG9zID0gdXRpbHNfZGVmYXVsdC5jYWxjTGFiZWxQb3NpdGlvbihwYXRoKTtcbiAgICAgIGxvZy5kZWJ1ZyhcbiAgICAgICAgXCJNb3ZpbmcgbGFiZWwgXCIgKyBlZGdlLmxhYmVsICsgXCIgZnJvbSAoXCIsXG4gICAgICAgIHgsXG4gICAgICAgIFwiLFwiLFxuICAgICAgICB5LFxuICAgICAgICBcIikgdG8gKFwiLFxuICAgICAgICBwb3MueCxcbiAgICAgICAgXCIsXCIsXG4gICAgICAgIHBvcy55LFxuICAgICAgICBcIikgYWJjODhcIlxuICAgICAgKTtcbiAgICAgIGlmIChwYXRocy51cGRhdGVkUGF0aCkge1xuICAgICAgICB4ID0gcG9zLng7XG4gICAgICAgIHkgPSBwb3MueTtcbiAgICAgIH1cbiAgICB9XG4gICAgZWwuYXR0cihcInRyYW5zZm9ybVwiLCBgdHJhbnNsYXRlKCR7eH0sICR7eSArIHN1YkdyYXBoVGl0bGVUb3RhbE1hcmdpbiAvIDJ9KWApO1xuICB9XG4gIGlmIChlZGdlLnN0YXJ0TGFiZWxMZWZ0KSB7XG4gICAgY29uc3QgZWwgPSB0ZXJtaW5hbExhYmVsc1tlZGdlLmlkXS5zdGFydExlZnQ7XG4gICAgbGV0IHggPSBlZGdlLng7XG4gICAgbGV0IHkgPSBlZGdlLnk7XG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIGNvbnN0IHBvcyA9IHV0aWxzX2RlZmF1bHQuY2FsY1Rlcm1pbmFsTGFiZWxQb3NpdGlvbihlZGdlLmFycm93VHlwZVN0YXJ0ID8gMTAgOiAwLCBcInN0YXJ0X2xlZnRcIiwgcGF0aCk7XG4gICAgICB4ID0gcG9zLng7XG4gICAgICB5ID0gcG9zLnk7XG4gICAgfVxuICAgIGVsLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgYHRyYW5zbGF0ZSgke3h9LCAke3l9KWApO1xuICB9XG4gIGlmIChlZGdlLnN0YXJ0TGFiZWxSaWdodCkge1xuICAgIGNvbnN0IGVsID0gdGVybWluYWxMYWJlbHNbZWRnZS5pZF0uc3RhcnRSaWdodDtcbiAgICBsZXQgeCA9IGVkZ2UueDtcbiAgICBsZXQgeSA9IGVkZ2UueTtcbiAgICBpZiAocGF0aCkge1xuICAgICAgY29uc3QgcG9zID0gdXRpbHNfZGVmYXVsdC5jYWxjVGVybWluYWxMYWJlbFBvc2l0aW9uKFxuICAgICAgICBlZGdlLmFycm93VHlwZVN0YXJ0ID8gMTAgOiAwLFxuICAgICAgICBcInN0YXJ0X3JpZ2h0XCIsXG4gICAgICAgIHBhdGhcbiAgICAgICk7XG4gICAgICB4ID0gcG9zLng7XG4gICAgICB5ID0gcG9zLnk7XG4gICAgfVxuICAgIGVsLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgYHRyYW5zbGF0ZSgke3h9LCAke3l9KWApO1xuICB9XG4gIGlmIChlZGdlLmVuZExhYmVsTGVmdCkge1xuICAgIGNvbnN0IGVsID0gdGVybWluYWxMYWJlbHNbZWRnZS5pZF0uZW5kTGVmdDtcbiAgICBsZXQgeCA9IGVkZ2UueDtcbiAgICBsZXQgeSA9IGVkZ2UueTtcbiAgICBpZiAocGF0aCkge1xuICAgICAgY29uc3QgcG9zID0gdXRpbHNfZGVmYXVsdC5jYWxjVGVybWluYWxMYWJlbFBvc2l0aW9uKGVkZ2UuYXJyb3dUeXBlRW5kID8gMTAgOiAwLCBcImVuZF9sZWZ0XCIsIHBhdGgpO1xuICAgICAgeCA9IHBvcy54O1xuICAgICAgeSA9IHBvcy55O1xuICAgIH1cbiAgICBlbC5hdHRyKFwidHJhbnNmb3JtXCIsIGB0cmFuc2xhdGUoJHt4fSwgJHt5fSlgKTtcbiAgfVxuICBpZiAoZWRnZS5lbmRMYWJlbFJpZ2h0KSB7XG4gICAgY29uc3QgZWwgPSB0ZXJtaW5hbExhYmVsc1tlZGdlLmlkXS5lbmRSaWdodDtcbiAgICBsZXQgeCA9IGVkZ2UueDtcbiAgICBsZXQgeSA9IGVkZ2UueTtcbiAgICBpZiAocGF0aCkge1xuICAgICAgY29uc3QgcG9zID0gdXRpbHNfZGVmYXVsdC5jYWxjVGVybWluYWxMYWJlbFBvc2l0aW9uKGVkZ2UuYXJyb3dUeXBlRW5kID8gMTAgOiAwLCBcImVuZF9yaWdodFwiLCBwYXRoKTtcbiAgICAgIHggPSBwb3MueDtcbiAgICAgIHkgPSBwb3MueTtcbiAgICB9XG4gICAgZWwuYXR0cihcInRyYW5zZm9ybVwiLCBgdHJhbnNsYXRlKCR7eH0sICR7eX0pYCk7XG4gIH1cbn0sIFwicG9zaXRpb25FZGdlTGFiZWxcIik7XG52YXIgb3V0c2lkZU5vZGUgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChub2RlLCBwb2ludDIpID0+IHtcbiAgY29uc3QgeCA9IG5vZGUueDtcbiAgY29uc3QgeSA9IG5vZGUueTtcbiAgY29uc3QgZHggPSBNYXRoLmFicyhwb2ludDIueCAtIHgpO1xuICBjb25zdCBkeSA9IE1hdGguYWJzKHBvaW50Mi55IC0geSk7XG4gIGNvbnN0IHcgPSBub2RlLndpZHRoIC8gMjtcbiAgY29uc3QgaCA9IG5vZGUuaGVpZ2h0IC8gMjtcbiAgaWYgKGR4ID49IHcgfHwgZHkgPj0gaCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn0sIFwib3V0c2lkZU5vZGVcIik7XG52YXIgaW50ZXJzZWN0aW9uID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgobm9kZSwgb3V0c2lkZVBvaW50LCBpbnNpZGVQb2ludCkgPT4ge1xuICBsb2cuZGVidWcoYGludGVyc2VjdGlvbiBjYWxjIGFiYzg5OlxuICBvdXRzaWRlUG9pbnQ6ICR7SlNPTi5zdHJpbmdpZnkob3V0c2lkZVBvaW50KX1cbiAgaW5zaWRlUG9pbnQgOiAke0pTT04uc3RyaW5naWZ5KGluc2lkZVBvaW50KX1cbiAgbm9kZSAgICAgICAgOiB4OiR7bm9kZS54fSB5OiR7bm9kZS55fSB3OiR7bm9kZS53aWR0aH0gaDoke25vZGUuaGVpZ2h0fWApO1xuICBjb25zdCB4ID0gbm9kZS54O1xuICBjb25zdCB5ID0gbm9kZS55O1xuICBjb25zdCBkeCA9IE1hdGguYWJzKHggLSBpbnNpZGVQb2ludC54KTtcbiAgY29uc3QgdyA9IG5vZGUud2lkdGggLyAyO1xuICBsZXQgciA9IGluc2lkZVBvaW50LnggPCBvdXRzaWRlUG9pbnQueCA/IHcgLSBkeCA6IHcgKyBkeDtcbiAgY29uc3QgaCA9IG5vZGUuaGVpZ2h0IC8gMjtcbiAgY29uc3QgUSA9IE1hdGguYWJzKG91dHNpZGVQb2ludC55IC0gaW5zaWRlUG9pbnQueSk7XG4gIGNvbnN0IFIgPSBNYXRoLmFicyhvdXRzaWRlUG9pbnQueCAtIGluc2lkZVBvaW50LngpO1xuICBpZiAoTWF0aC5hYnMoeSAtIG91dHNpZGVQb2ludC55KSAqIHcgPiBNYXRoLmFicyh4IC0gb3V0c2lkZVBvaW50LngpICogaCkge1xuICAgIGxldCBxID0gaW5zaWRlUG9pbnQueSA8IG91dHNpZGVQb2ludC55ID8gb3V0c2lkZVBvaW50LnkgLSBoIC0geSA6IHkgLSBoIC0gb3V0c2lkZVBvaW50Lnk7XG4gICAgciA9IFIgKiBxIC8gUTtcbiAgICBjb25zdCByZXMgPSB7XG4gICAgICB4OiBpbnNpZGVQb2ludC54IDwgb3V0c2lkZVBvaW50LnggPyBpbnNpZGVQb2ludC54ICsgciA6IGluc2lkZVBvaW50LnggLSBSICsgcixcbiAgICAgIHk6IGluc2lkZVBvaW50LnkgPCBvdXRzaWRlUG9pbnQueSA/IGluc2lkZVBvaW50LnkgKyBRIC0gcSA6IGluc2lkZVBvaW50LnkgLSBRICsgcVxuICAgIH07XG4gICAgaWYgKHIgPT09IDApIHtcbiAgICAgIHJlcy54ID0gb3V0c2lkZVBvaW50Lng7XG4gICAgICByZXMueSA9IG91dHNpZGVQb2ludC55O1xuICAgIH1cbiAgICBpZiAoUiA9PT0gMCkge1xuICAgICAgcmVzLnggPSBvdXRzaWRlUG9pbnQueDtcbiAgICB9XG4gICAgaWYgKFEgPT09IDApIHtcbiAgICAgIHJlcy55ID0gb3V0c2lkZVBvaW50Lnk7XG4gICAgfVxuICAgIGxvZy5kZWJ1ZyhgYWJjODkgdG9wcC9ib3R0IGNhbGMsIFEgJHtRfSwgcSAke3F9LCBSICR7Un0sIHIgJHtyfWAsIHJlcyk7XG4gICAgcmV0dXJuIHJlcztcbiAgfSBlbHNlIHtcbiAgICBpZiAoaW5zaWRlUG9pbnQueCA8IG91dHNpZGVQb2ludC54KSB7XG4gICAgICByID0gb3V0c2lkZVBvaW50LnggLSB3IC0geDtcbiAgICB9IGVsc2Uge1xuICAgICAgciA9IHggLSB3IC0gb3V0c2lkZVBvaW50Lng7XG4gICAgfVxuICAgIGxldCBxID0gUSAqIHIgLyBSO1xuICAgIGxldCBfeCA9IGluc2lkZVBvaW50LnggPCBvdXRzaWRlUG9pbnQueCA/IGluc2lkZVBvaW50LnggKyBSIC0gciA6IGluc2lkZVBvaW50LnggLSBSICsgcjtcbiAgICBsZXQgX3kgPSBpbnNpZGVQb2ludC55IDwgb3V0c2lkZVBvaW50LnkgPyBpbnNpZGVQb2ludC55ICsgcSA6IGluc2lkZVBvaW50LnkgLSBxO1xuICAgIGxvZy5kZWJ1Zyhgc2lkZXMgY2FsYyBhYmM4OSwgUSAke1F9LCBxICR7cX0sIFIgJHtSfSwgciAke3J9YCwgeyBfeCwgX3kgfSk7XG4gICAgaWYgKHIgPT09IDApIHtcbiAgICAgIF94ID0gb3V0c2lkZVBvaW50Lng7XG4gICAgICBfeSA9IG91dHNpZGVQb2ludC55O1xuICAgIH1cbiAgICBpZiAoUiA9PT0gMCkge1xuICAgICAgX3ggPSBvdXRzaWRlUG9pbnQueDtcbiAgICB9XG4gICAgaWYgKFEgPT09IDApIHtcbiAgICAgIF95ID0gb3V0c2lkZVBvaW50Lnk7XG4gICAgfVxuICAgIHJldHVybiB7IHg6IF94LCB5OiBfeSB9O1xuICB9XG59LCBcImludGVyc2VjdGlvblwiKTtcbnZhciBjdXRQYXRoQXRJbnRlcnNlY3QgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChfcG9pbnRzLCBib3VuZGFyeU5vZGUpID0+IHtcbiAgbG9nLmRlYnVnKFwiYWJjODggY3V0UGF0aEF0SW50ZXJzZWN0XCIsIF9wb2ludHMsIGJvdW5kYXJ5Tm9kZSk7XG4gIGxldCBwb2ludHMgPSBbXTtcbiAgbGV0IGxhc3RQb2ludE91dHNpZGUgPSBfcG9pbnRzWzBdO1xuICBsZXQgaXNJbnNpZGUgPSBmYWxzZTtcbiAgX3BvaW50cy5mb3JFYWNoKChwb2ludDIpID0+IHtcbiAgICBpZiAoIW91dHNpZGVOb2RlKGJvdW5kYXJ5Tm9kZSwgcG9pbnQyKSAmJiAhaXNJbnNpZGUpIHtcbiAgICAgIGNvbnN0IGludGVyID0gaW50ZXJzZWN0aW9uKGJvdW5kYXJ5Tm9kZSwgbGFzdFBvaW50T3V0c2lkZSwgcG9pbnQyKTtcbiAgICAgIGxldCBwb2ludFByZXNlbnQgPSBmYWxzZTtcbiAgICAgIHBvaW50cy5mb3JFYWNoKChwKSA9PiB7XG4gICAgICAgIHBvaW50UHJlc2VudCA9IHBvaW50UHJlc2VudCB8fCBwLnggPT09IGludGVyLnggJiYgcC55ID09PSBpbnRlci55O1xuICAgICAgfSk7XG4gICAgICBpZiAoIXBvaW50cy5zb21lKChlKSA9PiBlLnggPT09IGludGVyLnggJiYgZS55ID09PSBpbnRlci55KSkge1xuICAgICAgICBwb2ludHMucHVzaChpbnRlcik7XG4gICAgICB9XG4gICAgICBpc0luc2lkZSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxhc3RQb2ludE91dHNpZGUgPSBwb2ludDI7XG4gICAgICBpZiAoIWlzSW5zaWRlKSB7XG4gICAgICAgIHBvaW50cy5wdXNoKHBvaW50Mik7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHBvaW50cztcbn0sIFwiY3V0UGF0aEF0SW50ZXJzZWN0XCIpO1xudmFyIGluc2VydEVkZ2UgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKGZ1bmN0aW9uKGVsZW0sIGUsIGVkZ2UsIGNsdXN0ZXJEYiwgZGlhZ3JhbVR5cGUsIGdyYXBoLCBpZCkge1xuICBsZXQgcG9pbnRzID0gZWRnZS5wb2ludHM7XG4gIGxvZy5kZWJ1ZyhcImFiYzg4IEluc2VydEVkZ2U6IGVkZ2U9XCIsIGVkZ2UsIFwiZT1cIiwgZSk7XG4gIGxldCBwb2ludHNIYXNDaGFuZ2VkID0gZmFsc2U7XG4gIGNvbnN0IHRhaWwgPSBncmFwaC5ub2RlKGUudik7XG4gIHZhciBoZWFkID0gZ3JhcGgubm9kZShlLncpO1xuICBpZiAoaGVhZD8uaW50ZXJzZWN0ICYmIHRhaWw/LmludGVyc2VjdCkge1xuICAgIHBvaW50cyA9IHBvaW50cy5zbGljZSgxLCBlZGdlLnBvaW50cy5sZW5ndGggLSAxKTtcbiAgICBwb2ludHMudW5zaGlmdCh0YWlsLmludGVyc2VjdChwb2ludHNbMF0pKTtcbiAgICBwb2ludHMucHVzaChoZWFkLmludGVyc2VjdChwb2ludHNbcG9pbnRzLmxlbmd0aCAtIDFdKSk7XG4gIH1cbiAgaWYgKGVkZ2UudG9DbHVzdGVyKSB7XG4gICAgbG9nLmRlYnVnKFwidG8gY2x1c3RlciBhYmM4OFwiLCBjbHVzdGVyRGJbZWRnZS50b0NsdXN0ZXJdKTtcbiAgICBwb2ludHMgPSBjdXRQYXRoQXRJbnRlcnNlY3QoZWRnZS5wb2ludHMsIGNsdXN0ZXJEYltlZGdlLnRvQ2x1c3Rlcl0ubm9kZSk7XG4gICAgcG9pbnRzSGFzQ2hhbmdlZCA9IHRydWU7XG4gIH1cbiAgaWYgKGVkZ2UuZnJvbUNsdXN0ZXIpIHtcbiAgICBsb2cuZGVidWcoXCJmcm9tIGNsdXN0ZXIgYWJjODhcIiwgY2x1c3RlckRiW2VkZ2UuZnJvbUNsdXN0ZXJdKTtcbiAgICBwb2ludHMgPSBjdXRQYXRoQXRJbnRlcnNlY3QocG9pbnRzLnJldmVyc2UoKSwgY2x1c3RlckRiW2VkZ2UuZnJvbUNsdXN0ZXJdLm5vZGUpLnJldmVyc2UoKTtcbiAgICBwb2ludHNIYXNDaGFuZ2VkID0gdHJ1ZTtcbiAgfVxuICBjb25zdCBsaW5lRGF0YSA9IHBvaW50cy5maWx0ZXIoKHApID0+ICFOdW1iZXIuaXNOYU4ocC55KSk7XG4gIGxldCBjdXJ2ZSA9IGN1cnZlQmFzaXM7XG4gIGlmIChlZGdlLmN1cnZlICYmIChkaWFncmFtVHlwZSA9PT0gXCJncmFwaFwiIHx8IGRpYWdyYW1UeXBlID09PSBcImZsb3djaGFydFwiKSkge1xuICAgIGN1cnZlID0gZWRnZS5jdXJ2ZTtcbiAgfVxuICBjb25zdCB7IHgsIHkgfSA9IGdldExpbmVGdW5jdGlvbnNXaXRoT2Zmc2V0KGVkZ2UpO1xuICBjb25zdCBsaW5lRnVuY3Rpb24gPSBsaW5lKCkueCh4KS55KHkpLmN1cnZlKGN1cnZlKTtcbiAgbGV0IHN0cm9rZUNsYXNzZXM7XG4gIHN3aXRjaCAoZWRnZS50aGlja25lc3MpIHtcbiAgICBjYXNlIFwibm9ybWFsXCI6XG4gICAgICBzdHJva2VDbGFzc2VzID0gXCJlZGdlLXRoaWNrbmVzcy1ub3JtYWxcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJ0aGlja1wiOlxuICAgICAgc3Ryb2tlQ2xhc3NlcyA9IFwiZWRnZS10aGlja25lc3MtdGhpY2tcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJpbnZpc2libGVcIjpcbiAgICAgIHN0cm9rZUNsYXNzZXMgPSBcImVkZ2UtdGhpY2tuZXNzLXRoaWNrXCI7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgc3Ryb2tlQ2xhc3NlcyA9IFwiXCI7XG4gIH1cbiAgc3dpdGNoIChlZGdlLnBhdHRlcm4pIHtcbiAgICBjYXNlIFwic29saWRcIjpcbiAgICAgIHN0cm9rZUNsYXNzZXMgKz0gXCIgZWRnZS1wYXR0ZXJuLXNvbGlkXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwiZG90dGVkXCI6XG4gICAgICBzdHJva2VDbGFzc2VzICs9IFwiIGVkZ2UtcGF0dGVybi1kb3R0ZWRcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJkYXNoZWRcIjpcbiAgICAgIHN0cm9rZUNsYXNzZXMgKz0gXCIgZWRnZS1wYXR0ZXJuLWRhc2hlZFwiO1xuICAgICAgYnJlYWs7XG4gIH1cbiAgY29uc3Qgc3ZnUGF0aCA9IGVsZW0uYXBwZW5kKFwicGF0aFwiKS5hdHRyKFwiZFwiLCBsaW5lRnVuY3Rpb24obGluZURhdGEpKS5hdHRyKFwiaWRcIiwgZWRnZS5pZCkuYXR0cihcImNsYXNzXCIsIFwiIFwiICsgc3Ryb2tlQ2xhc3NlcyArIChlZGdlLmNsYXNzZXMgPyBcIiBcIiArIGVkZ2UuY2xhc3NlcyA6IFwiXCIpKS5hdHRyKFwic3R5bGVcIiwgZWRnZS5zdHlsZSk7XG4gIGxldCB1cmwgPSBcIlwiO1xuICBpZiAoZ2V0Q29uZmlnMigpLmZsb3djaGFydC5hcnJvd01hcmtlckFic29sdXRlIHx8IGdldENvbmZpZzIoKS5zdGF0ZS5hcnJvd01hcmtlckFic29sdXRlKSB7XG4gICAgdXJsID0gd2luZG93LmxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgd2luZG93LmxvY2F0aW9uLmhvc3QgKyB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgKyB3aW5kb3cubG9jYXRpb24uc2VhcmNoO1xuICAgIHVybCA9IHVybC5yZXBsYWNlKC9cXCgvZywgXCJcXFxcKFwiKTtcbiAgICB1cmwgPSB1cmwucmVwbGFjZSgvXFwpL2csIFwiXFxcXClcIik7XG4gIH1cbiAgYWRkRWRnZU1hcmtlcnMoc3ZnUGF0aCwgZWRnZSwgdXJsLCBpZCwgZGlhZ3JhbVR5cGUpO1xuICBsZXQgcGF0aHMgPSB7fTtcbiAgaWYgKHBvaW50c0hhc0NoYW5nZWQpIHtcbiAgICBwYXRocy51cGRhdGVkUGF0aCA9IHBvaW50cztcbiAgfVxuICBwYXRocy5vcmlnaW5hbFBhdGggPSBlZGdlLnBvaW50cztcbiAgcmV0dXJuIHBhdGhzO1xufSwgXCJpbnNlcnRFZGdlXCIpO1xuXG4vLyBzcmMvZGFncmUtd3JhcHBlci9ub2Rlcy5qc1xuaW1wb3J0IHsgc2VsZWN0IGFzIHNlbGVjdDQgfSBmcm9tIFwiZDNcIjtcblxuLy8gc3JjL2RhZ3JlLXdyYXBwZXIvYmxvY2tBcnJvd0hlbHBlci50c1xudmFyIGV4cGFuZEFuZERlZHVwbGljYXRlRGlyZWN0aW9ucyA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKGRpcmVjdGlvbnMpID0+IHtcbiAgY29uc3QgdW5pcXVlRGlyZWN0aW9ucyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG4gIGZvciAoY29uc3QgZGlyZWN0aW9uIG9mIGRpcmVjdGlvbnMpIHtcbiAgICBzd2l0Y2ggKGRpcmVjdGlvbikge1xuICAgICAgY2FzZSBcInhcIjpcbiAgICAgICAgdW5pcXVlRGlyZWN0aW9ucy5hZGQoXCJyaWdodFwiKTtcbiAgICAgICAgdW5pcXVlRGlyZWN0aW9ucy5hZGQoXCJsZWZ0XCIpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJ5XCI6XG4gICAgICAgIHVuaXF1ZURpcmVjdGlvbnMuYWRkKFwidXBcIik7XG4gICAgICAgIHVuaXF1ZURpcmVjdGlvbnMuYWRkKFwiZG93blwiKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB1bmlxdWVEaXJlY3Rpb25zLmFkZChkaXJlY3Rpb24pO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHVuaXF1ZURpcmVjdGlvbnM7XG59LCBcImV4cGFuZEFuZERlZHVwbGljYXRlRGlyZWN0aW9uc1wiKTtcbnZhciBnZXRBcnJvd1BvaW50cyA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKGR1cGxpY2F0ZWREaXJlY3Rpb25zLCBiYm94LCBub2RlKSA9PiB7XG4gIGNvbnN0IGRpcmVjdGlvbnMgPSBleHBhbmRBbmREZWR1cGxpY2F0ZURpcmVjdGlvbnMoZHVwbGljYXRlZERpcmVjdGlvbnMpO1xuICBjb25zdCBmID0gMjtcbiAgY29uc3QgaGVpZ2h0ID0gYmJveC5oZWlnaHQgKyAyICogbm9kZS5wYWRkaW5nO1xuICBjb25zdCBtaWRwb2ludCA9IGhlaWdodCAvIGY7XG4gIGNvbnN0IHdpZHRoID0gYmJveC53aWR0aCArIDIgKiBtaWRwb2ludCArIG5vZGUucGFkZGluZztcbiAgY29uc3QgcGFkZGluZzIgPSBub2RlLnBhZGRpbmcgLyAyO1xuICBpZiAoZGlyZWN0aW9ucy5oYXMoXCJyaWdodFwiKSAmJiBkaXJlY3Rpb25zLmhhcyhcImxlZnRcIikgJiYgZGlyZWN0aW9ucy5oYXMoXCJ1cFwiKSAmJiBkaXJlY3Rpb25zLmhhcyhcImRvd25cIikpIHtcbiAgICByZXR1cm4gW1xuICAgICAgLy8gQm90dG9tXG4gICAgICB7IHg6IDAsIHk6IDAgfSxcbiAgICAgIHsgeDogbWlkcG9pbnQsIHk6IDAgfSxcbiAgICAgIHsgeDogd2lkdGggLyAyLCB5OiAyICogcGFkZGluZzIgfSxcbiAgICAgIHsgeDogd2lkdGggLSBtaWRwb2ludCwgeTogMCB9LFxuICAgICAgeyB4OiB3aWR0aCwgeTogMCB9LFxuICAgICAgLy8gUmlnaHRcbiAgICAgIHsgeDogd2lkdGgsIHk6IC1oZWlnaHQgLyAzIH0sXG4gICAgICB7IHg6IHdpZHRoICsgMiAqIHBhZGRpbmcyLCB5OiAtaGVpZ2h0IC8gMiB9LFxuICAgICAgeyB4OiB3aWR0aCwgeTogLTIgKiBoZWlnaHQgLyAzIH0sXG4gICAgICB7IHg6IHdpZHRoLCB5OiAtaGVpZ2h0IH0sXG4gICAgICAvLyBUb3BcbiAgICAgIHsgeDogd2lkdGggLSBtaWRwb2ludCwgeTogLWhlaWdodCB9LFxuICAgICAgeyB4OiB3aWR0aCAvIDIsIHk6IC1oZWlnaHQgLSAyICogcGFkZGluZzIgfSxcbiAgICAgIHsgeDogbWlkcG9pbnQsIHk6IC1oZWlnaHQgfSxcbiAgICAgIC8vIExlZnRcbiAgICAgIHsgeDogMCwgeTogLWhlaWdodCB9LFxuICAgICAgeyB4OiAwLCB5OiAtMiAqIGhlaWdodCAvIDMgfSxcbiAgICAgIHsgeDogLTIgKiBwYWRkaW5nMiwgeTogLWhlaWdodCAvIDIgfSxcbiAgICAgIHsgeDogMCwgeTogLWhlaWdodCAvIDMgfVxuICAgIF07XG4gIH1cbiAgaWYgKGRpcmVjdGlvbnMuaGFzKFwicmlnaHRcIikgJiYgZGlyZWN0aW9ucy5oYXMoXCJsZWZ0XCIpICYmIGRpcmVjdGlvbnMuaGFzKFwidXBcIikpIHtcbiAgICByZXR1cm4gW1xuICAgICAgeyB4OiBtaWRwb2ludCwgeTogMCB9LFxuICAgICAgeyB4OiB3aWR0aCAtIG1pZHBvaW50LCB5OiAwIH0sXG4gICAgICB7IHg6IHdpZHRoLCB5OiAtaGVpZ2h0IC8gMiB9LFxuICAgICAgeyB4OiB3aWR0aCAtIG1pZHBvaW50LCB5OiAtaGVpZ2h0IH0sXG4gICAgICB7IHg6IG1pZHBvaW50LCB5OiAtaGVpZ2h0IH0sXG4gICAgICB7IHg6IDAsIHk6IC1oZWlnaHQgLyAyIH1cbiAgICBdO1xuICB9XG4gIGlmIChkaXJlY3Rpb25zLmhhcyhcInJpZ2h0XCIpICYmIGRpcmVjdGlvbnMuaGFzKFwibGVmdFwiKSAmJiBkaXJlY3Rpb25zLmhhcyhcImRvd25cIikpIHtcbiAgICByZXR1cm4gW1xuICAgICAgeyB4OiAwLCB5OiAwIH0sXG4gICAgICB7IHg6IG1pZHBvaW50LCB5OiAtaGVpZ2h0IH0sXG4gICAgICB7IHg6IHdpZHRoIC0gbWlkcG9pbnQsIHk6IC1oZWlnaHQgfSxcbiAgICAgIHsgeDogd2lkdGgsIHk6IDAgfVxuICAgIF07XG4gIH1cbiAgaWYgKGRpcmVjdGlvbnMuaGFzKFwicmlnaHRcIikgJiYgZGlyZWN0aW9ucy5oYXMoXCJ1cFwiKSAmJiBkaXJlY3Rpb25zLmhhcyhcImRvd25cIikpIHtcbiAgICByZXR1cm4gW1xuICAgICAgeyB4OiAwLCB5OiAwIH0sXG4gICAgICB7IHg6IHdpZHRoLCB5OiAtbWlkcG9pbnQgfSxcbiAgICAgIHsgeDogd2lkdGgsIHk6IC1oZWlnaHQgKyBtaWRwb2ludCB9LFxuICAgICAgeyB4OiAwLCB5OiAtaGVpZ2h0IH1cbiAgICBdO1xuICB9XG4gIGlmIChkaXJlY3Rpb25zLmhhcyhcImxlZnRcIikgJiYgZGlyZWN0aW9ucy5oYXMoXCJ1cFwiKSAmJiBkaXJlY3Rpb25zLmhhcyhcImRvd25cIikpIHtcbiAgICByZXR1cm4gW1xuICAgICAgeyB4OiB3aWR0aCwgeTogMCB9LFxuICAgICAgeyB4OiAwLCB5OiAtbWlkcG9pbnQgfSxcbiAgICAgIHsgeDogMCwgeTogLWhlaWdodCArIG1pZHBvaW50IH0sXG4gICAgICB7IHg6IHdpZHRoLCB5OiAtaGVpZ2h0IH1cbiAgICBdO1xuICB9XG4gIGlmIChkaXJlY3Rpb25zLmhhcyhcInJpZ2h0XCIpICYmIGRpcmVjdGlvbnMuaGFzKFwibGVmdFwiKSkge1xuICAgIHJldHVybiBbXG4gICAgICB7IHg6IG1pZHBvaW50LCB5OiAwIH0sXG4gICAgICB7IHg6IG1pZHBvaW50LCB5OiAtcGFkZGluZzIgfSxcbiAgICAgIHsgeDogd2lkdGggLSBtaWRwb2ludCwgeTogLXBhZGRpbmcyIH0sXG4gICAgICB7IHg6IHdpZHRoIC0gbWlkcG9pbnQsIHk6IDAgfSxcbiAgICAgIHsgeDogd2lkdGgsIHk6IC1oZWlnaHQgLyAyIH0sXG4gICAgICB7IHg6IHdpZHRoIC0gbWlkcG9pbnQsIHk6IC1oZWlnaHQgfSxcbiAgICAgIHsgeDogd2lkdGggLSBtaWRwb2ludCwgeTogLWhlaWdodCArIHBhZGRpbmcyIH0sXG4gICAgICB7IHg6IG1pZHBvaW50LCB5OiAtaGVpZ2h0ICsgcGFkZGluZzIgfSxcbiAgICAgIHsgeDogbWlkcG9pbnQsIHk6IC1oZWlnaHQgfSxcbiAgICAgIHsgeDogMCwgeTogLWhlaWdodCAvIDIgfVxuICAgIF07XG4gIH1cbiAgaWYgKGRpcmVjdGlvbnMuaGFzKFwidXBcIikgJiYgZGlyZWN0aW9ucy5oYXMoXCJkb3duXCIpKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIC8vIEJvdHRvbSBjZW50ZXJcbiAgICAgIHsgeDogd2lkdGggLyAyLCB5OiAwIH0sXG4gICAgICAvLyBMZWZ0IHBvbnQgb2YgYm90dG9tIGFycm93XG4gICAgICB7IHg6IDAsIHk6IC1wYWRkaW5nMiB9LFxuICAgICAgeyB4OiBtaWRwb2ludCwgeTogLXBhZGRpbmcyIH0sXG4gICAgICAvLyBMZWZ0IHRvcCBvdmVyIHZlcnRpY2FsIHNlY3Rpb25cbiAgICAgIHsgeDogbWlkcG9pbnQsIHk6IC1oZWlnaHQgKyBwYWRkaW5nMiB9LFxuICAgICAgeyB4OiAwLCB5OiAtaGVpZ2h0ICsgcGFkZGluZzIgfSxcbiAgICAgIC8vIFRvcCBvZiBhcnJvd1xuICAgICAgeyB4OiB3aWR0aCAvIDIsIHk6IC1oZWlnaHQgfSxcbiAgICAgIHsgeDogd2lkdGgsIHk6IC1oZWlnaHQgKyBwYWRkaW5nMiB9LFxuICAgICAgLy8gVG9wIG9mIHJpZ2h0IHZlcnRpY2FsIGJhclxuICAgICAgeyB4OiB3aWR0aCAtIG1pZHBvaW50LCB5OiAtaGVpZ2h0ICsgcGFkZGluZzIgfSxcbiAgICAgIHsgeDogd2lkdGggLSBtaWRwb2ludCwgeTogLXBhZGRpbmcyIH0sXG4gICAgICB7IHg6IHdpZHRoLCB5OiAtcGFkZGluZzIgfVxuICAgIF07XG4gIH1cbiAgaWYgKGRpcmVjdGlvbnMuaGFzKFwicmlnaHRcIikgJiYgZGlyZWN0aW9ucy5oYXMoXCJ1cFwiKSkge1xuICAgIHJldHVybiBbXG4gICAgICB7IHg6IDAsIHk6IDAgfSxcbiAgICAgIHsgeDogd2lkdGgsIHk6IC1taWRwb2ludCB9LFxuICAgICAgeyB4OiAwLCB5OiAtaGVpZ2h0IH1cbiAgICBdO1xuICB9XG4gIGlmIChkaXJlY3Rpb25zLmhhcyhcInJpZ2h0XCIpICYmIGRpcmVjdGlvbnMuaGFzKFwiZG93blwiKSkge1xuICAgIHJldHVybiBbXG4gICAgICB7IHg6IDAsIHk6IDAgfSxcbiAgICAgIHsgeDogd2lkdGgsIHk6IDAgfSxcbiAgICAgIHsgeDogMCwgeTogLWhlaWdodCB9XG4gICAgXTtcbiAgfVxuICBpZiAoZGlyZWN0aW9ucy5oYXMoXCJsZWZ0XCIpICYmIGRpcmVjdGlvbnMuaGFzKFwidXBcIikpIHtcbiAgICByZXR1cm4gW1xuICAgICAgeyB4OiB3aWR0aCwgeTogMCB9LFxuICAgICAgeyB4OiAwLCB5OiAtbWlkcG9pbnQgfSxcbiAgICAgIHsgeDogd2lkdGgsIHk6IC1oZWlnaHQgfVxuICAgIF07XG4gIH1cbiAgaWYgKGRpcmVjdGlvbnMuaGFzKFwibGVmdFwiKSAmJiBkaXJlY3Rpb25zLmhhcyhcImRvd25cIikpIHtcbiAgICByZXR1cm4gW1xuICAgICAgeyB4OiB3aWR0aCwgeTogMCB9LFxuICAgICAgeyB4OiAwLCB5OiAwIH0sXG4gICAgICB7IHg6IHdpZHRoLCB5OiAtaGVpZ2h0IH1cbiAgICBdO1xuICB9XG4gIGlmIChkaXJlY3Rpb25zLmhhcyhcInJpZ2h0XCIpKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIHsgeDogbWlkcG9pbnQsIHk6IC1wYWRkaW5nMiB9LFxuICAgICAgeyB4OiBtaWRwb2ludCwgeTogLXBhZGRpbmcyIH0sXG4gICAgICB7IHg6IHdpZHRoIC0gbWlkcG9pbnQsIHk6IC1wYWRkaW5nMiB9LFxuICAgICAgeyB4OiB3aWR0aCAtIG1pZHBvaW50LCB5OiAwIH0sXG4gICAgICB7IHg6IHdpZHRoLCB5OiAtaGVpZ2h0IC8gMiB9LFxuICAgICAgeyB4OiB3aWR0aCAtIG1pZHBvaW50LCB5OiAtaGVpZ2h0IH0sXG4gICAgICB7IHg6IHdpZHRoIC0gbWlkcG9pbnQsIHk6IC1oZWlnaHQgKyBwYWRkaW5nMiB9LFxuICAgICAgLy8gdG9wIGxlZnQgY29ybmVyIG9mIGFycm93XG4gICAgICB7IHg6IG1pZHBvaW50LCB5OiAtaGVpZ2h0ICsgcGFkZGluZzIgfSxcbiAgICAgIHsgeDogbWlkcG9pbnQsIHk6IC1oZWlnaHQgKyBwYWRkaW5nMiB9XG4gICAgXTtcbiAgfVxuICBpZiAoZGlyZWN0aW9ucy5oYXMoXCJsZWZ0XCIpKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIHsgeDogbWlkcG9pbnQsIHk6IDAgfSxcbiAgICAgIHsgeDogbWlkcG9pbnQsIHk6IC1wYWRkaW5nMiB9LFxuICAgICAgLy8gVHdvIHBvaW50cywgdGhlIHJpZ2h0IGNvcm5lcnNcbiAgICAgIHsgeDogd2lkdGggLSBtaWRwb2ludCwgeTogLXBhZGRpbmcyIH0sXG4gICAgICB7IHg6IHdpZHRoIC0gbWlkcG9pbnQsIHk6IC1oZWlnaHQgKyBwYWRkaW5nMiB9LFxuICAgICAgeyB4OiBtaWRwb2ludCwgeTogLWhlaWdodCArIHBhZGRpbmcyIH0sXG4gICAgICB7IHg6IG1pZHBvaW50LCB5OiAtaGVpZ2h0IH0sXG4gICAgICB7IHg6IDAsIHk6IC1oZWlnaHQgLyAyIH1cbiAgICBdO1xuICB9XG4gIGlmIChkaXJlY3Rpb25zLmhhcyhcInVwXCIpKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIC8vIEJvdHRvbSBjZW50ZXJcbiAgICAgIHsgeDogbWlkcG9pbnQsIHk6IC1wYWRkaW5nMiB9LFxuICAgICAgLy8gTGVmdCB0b3Agb3ZlciB2ZXJ0aWNhbCBzZWN0aW9uXG4gICAgICB7IHg6IG1pZHBvaW50LCB5OiAtaGVpZ2h0ICsgcGFkZGluZzIgfSxcbiAgICAgIHsgeDogMCwgeTogLWhlaWdodCArIHBhZGRpbmcyIH0sXG4gICAgICAvLyBUb3Agb2YgYXJyb3dcbiAgICAgIHsgeDogd2lkdGggLyAyLCB5OiAtaGVpZ2h0IH0sXG4gICAgICB7IHg6IHdpZHRoLCB5OiAtaGVpZ2h0ICsgcGFkZGluZzIgfSxcbiAgICAgIC8vIFRvcCBvZiByaWdodCB2ZXJ0aWNhbCBiYXJcbiAgICAgIHsgeDogd2lkdGggLSBtaWRwb2ludCwgeTogLWhlaWdodCArIHBhZGRpbmcyIH0sXG4gICAgICB7IHg6IHdpZHRoIC0gbWlkcG9pbnQsIHk6IC1wYWRkaW5nMiB9XG4gICAgXTtcbiAgfVxuICBpZiAoZGlyZWN0aW9ucy5oYXMoXCJkb3duXCIpKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIC8vIEJvdHRvbSBjZW50ZXJcbiAgICAgIHsgeDogd2lkdGggLyAyLCB5OiAwIH0sXG4gICAgICAvLyBMZWZ0IHBvbnQgb2YgYm90dG9tIGFycm93XG4gICAgICB7IHg6IDAsIHk6IC1wYWRkaW5nMiB9LFxuICAgICAgeyB4OiBtaWRwb2ludCwgeTogLXBhZGRpbmcyIH0sXG4gICAgICAvLyBMZWZ0IHRvcCBvdmVyIHZlcnRpY2FsIHNlY3Rpb25cbiAgICAgIHsgeDogbWlkcG9pbnQsIHk6IC1oZWlnaHQgKyBwYWRkaW5nMiB9LFxuICAgICAgeyB4OiB3aWR0aCAtIG1pZHBvaW50LCB5OiAtaGVpZ2h0ICsgcGFkZGluZzIgfSxcbiAgICAgIHsgeDogd2lkdGggLSBtaWRwb2ludCwgeTogLXBhZGRpbmcyIH0sXG4gICAgICB7IHg6IHdpZHRoLCB5OiAtcGFkZGluZzIgfVxuICAgIF07XG4gIH1cbiAgcmV0dXJuIFt7IHg6IDAsIHk6IDAgfV07XG59LCBcImdldEFycm93UG9pbnRzXCIpO1xuXG4vLyBzcmMvZGFncmUtd3JhcHBlci9pbnRlcnNlY3QvaW50ZXJzZWN0LW5vZGUuanNcbmZ1bmN0aW9uIGludGVyc2VjdE5vZGUobm9kZSwgcG9pbnQyKSB7XG4gIHJldHVybiBub2RlLmludGVyc2VjdChwb2ludDIpO1xufVxuX19uYW1lKGludGVyc2VjdE5vZGUsIFwiaW50ZXJzZWN0Tm9kZVwiKTtcbnZhciBpbnRlcnNlY3Rfbm9kZV9kZWZhdWx0ID0gaW50ZXJzZWN0Tm9kZTtcblxuLy8gc3JjL2RhZ3JlLXdyYXBwZXIvaW50ZXJzZWN0L2ludGVyc2VjdC1lbGxpcHNlLmpzXG5mdW5jdGlvbiBpbnRlcnNlY3RFbGxpcHNlKG5vZGUsIHJ4LCByeSwgcG9pbnQyKSB7XG4gIHZhciBjeCA9IG5vZGUueDtcbiAgdmFyIGN5ID0gbm9kZS55O1xuICB2YXIgcHggPSBjeCAtIHBvaW50Mi54O1xuICB2YXIgcHkgPSBjeSAtIHBvaW50Mi55O1xuICB2YXIgZGV0ID0gTWF0aC5zcXJ0KHJ4ICogcnggKiBweSAqIHB5ICsgcnkgKiByeSAqIHB4ICogcHgpO1xuICB2YXIgZHggPSBNYXRoLmFicyhyeCAqIHJ5ICogcHggLyBkZXQpO1xuICBpZiAocG9pbnQyLnggPCBjeCkge1xuICAgIGR4ID0gLWR4O1xuICB9XG4gIHZhciBkeSA9IE1hdGguYWJzKHJ4ICogcnkgKiBweSAvIGRldCk7XG4gIGlmIChwb2ludDIueSA8IGN5KSB7XG4gICAgZHkgPSAtZHk7XG4gIH1cbiAgcmV0dXJuIHsgeDogY3ggKyBkeCwgeTogY3kgKyBkeSB9O1xufVxuX19uYW1lKGludGVyc2VjdEVsbGlwc2UsIFwiaW50ZXJzZWN0RWxsaXBzZVwiKTtcbnZhciBpbnRlcnNlY3RfZWxsaXBzZV9kZWZhdWx0ID0gaW50ZXJzZWN0RWxsaXBzZTtcblxuLy8gc3JjL2RhZ3JlLXdyYXBwZXIvaW50ZXJzZWN0L2ludGVyc2VjdC1jaXJjbGUuanNcbmZ1bmN0aW9uIGludGVyc2VjdENpcmNsZShub2RlLCByeCwgcG9pbnQyKSB7XG4gIHJldHVybiBpbnRlcnNlY3RfZWxsaXBzZV9kZWZhdWx0KG5vZGUsIHJ4LCByeCwgcG9pbnQyKTtcbn1cbl9fbmFtZShpbnRlcnNlY3RDaXJjbGUsIFwiaW50ZXJzZWN0Q2lyY2xlXCIpO1xudmFyIGludGVyc2VjdF9jaXJjbGVfZGVmYXVsdCA9IGludGVyc2VjdENpcmNsZTtcblxuLy8gc3JjL2RhZ3JlLXdyYXBwZXIvaW50ZXJzZWN0L2ludGVyc2VjdC1saW5lLmpzXG5mdW5jdGlvbiBpbnRlcnNlY3RMaW5lKHAxLCBwMiwgcTEsIHEyKSB7XG4gIHZhciBhMSwgYTIsIGIxLCBiMiwgYzEsIGMyO1xuICB2YXIgcjEsIHIyLCByMywgcjQ7XG4gIHZhciBkZW5vbSwgb2Zmc2V0LCBudW07XG4gIHZhciB4LCB5O1xuICBhMSA9IHAyLnkgLSBwMS55O1xuICBiMSA9IHAxLnggLSBwMi54O1xuICBjMSA9IHAyLnggKiBwMS55IC0gcDEueCAqIHAyLnk7XG4gIHIzID0gYTEgKiBxMS54ICsgYjEgKiBxMS55ICsgYzE7XG4gIHI0ID0gYTEgKiBxMi54ICsgYjEgKiBxMi55ICsgYzE7XG4gIGlmIChyMyAhPT0gMCAmJiByNCAhPT0gMCAmJiBzYW1lU2lnbihyMywgcjQpKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGEyID0gcTIueSAtIHExLnk7XG4gIGIyID0gcTEueCAtIHEyLng7XG4gIGMyID0gcTIueCAqIHExLnkgLSBxMS54ICogcTIueTtcbiAgcjEgPSBhMiAqIHAxLnggKyBiMiAqIHAxLnkgKyBjMjtcbiAgcjIgPSBhMiAqIHAyLnggKyBiMiAqIHAyLnkgKyBjMjtcbiAgaWYgKHIxICE9PSAwICYmIHIyICE9PSAwICYmIHNhbWVTaWduKHIxLCByMikpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgZGVub20gPSBhMSAqIGIyIC0gYTIgKiBiMTtcbiAgaWYgKGRlbm9tID09PSAwKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIG9mZnNldCA9IE1hdGguYWJzKGRlbm9tIC8gMik7XG4gIG51bSA9IGIxICogYzIgLSBiMiAqIGMxO1xuICB4ID0gbnVtIDwgMCA/IChudW0gLSBvZmZzZXQpIC8gZGVub20gOiAobnVtICsgb2Zmc2V0KSAvIGRlbm9tO1xuICBudW0gPSBhMiAqIGMxIC0gYTEgKiBjMjtcbiAgeSA9IG51bSA8IDAgPyAobnVtIC0gb2Zmc2V0KSAvIGRlbm9tIDogKG51bSArIG9mZnNldCkgLyBkZW5vbTtcbiAgcmV0dXJuIHsgeCwgeSB9O1xufVxuX19uYW1lKGludGVyc2VjdExpbmUsIFwiaW50ZXJzZWN0TGluZVwiKTtcbmZ1bmN0aW9uIHNhbWVTaWduKHIxLCByMikge1xuICByZXR1cm4gcjEgKiByMiA+IDA7XG59XG5fX25hbWUoc2FtZVNpZ24sIFwic2FtZVNpZ25cIik7XG52YXIgaW50ZXJzZWN0X2xpbmVfZGVmYXVsdCA9IGludGVyc2VjdExpbmU7XG5cbi8vIHNyYy9kYWdyZS13cmFwcGVyL2ludGVyc2VjdC9pbnRlcnNlY3QtcG9seWdvbi5qc1xudmFyIGludGVyc2VjdF9wb2x5Z29uX2RlZmF1bHQgPSBpbnRlcnNlY3RQb2x5Z29uO1xuZnVuY3Rpb24gaW50ZXJzZWN0UG9seWdvbihub2RlLCBwb2x5UG9pbnRzLCBwb2ludDIpIHtcbiAgdmFyIHgxID0gbm9kZS54O1xuICB2YXIgeTEgPSBub2RlLnk7XG4gIHZhciBpbnRlcnNlY3Rpb25zID0gW107XG4gIHZhciBtaW5YID0gTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZO1xuICB2YXIgbWluWSA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTtcbiAgaWYgKHR5cGVvZiBwb2x5UG9pbnRzLmZvckVhY2ggPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHBvbHlQb2ludHMuZm9yRWFjaChmdW5jdGlvbihlbnRyeSkge1xuICAgICAgbWluWCA9IE1hdGgubWluKG1pblgsIGVudHJ5LngpO1xuICAgICAgbWluWSA9IE1hdGgubWluKG1pblksIGVudHJ5LnkpO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG1pblggPSBNYXRoLm1pbihtaW5YLCBwb2x5UG9pbnRzLngpO1xuICAgIG1pblkgPSBNYXRoLm1pbihtaW5ZLCBwb2x5UG9pbnRzLnkpO1xuICB9XG4gIHZhciBsZWZ0ID0geDEgLSBub2RlLndpZHRoIC8gMiAtIG1pblg7XG4gIHZhciB0b3AgPSB5MSAtIG5vZGUuaGVpZ2h0IC8gMiAtIG1pblk7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcG9seVBvaW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBwMSA9IHBvbHlQb2ludHNbaV07XG4gICAgdmFyIHAyID0gcG9seVBvaW50c1tpIDwgcG9seVBvaW50cy5sZW5ndGggLSAxID8gaSArIDEgOiAwXTtcbiAgICB2YXIgaW50ZXJzZWN0ID0gaW50ZXJzZWN0X2xpbmVfZGVmYXVsdChcbiAgICAgIG5vZGUsXG4gICAgICBwb2ludDIsXG4gICAgICB7IHg6IGxlZnQgKyBwMS54LCB5OiB0b3AgKyBwMS55IH0sXG4gICAgICB7IHg6IGxlZnQgKyBwMi54LCB5OiB0b3AgKyBwMi55IH1cbiAgICApO1xuICAgIGlmIChpbnRlcnNlY3QpIHtcbiAgICAgIGludGVyc2VjdGlvbnMucHVzaChpbnRlcnNlY3QpO1xuICAgIH1cbiAgfVxuICBpZiAoIWludGVyc2VjdGlvbnMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIG5vZGU7XG4gIH1cbiAgaWYgKGludGVyc2VjdGlvbnMubGVuZ3RoID4gMSkge1xuICAgIGludGVyc2VjdGlvbnMuc29ydChmdW5jdGlvbihwLCBxKSB7XG4gICAgICB2YXIgcGR4ID0gcC54IC0gcG9pbnQyLng7XG4gICAgICB2YXIgcGR5ID0gcC55IC0gcG9pbnQyLnk7XG4gICAgICB2YXIgZGlzdHAgPSBNYXRoLnNxcnQocGR4ICogcGR4ICsgcGR5ICogcGR5KTtcbiAgICAgIHZhciBxZHggPSBxLnggLSBwb2ludDIueDtcbiAgICAgIHZhciBxZHkgPSBxLnkgLSBwb2ludDIueTtcbiAgICAgIHZhciBkaXN0cSA9IE1hdGguc3FydChxZHggKiBxZHggKyBxZHkgKiBxZHkpO1xuICAgICAgcmV0dXJuIGRpc3RwIDwgZGlzdHEgPyAtMSA6IGRpc3RwID09PSBkaXN0cSA/IDAgOiAxO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiBpbnRlcnNlY3Rpb25zWzBdO1xufVxuX19uYW1lKGludGVyc2VjdFBvbHlnb24sIFwiaW50ZXJzZWN0UG9seWdvblwiKTtcblxuLy8gc3JjL2RhZ3JlLXdyYXBwZXIvaW50ZXJzZWN0L2ludGVyc2VjdC1yZWN0LmpzXG52YXIgaW50ZXJzZWN0UmVjdCA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKG5vZGUsIHBvaW50MikgPT4ge1xuICB2YXIgeCA9IG5vZGUueDtcbiAgdmFyIHkgPSBub2RlLnk7XG4gIHZhciBkeCA9IHBvaW50Mi54IC0geDtcbiAgdmFyIGR5ID0gcG9pbnQyLnkgLSB5O1xuICB2YXIgdyA9IG5vZGUud2lkdGggLyAyO1xuICB2YXIgaCA9IG5vZGUuaGVpZ2h0IC8gMjtcbiAgdmFyIHN4LCBzeTtcbiAgaWYgKE1hdGguYWJzKGR5KSAqIHcgPiBNYXRoLmFicyhkeCkgKiBoKSB7XG4gICAgaWYgKGR5IDwgMCkge1xuICAgICAgaCA9IC1oO1xuICAgIH1cbiAgICBzeCA9IGR5ID09PSAwID8gMCA6IGggKiBkeCAvIGR5O1xuICAgIHN5ID0gaDtcbiAgfSBlbHNlIHtcbiAgICBpZiAoZHggPCAwKSB7XG4gICAgICB3ID0gLXc7XG4gICAgfVxuICAgIHN4ID0gdztcbiAgICBzeSA9IGR4ID09PSAwID8gMCA6IHcgKiBkeSAvIGR4O1xuICB9XG4gIHJldHVybiB7IHg6IHggKyBzeCwgeTogeSArIHN5IH07XG59LCBcImludGVyc2VjdFJlY3RcIik7XG52YXIgaW50ZXJzZWN0X3JlY3RfZGVmYXVsdCA9IGludGVyc2VjdFJlY3Q7XG5cbi8vIHNyYy9kYWdyZS13cmFwcGVyL2ludGVyc2VjdC9pbmRleC5qc1xudmFyIGludGVyc2VjdF9kZWZhdWx0ID0ge1xuICBub2RlOiBpbnRlcnNlY3Rfbm9kZV9kZWZhdWx0LFxuICBjaXJjbGU6IGludGVyc2VjdF9jaXJjbGVfZGVmYXVsdCxcbiAgZWxsaXBzZTogaW50ZXJzZWN0X2VsbGlwc2VfZGVmYXVsdCxcbiAgcG9seWdvbjogaW50ZXJzZWN0X3BvbHlnb25fZGVmYXVsdCxcbiAgcmVjdDogaW50ZXJzZWN0X3JlY3RfZGVmYXVsdFxufTtcblxuLy8gc3JjL2RhZ3JlLXdyYXBwZXIvc2hhcGVzL3V0aWwuanNcbmltcG9ydCB7IHNlbGVjdCBhcyBzZWxlY3QzIH0gZnJvbSBcImQzXCI7XG52YXIgbGFiZWxIZWxwZXIgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKGFzeW5jIChwYXJlbnQsIG5vZGUsIF9jbGFzc2VzLCBpc05vZGUpID0+IHtcbiAgY29uc3QgY29uZmlnMiA9IGdldENvbmZpZzIoKTtcbiAgbGV0IGNsYXNzZXMyO1xuICBjb25zdCB1c2VIdG1sTGFiZWxzID0gbm9kZS51c2VIdG1sTGFiZWxzIHx8IGV2YWx1YXRlKGNvbmZpZzIuZmxvd2NoYXJ0Lmh0bWxMYWJlbHMpO1xuICBpZiAoIV9jbGFzc2VzKSB7XG4gICAgY2xhc3NlczIgPSBcIm5vZGUgZGVmYXVsdFwiO1xuICB9IGVsc2Uge1xuICAgIGNsYXNzZXMyID0gX2NsYXNzZXM7XG4gIH1cbiAgY29uc3Qgc2hhcGVTdmcgPSBwYXJlbnQuaW5zZXJ0KFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgY2xhc3NlczIpLmF0dHIoXCJpZFwiLCBub2RlLmRvbUlkIHx8IG5vZGUuaWQpO1xuICBjb25zdCBsYWJlbCA9IHNoYXBlU3ZnLmluc2VydChcImdcIikuYXR0cihcImNsYXNzXCIsIFwibGFiZWxcIikuYXR0cihcInN0eWxlXCIsIG5vZGUubGFiZWxTdHlsZSk7XG4gIGxldCBsYWJlbFRleHQ7XG4gIGlmIChub2RlLmxhYmVsVGV4dCA9PT0gdm9pZCAwKSB7XG4gICAgbGFiZWxUZXh0ID0gXCJcIjtcbiAgfSBlbHNlIHtcbiAgICBsYWJlbFRleHQgPSB0eXBlb2Ygbm9kZS5sYWJlbFRleHQgPT09IFwic3RyaW5nXCIgPyBub2RlLmxhYmVsVGV4dCA6IG5vZGUubGFiZWxUZXh0WzBdO1xuICB9XG4gIGNvbnN0IHRleHROb2RlID0gbGFiZWwubm9kZSgpO1xuICBsZXQgdGV4dDtcbiAgaWYgKG5vZGUubGFiZWxUeXBlID09PSBcIm1hcmtkb3duXCIpIHtcbiAgICB0ZXh0ID0gY3JlYXRlVGV4dChcbiAgICAgIGxhYmVsLFxuICAgICAgc2FuaXRpemVUZXh0KGRlY29kZUVudGl0aWVzKGxhYmVsVGV4dCksIGNvbmZpZzIpLFxuICAgICAge1xuICAgICAgICB1c2VIdG1sTGFiZWxzLFxuICAgICAgICB3aWR0aDogbm9kZS53aWR0aCB8fCBjb25maWcyLmZsb3djaGFydC53cmFwcGluZ1dpZHRoLFxuICAgICAgICBjbGFzc2VzOiBcIm1hcmtkb3duLW5vZGUtbGFiZWxcIlxuICAgICAgfSxcbiAgICAgIGNvbmZpZzJcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIHRleHQgPSB0ZXh0Tm9kZS5hcHBlbmRDaGlsZChcbiAgICAgIGNyZWF0ZUxhYmVsX2RlZmF1bHQoc2FuaXRpemVUZXh0KGRlY29kZUVudGl0aWVzKGxhYmVsVGV4dCksIGNvbmZpZzIpLCBub2RlLmxhYmVsU3R5bGUsIGZhbHNlLCBpc05vZGUpXG4gICAgKTtcbiAgfVxuICBsZXQgYmJveCA9IHRleHQuZ2V0QkJveCgpO1xuICBjb25zdCBoYWxmUGFkZGluZyA9IG5vZGUucGFkZGluZyAvIDI7XG4gIGlmIChldmFsdWF0ZShjb25maWcyLmZsb3djaGFydC5odG1sTGFiZWxzKSkge1xuICAgIGNvbnN0IGRpdiA9IHRleHQuY2hpbGRyZW5bMF07XG4gICAgY29uc3QgZHYgPSBzZWxlY3QzKHRleHQpO1xuICAgIGNvbnN0IGltYWdlcyA9IGRpdi5nZXRFbGVtZW50c0J5VGFnTmFtZShcImltZ1wiKTtcbiAgICBpZiAoaW1hZ2VzKSB7XG4gICAgICBjb25zdCBub0ltZ1RleHQgPSBsYWJlbFRleHQucmVwbGFjZSgvPGltZ1tePl0qPi9nLCBcIlwiKS50cmltKCkgPT09IFwiXCI7XG4gICAgICBhd2FpdCBQcm9taXNlLmFsbChcbiAgICAgICAgWy4uLmltYWdlc10ubWFwKFxuICAgICAgICAgIChpbWcpID0+IG5ldyBQcm9taXNlKChyZXMpID0+IHtcbiAgICAgICAgICAgIGZ1bmN0aW9uIHNldHVwSW1hZ2UoKSB7XG4gICAgICAgICAgICAgIGltZy5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gICAgICAgICAgICAgIGltZy5zdHlsZS5mbGV4RGlyZWN0aW9uID0gXCJjb2x1bW5cIjtcbiAgICAgICAgICAgICAgaWYgKG5vSW1nVGV4dCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGJvZHlGb250U2l6ZSA9IGNvbmZpZzIuZm9udFNpemUgPyBjb25maWcyLmZvbnRTaXplIDogd2luZG93LmdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuYm9keSkuZm9udFNpemU7XG4gICAgICAgICAgICAgICAgY29uc3QgZW5sYXJnaW5nRmFjdG9yID0gNTtcbiAgICAgICAgICAgICAgICBjb25zdCB3aWR0aCA9IHBhcnNlSW50KGJvZHlGb250U2l6ZSwgMTApICogZW5sYXJnaW5nRmFjdG9yICsgXCJweFwiO1xuICAgICAgICAgICAgICAgIGltZy5zdHlsZS5taW5XaWR0aCA9IHdpZHRoO1xuICAgICAgICAgICAgICAgIGltZy5zdHlsZS5tYXhXaWR0aCA9IHdpZHRoO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGltZy5zdHlsZS53aWR0aCA9IFwiMTAwJVwiO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJlcyhpbWcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX19uYW1lKHNldHVwSW1hZ2UsIFwic2V0dXBJbWFnZVwiKTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICBpZiAoaW1nLmNvbXBsZXRlKSB7XG4gICAgICAgICAgICAgICAgc2V0dXBJbWFnZSgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGltZy5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwgc2V0dXBJbWFnZSk7XG4gICAgICAgICAgICBpbWcuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgc2V0dXBJbWFnZSk7XG4gICAgICAgICAgfSlcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9XG4gICAgYmJveCA9IGRpdi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBkdi5hdHRyKFwid2lkdGhcIiwgYmJveC53aWR0aCk7XG4gICAgZHYuYXR0cihcImhlaWdodFwiLCBiYm94LmhlaWdodCk7XG4gIH1cbiAgaWYgKHVzZUh0bWxMYWJlbHMpIHtcbiAgICBsYWJlbC5hdHRyKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKFwiICsgLWJib3gud2lkdGggLyAyICsgXCIsIFwiICsgLWJib3guaGVpZ2h0IC8gMiArIFwiKVwiKTtcbiAgfSBlbHNlIHtcbiAgICBsYWJlbC5hdHRyKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKDAsIFwiICsgLWJib3guaGVpZ2h0IC8gMiArIFwiKVwiKTtcbiAgfVxuICBpZiAobm9kZS5jZW50ZXJMYWJlbCkge1xuICAgIGxhYmVsLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgXCJ0cmFuc2xhdGUoXCIgKyAtYmJveC53aWR0aCAvIDIgKyBcIiwgXCIgKyAtYmJveC5oZWlnaHQgLyAyICsgXCIpXCIpO1xuICB9XG4gIGxhYmVsLmluc2VydChcInJlY3RcIiwgXCI6Zmlyc3QtY2hpbGRcIik7XG4gIHJldHVybiB7IHNoYXBlU3ZnLCBiYm94LCBoYWxmUGFkZGluZywgbGFiZWwgfTtcbn0sIFwibGFiZWxIZWxwZXJcIik7XG52YXIgdXBkYXRlTm9kZUJvdW5kcyA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKG5vZGUsIGVsZW1lbnQpID0+IHtcbiAgY29uc3QgYmJveCA9IGVsZW1lbnQubm9kZSgpLmdldEJCb3goKTtcbiAgbm9kZS53aWR0aCA9IGJib3gud2lkdGg7XG4gIG5vZGUuaGVpZ2h0ID0gYmJveC5oZWlnaHQ7XG59LCBcInVwZGF0ZU5vZGVCb3VuZHNcIik7XG5mdW5jdGlvbiBpbnNlcnRQb2x5Z29uU2hhcGUocGFyZW50LCB3LCBoLCBwb2ludHMpIHtcbiAgcmV0dXJuIHBhcmVudC5pbnNlcnQoXCJwb2x5Z29uXCIsIFwiOmZpcnN0LWNoaWxkXCIpLmF0dHIoXG4gICAgXCJwb2ludHNcIixcbiAgICBwb2ludHMubWFwKGZ1bmN0aW9uKGQpIHtcbiAgICAgIHJldHVybiBkLnggKyBcIixcIiArIGQueTtcbiAgICB9KS5qb2luKFwiIFwiKVxuICApLmF0dHIoXCJjbGFzc1wiLCBcImxhYmVsLWNvbnRhaW5lclwiKS5hdHRyKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKFwiICsgLXcgLyAyICsgXCIsXCIgKyBoIC8gMiArIFwiKVwiKTtcbn1cbl9fbmFtZShpbnNlcnRQb2x5Z29uU2hhcGUsIFwiaW5zZXJ0UG9seWdvblNoYXBlXCIpO1xuXG4vLyBzcmMvZGFncmUtd3JhcHBlci9zaGFwZXMvbm90ZS5qc1xudmFyIG5vdGUgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKGFzeW5jIChwYXJlbnQsIG5vZGUpID0+IHtcbiAgY29uc3QgdXNlSHRtbExhYmVscyA9IG5vZGUudXNlSHRtbExhYmVscyB8fCBnZXRDb25maWcyKCkuZmxvd2NoYXJ0Lmh0bWxMYWJlbHM7XG4gIGlmICghdXNlSHRtbExhYmVscykge1xuICAgIG5vZGUuY2VudGVyTGFiZWwgPSB0cnVlO1xuICB9XG4gIGNvbnN0IHsgc2hhcGVTdmcsIGJib3gsIGhhbGZQYWRkaW5nIH0gPSBhd2FpdCBsYWJlbEhlbHBlcihcbiAgICBwYXJlbnQsXG4gICAgbm9kZSxcbiAgICBcIm5vZGUgXCIgKyBub2RlLmNsYXNzZXMsXG4gICAgdHJ1ZVxuICApO1xuICBsb2cuaW5mbyhcIkNsYXNzZXMgPSBcIiwgbm9kZS5jbGFzc2VzKTtcbiAgY29uc3QgcmVjdDIgPSBzaGFwZVN2Zy5pbnNlcnQoXCJyZWN0XCIsIFwiOmZpcnN0LWNoaWxkXCIpO1xuICByZWN0Mi5hdHRyKFwicnhcIiwgbm9kZS5yeCkuYXR0cihcInJ5XCIsIG5vZGUucnkpLmF0dHIoXCJ4XCIsIC1iYm94LndpZHRoIC8gMiAtIGhhbGZQYWRkaW5nKS5hdHRyKFwieVwiLCAtYmJveC5oZWlnaHQgLyAyIC0gaGFsZlBhZGRpbmcpLmF0dHIoXCJ3aWR0aFwiLCBiYm94LndpZHRoICsgbm9kZS5wYWRkaW5nKS5hdHRyKFwiaGVpZ2h0XCIsIGJib3guaGVpZ2h0ICsgbm9kZS5wYWRkaW5nKTtcbiAgdXBkYXRlTm9kZUJvdW5kcyhub2RlLCByZWN0Mik7XG4gIG5vZGUuaW50ZXJzZWN0ID0gZnVuY3Rpb24ocG9pbnQyKSB7XG4gICAgcmV0dXJuIGludGVyc2VjdF9kZWZhdWx0LnJlY3Qobm9kZSwgcG9pbnQyKTtcbiAgfTtcbiAgcmV0dXJuIHNoYXBlU3ZnO1xufSwgXCJub3RlXCIpO1xudmFyIG5vdGVfZGVmYXVsdCA9IG5vdGU7XG5cbi8vIHNyYy9kYWdyZS13cmFwcGVyL25vZGVzLmpzXG52YXIgZm9ybWF0Q2xhc3MgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChzdHIpID0+IHtcbiAgaWYgKHN0cikge1xuICAgIHJldHVybiBcIiBcIiArIHN0cjtcbiAgfVxuICByZXR1cm4gXCJcIjtcbn0sIFwiZm9ybWF0Q2xhc3NcIik7XG52YXIgZ2V0Q2xhc3Nlc0Zyb21Ob2RlID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgobm9kZSwgb3RoZXJDbGFzc2VzKSA9PiB7XG4gIHJldHVybiBgJHtvdGhlckNsYXNzZXMgPyBvdGhlckNsYXNzZXMgOiBcIm5vZGUgZGVmYXVsdFwifSR7Zm9ybWF0Q2xhc3Mobm9kZS5jbGFzc2VzKX0gJHtmb3JtYXRDbGFzcyhcbiAgICBub2RlLmNsYXNzXG4gICl9YDtcbn0sIFwiZ2V0Q2xhc3Nlc0Zyb21Ob2RlXCIpO1xudmFyIHF1ZXN0aW9uID0gLyogQF9fUFVSRV9fICovIF9fbmFtZShhc3luYyAocGFyZW50LCBub2RlKSA9PiB7XG4gIGNvbnN0IHsgc2hhcGVTdmcsIGJib3ggfSA9IGF3YWl0IGxhYmVsSGVscGVyKFxuICAgIHBhcmVudCxcbiAgICBub2RlLFxuICAgIGdldENsYXNzZXNGcm9tTm9kZShub2RlLCB2b2lkIDApLFxuICAgIHRydWVcbiAgKTtcbiAgY29uc3QgdyA9IGJib3gud2lkdGggKyBub2RlLnBhZGRpbmc7XG4gIGNvbnN0IGggPSBiYm94LmhlaWdodCArIG5vZGUucGFkZGluZztcbiAgY29uc3QgcyA9IHcgKyBoO1xuICBjb25zdCBwb2ludHMgPSBbXG4gICAgeyB4OiBzIC8gMiwgeTogMCB9LFxuICAgIHsgeDogcywgeTogLXMgLyAyIH0sXG4gICAgeyB4OiBzIC8gMiwgeTogLXMgfSxcbiAgICB7IHg6IDAsIHk6IC1zIC8gMiB9XG4gIF07XG4gIGxvZy5pbmZvKFwiUXVlc3Rpb24gbWFpbiAoQ2lyY2xlKVwiKTtcbiAgY29uc3QgcXVlc3Rpb25FbGVtID0gaW5zZXJ0UG9seWdvblNoYXBlKHNoYXBlU3ZnLCBzLCBzLCBwb2ludHMpO1xuICBxdWVzdGlvbkVsZW0uYXR0cihcInN0eWxlXCIsIG5vZGUuc3R5bGUpO1xuICB1cGRhdGVOb2RlQm91bmRzKG5vZGUsIHF1ZXN0aW9uRWxlbSk7XG4gIG5vZGUuaW50ZXJzZWN0ID0gZnVuY3Rpb24ocG9pbnQyKSB7XG4gICAgbG9nLndhcm4oXCJJbnRlcnNlY3QgY2FsbGVkXCIpO1xuICAgIHJldHVybiBpbnRlcnNlY3RfZGVmYXVsdC5wb2x5Z29uKG5vZGUsIHBvaW50cywgcG9pbnQyKTtcbiAgfTtcbiAgcmV0dXJuIHNoYXBlU3ZnO1xufSwgXCJxdWVzdGlvblwiKTtcbnZhciBjaG9pY2UgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChwYXJlbnQsIG5vZGUpID0+IHtcbiAgY29uc3Qgc2hhcGVTdmcgPSBwYXJlbnQuaW5zZXJ0KFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJub2RlIGRlZmF1bHRcIikuYXR0cihcImlkXCIsIG5vZGUuZG9tSWQgfHwgbm9kZS5pZCk7XG4gIGNvbnN0IHMgPSAyODtcbiAgY29uc3QgcG9pbnRzID0gW1xuICAgIHsgeDogMCwgeTogcyAvIDIgfSxcbiAgICB7IHg6IHMgLyAyLCB5OiAwIH0sXG4gICAgeyB4OiAwLCB5OiAtcyAvIDIgfSxcbiAgICB7IHg6IC1zIC8gMiwgeTogMCB9XG4gIF07XG4gIGNvbnN0IGNob2ljZTIgPSBzaGFwZVN2Zy5pbnNlcnQoXCJwb2x5Z29uXCIsIFwiOmZpcnN0LWNoaWxkXCIpLmF0dHIoXG4gICAgXCJwb2ludHNcIixcbiAgICBwb2ludHMubWFwKGZ1bmN0aW9uKGQpIHtcbiAgICAgIHJldHVybiBkLnggKyBcIixcIiArIGQueTtcbiAgICB9KS5qb2luKFwiIFwiKVxuICApO1xuICBjaG9pY2UyLmF0dHIoXCJjbGFzc1wiLCBcInN0YXRlLXN0YXJ0XCIpLmF0dHIoXCJyXCIsIDcpLmF0dHIoXCJ3aWR0aFwiLCAyOCkuYXR0cihcImhlaWdodFwiLCAyOCk7XG4gIG5vZGUud2lkdGggPSAyODtcbiAgbm9kZS5oZWlnaHQgPSAyODtcbiAgbm9kZS5pbnRlcnNlY3QgPSBmdW5jdGlvbihwb2ludDIpIHtcbiAgICByZXR1cm4gaW50ZXJzZWN0X2RlZmF1bHQuY2lyY2xlKG5vZGUsIDE0LCBwb2ludDIpO1xuICB9O1xuICByZXR1cm4gc2hhcGVTdmc7XG59LCBcImNob2ljZVwiKTtcbnZhciBoZXhhZ29uID0gLyogQF9fUFVSRV9fICovIF9fbmFtZShhc3luYyAocGFyZW50LCBub2RlKSA9PiB7XG4gIGNvbnN0IHsgc2hhcGVTdmcsIGJib3ggfSA9IGF3YWl0IGxhYmVsSGVscGVyKFxuICAgIHBhcmVudCxcbiAgICBub2RlLFxuICAgIGdldENsYXNzZXNGcm9tTm9kZShub2RlLCB2b2lkIDApLFxuICAgIHRydWVcbiAgKTtcbiAgY29uc3QgZiA9IDQ7XG4gIGNvbnN0IGggPSBiYm94LmhlaWdodCArIG5vZGUucGFkZGluZztcbiAgY29uc3QgbSA9IGggLyBmO1xuICBjb25zdCB3ID0gYmJveC53aWR0aCArIDIgKiBtICsgbm9kZS5wYWRkaW5nO1xuICBjb25zdCBwb2ludHMgPSBbXG4gICAgeyB4OiBtLCB5OiAwIH0sXG4gICAgeyB4OiB3IC0gbSwgeTogMCB9LFxuICAgIHsgeDogdywgeTogLWggLyAyIH0sXG4gICAgeyB4OiB3IC0gbSwgeTogLWggfSxcbiAgICB7IHg6IG0sIHk6IC1oIH0sXG4gICAgeyB4OiAwLCB5OiAtaCAvIDIgfVxuICBdO1xuICBjb25zdCBoZXggPSBpbnNlcnRQb2x5Z29uU2hhcGUoc2hhcGVTdmcsIHcsIGgsIHBvaW50cyk7XG4gIGhleC5hdHRyKFwic3R5bGVcIiwgbm9kZS5zdHlsZSk7XG4gIHVwZGF0ZU5vZGVCb3VuZHMobm9kZSwgaGV4KTtcbiAgbm9kZS5pbnRlcnNlY3QgPSBmdW5jdGlvbihwb2ludDIpIHtcbiAgICByZXR1cm4gaW50ZXJzZWN0X2RlZmF1bHQucG9seWdvbihub2RlLCBwb2ludHMsIHBvaW50Mik7XG4gIH07XG4gIHJldHVybiBzaGFwZVN2Zztcbn0sIFwiaGV4YWdvblwiKTtcbnZhciBibG9ja19hcnJvdyA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoYXN5bmMgKHBhcmVudCwgbm9kZSkgPT4ge1xuICBjb25zdCB7IHNoYXBlU3ZnLCBiYm94IH0gPSBhd2FpdCBsYWJlbEhlbHBlcihwYXJlbnQsIG5vZGUsIHZvaWQgMCwgdHJ1ZSk7XG4gIGNvbnN0IGYgPSAyO1xuICBjb25zdCBoID0gYmJveC5oZWlnaHQgKyAyICogbm9kZS5wYWRkaW5nO1xuICBjb25zdCBtID0gaCAvIGY7XG4gIGNvbnN0IHcgPSBiYm94LndpZHRoICsgMiAqIG0gKyBub2RlLnBhZGRpbmc7XG4gIGNvbnN0IHBvaW50cyA9IGdldEFycm93UG9pbnRzKG5vZGUuZGlyZWN0aW9ucywgYmJveCwgbm9kZSk7XG4gIGNvbnN0IGJsb2NrQXJyb3cgPSBpbnNlcnRQb2x5Z29uU2hhcGUoc2hhcGVTdmcsIHcsIGgsIHBvaW50cyk7XG4gIGJsb2NrQXJyb3cuYXR0cihcInN0eWxlXCIsIG5vZGUuc3R5bGUpO1xuICB1cGRhdGVOb2RlQm91bmRzKG5vZGUsIGJsb2NrQXJyb3cpO1xuICBub2RlLmludGVyc2VjdCA9IGZ1bmN0aW9uKHBvaW50Mikge1xuICAgIHJldHVybiBpbnRlcnNlY3RfZGVmYXVsdC5wb2x5Z29uKG5vZGUsIHBvaW50cywgcG9pbnQyKTtcbiAgfTtcbiAgcmV0dXJuIHNoYXBlU3ZnO1xufSwgXCJibG9ja19hcnJvd1wiKTtcbnZhciByZWN0X2xlZnRfaW52X2Fycm93ID0gLyogQF9fUFVSRV9fICovIF9fbmFtZShhc3luYyAocGFyZW50LCBub2RlKSA9PiB7XG4gIGNvbnN0IHsgc2hhcGVTdmcsIGJib3ggfSA9IGF3YWl0IGxhYmVsSGVscGVyKFxuICAgIHBhcmVudCxcbiAgICBub2RlLFxuICAgIGdldENsYXNzZXNGcm9tTm9kZShub2RlLCB2b2lkIDApLFxuICAgIHRydWVcbiAgKTtcbiAgY29uc3QgdyA9IGJib3gud2lkdGggKyBub2RlLnBhZGRpbmc7XG4gIGNvbnN0IGggPSBiYm94LmhlaWdodCArIG5vZGUucGFkZGluZztcbiAgY29uc3QgcG9pbnRzID0gW1xuICAgIHsgeDogLWggLyAyLCB5OiAwIH0sXG4gICAgeyB4OiB3LCB5OiAwIH0sXG4gICAgeyB4OiB3LCB5OiAtaCB9LFxuICAgIHsgeDogLWggLyAyLCB5OiAtaCB9LFxuICAgIHsgeDogMCwgeTogLWggLyAyIH1cbiAgXTtcbiAgY29uc3QgZWwgPSBpbnNlcnRQb2x5Z29uU2hhcGUoc2hhcGVTdmcsIHcsIGgsIHBvaW50cyk7XG4gIGVsLmF0dHIoXCJzdHlsZVwiLCBub2RlLnN0eWxlKTtcbiAgbm9kZS53aWR0aCA9IHcgKyBoO1xuICBub2RlLmhlaWdodCA9IGg7XG4gIG5vZGUuaW50ZXJzZWN0ID0gZnVuY3Rpb24ocG9pbnQyKSB7XG4gICAgcmV0dXJuIGludGVyc2VjdF9kZWZhdWx0LnBvbHlnb24obm9kZSwgcG9pbnRzLCBwb2ludDIpO1xuICB9O1xuICByZXR1cm4gc2hhcGVTdmc7XG59LCBcInJlY3RfbGVmdF9pbnZfYXJyb3dcIik7XG52YXIgbGVhbl9yaWdodCA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoYXN5bmMgKHBhcmVudCwgbm9kZSkgPT4ge1xuICBjb25zdCB7IHNoYXBlU3ZnLCBiYm94IH0gPSBhd2FpdCBsYWJlbEhlbHBlcihwYXJlbnQsIG5vZGUsIGdldENsYXNzZXNGcm9tTm9kZShub2RlKSwgdHJ1ZSk7XG4gIGNvbnN0IHcgPSBiYm94LndpZHRoICsgbm9kZS5wYWRkaW5nO1xuICBjb25zdCBoID0gYmJveC5oZWlnaHQgKyBub2RlLnBhZGRpbmc7XG4gIGNvbnN0IHBvaW50cyA9IFtcbiAgICB7IHg6IC0yICogaCAvIDYsIHk6IDAgfSxcbiAgICB7IHg6IHcgLSBoIC8gNiwgeTogMCB9LFxuICAgIHsgeDogdyArIDIgKiBoIC8gNiwgeTogLWggfSxcbiAgICB7IHg6IGggLyA2LCB5OiAtaCB9XG4gIF07XG4gIGNvbnN0IGVsID0gaW5zZXJ0UG9seWdvblNoYXBlKHNoYXBlU3ZnLCB3LCBoLCBwb2ludHMpO1xuICBlbC5hdHRyKFwic3R5bGVcIiwgbm9kZS5zdHlsZSk7XG4gIHVwZGF0ZU5vZGVCb3VuZHMobm9kZSwgZWwpO1xuICBub2RlLmludGVyc2VjdCA9IGZ1bmN0aW9uKHBvaW50Mikge1xuICAgIHJldHVybiBpbnRlcnNlY3RfZGVmYXVsdC5wb2x5Z29uKG5vZGUsIHBvaW50cywgcG9pbnQyKTtcbiAgfTtcbiAgcmV0dXJuIHNoYXBlU3ZnO1xufSwgXCJsZWFuX3JpZ2h0XCIpO1xudmFyIGxlYW5fbGVmdCA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoYXN5bmMgKHBhcmVudCwgbm9kZSkgPT4ge1xuICBjb25zdCB7IHNoYXBlU3ZnLCBiYm94IH0gPSBhd2FpdCBsYWJlbEhlbHBlcihcbiAgICBwYXJlbnQsXG4gICAgbm9kZSxcbiAgICBnZXRDbGFzc2VzRnJvbU5vZGUobm9kZSwgdm9pZCAwKSxcbiAgICB0cnVlXG4gICk7XG4gIGNvbnN0IHcgPSBiYm94LndpZHRoICsgbm9kZS5wYWRkaW5nO1xuICBjb25zdCBoID0gYmJveC5oZWlnaHQgKyBub2RlLnBhZGRpbmc7XG4gIGNvbnN0IHBvaW50cyA9IFtcbiAgICB7IHg6IDIgKiBoIC8gNiwgeTogMCB9LFxuICAgIHsgeDogdyArIGggLyA2LCB5OiAwIH0sXG4gICAgeyB4OiB3IC0gMiAqIGggLyA2LCB5OiAtaCB9LFxuICAgIHsgeDogLWggLyA2LCB5OiAtaCB9XG4gIF07XG4gIGNvbnN0IGVsID0gaW5zZXJ0UG9seWdvblNoYXBlKHNoYXBlU3ZnLCB3LCBoLCBwb2ludHMpO1xuICBlbC5hdHRyKFwic3R5bGVcIiwgbm9kZS5zdHlsZSk7XG4gIHVwZGF0ZU5vZGVCb3VuZHMobm9kZSwgZWwpO1xuICBub2RlLmludGVyc2VjdCA9IGZ1bmN0aW9uKHBvaW50Mikge1xuICAgIHJldHVybiBpbnRlcnNlY3RfZGVmYXVsdC5wb2x5Z29uKG5vZGUsIHBvaW50cywgcG9pbnQyKTtcbiAgfTtcbiAgcmV0dXJuIHNoYXBlU3ZnO1xufSwgXCJsZWFuX2xlZnRcIik7XG52YXIgdHJhcGV6b2lkID0gLyogQF9fUFVSRV9fICovIF9fbmFtZShhc3luYyAocGFyZW50LCBub2RlKSA9PiB7XG4gIGNvbnN0IHsgc2hhcGVTdmcsIGJib3ggfSA9IGF3YWl0IGxhYmVsSGVscGVyKFxuICAgIHBhcmVudCxcbiAgICBub2RlLFxuICAgIGdldENsYXNzZXNGcm9tTm9kZShub2RlLCB2b2lkIDApLFxuICAgIHRydWVcbiAgKTtcbiAgY29uc3QgdyA9IGJib3gud2lkdGggKyBub2RlLnBhZGRpbmc7XG4gIGNvbnN0IGggPSBiYm94LmhlaWdodCArIG5vZGUucGFkZGluZztcbiAgY29uc3QgcG9pbnRzID0gW1xuICAgIHsgeDogLTIgKiBoIC8gNiwgeTogMCB9LFxuICAgIHsgeDogdyArIDIgKiBoIC8gNiwgeTogMCB9LFxuICAgIHsgeDogdyAtIGggLyA2LCB5OiAtaCB9LFxuICAgIHsgeDogaCAvIDYsIHk6IC1oIH1cbiAgXTtcbiAgY29uc3QgZWwgPSBpbnNlcnRQb2x5Z29uU2hhcGUoc2hhcGVTdmcsIHcsIGgsIHBvaW50cyk7XG4gIGVsLmF0dHIoXCJzdHlsZVwiLCBub2RlLnN0eWxlKTtcbiAgdXBkYXRlTm9kZUJvdW5kcyhub2RlLCBlbCk7XG4gIG5vZGUuaW50ZXJzZWN0ID0gZnVuY3Rpb24ocG9pbnQyKSB7XG4gICAgcmV0dXJuIGludGVyc2VjdF9kZWZhdWx0LnBvbHlnb24obm9kZSwgcG9pbnRzLCBwb2ludDIpO1xuICB9O1xuICByZXR1cm4gc2hhcGVTdmc7XG59LCBcInRyYXBlem9pZFwiKTtcbnZhciBpbnZfdHJhcGV6b2lkID0gLyogQF9fUFVSRV9fICovIF9fbmFtZShhc3luYyAocGFyZW50LCBub2RlKSA9PiB7XG4gIGNvbnN0IHsgc2hhcGVTdmcsIGJib3ggfSA9IGF3YWl0IGxhYmVsSGVscGVyKFxuICAgIHBhcmVudCxcbiAgICBub2RlLFxuICAgIGdldENsYXNzZXNGcm9tTm9kZShub2RlLCB2b2lkIDApLFxuICAgIHRydWVcbiAgKTtcbiAgY29uc3QgdyA9IGJib3gud2lkdGggKyBub2RlLnBhZGRpbmc7XG4gIGNvbnN0IGggPSBiYm94LmhlaWdodCArIG5vZGUucGFkZGluZztcbiAgY29uc3QgcG9pbnRzID0gW1xuICAgIHsgeDogaCAvIDYsIHk6IDAgfSxcbiAgICB7IHg6IHcgLSBoIC8gNiwgeTogMCB9LFxuICAgIHsgeDogdyArIDIgKiBoIC8gNiwgeTogLWggfSxcbiAgICB7IHg6IC0yICogaCAvIDYsIHk6IC1oIH1cbiAgXTtcbiAgY29uc3QgZWwgPSBpbnNlcnRQb2x5Z29uU2hhcGUoc2hhcGVTdmcsIHcsIGgsIHBvaW50cyk7XG4gIGVsLmF0dHIoXCJzdHlsZVwiLCBub2RlLnN0eWxlKTtcbiAgdXBkYXRlTm9kZUJvdW5kcyhub2RlLCBlbCk7XG4gIG5vZGUuaW50ZXJzZWN0ID0gZnVuY3Rpb24ocG9pbnQyKSB7XG4gICAgcmV0dXJuIGludGVyc2VjdF9kZWZhdWx0LnBvbHlnb24obm9kZSwgcG9pbnRzLCBwb2ludDIpO1xuICB9O1xuICByZXR1cm4gc2hhcGVTdmc7XG59LCBcImludl90cmFwZXpvaWRcIik7XG52YXIgcmVjdF9yaWdodF9pbnZfYXJyb3cgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKGFzeW5jIChwYXJlbnQsIG5vZGUpID0+IHtcbiAgY29uc3QgeyBzaGFwZVN2ZywgYmJveCB9ID0gYXdhaXQgbGFiZWxIZWxwZXIoXG4gICAgcGFyZW50LFxuICAgIG5vZGUsXG4gICAgZ2V0Q2xhc3Nlc0Zyb21Ob2RlKG5vZGUsIHZvaWQgMCksXG4gICAgdHJ1ZVxuICApO1xuICBjb25zdCB3ID0gYmJveC53aWR0aCArIG5vZGUucGFkZGluZztcbiAgY29uc3QgaCA9IGJib3guaGVpZ2h0ICsgbm9kZS5wYWRkaW5nO1xuICBjb25zdCBwb2ludHMgPSBbXG4gICAgeyB4OiAwLCB5OiAwIH0sXG4gICAgeyB4OiB3ICsgaCAvIDIsIHk6IDAgfSxcbiAgICB7IHg6IHcsIHk6IC1oIC8gMiB9LFxuICAgIHsgeDogdyArIGggLyAyLCB5OiAtaCB9LFxuICAgIHsgeDogMCwgeTogLWggfVxuICBdO1xuICBjb25zdCBlbCA9IGluc2VydFBvbHlnb25TaGFwZShzaGFwZVN2ZywgdywgaCwgcG9pbnRzKTtcbiAgZWwuYXR0cihcInN0eWxlXCIsIG5vZGUuc3R5bGUpO1xuICB1cGRhdGVOb2RlQm91bmRzKG5vZGUsIGVsKTtcbiAgbm9kZS5pbnRlcnNlY3QgPSBmdW5jdGlvbihwb2ludDIpIHtcbiAgICByZXR1cm4gaW50ZXJzZWN0X2RlZmF1bHQucG9seWdvbihub2RlLCBwb2ludHMsIHBvaW50Mik7XG4gIH07XG4gIHJldHVybiBzaGFwZVN2Zztcbn0sIFwicmVjdF9yaWdodF9pbnZfYXJyb3dcIik7XG52YXIgY3lsaW5kZXIgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKGFzeW5jIChwYXJlbnQsIG5vZGUpID0+IHtcbiAgY29uc3QgeyBzaGFwZVN2ZywgYmJveCB9ID0gYXdhaXQgbGFiZWxIZWxwZXIoXG4gICAgcGFyZW50LFxuICAgIG5vZGUsXG4gICAgZ2V0Q2xhc3Nlc0Zyb21Ob2RlKG5vZGUsIHZvaWQgMCksXG4gICAgdHJ1ZVxuICApO1xuICBjb25zdCB3ID0gYmJveC53aWR0aCArIG5vZGUucGFkZGluZztcbiAgY29uc3QgcnggPSB3IC8gMjtcbiAgY29uc3QgcnkgPSByeCAvICgyLjUgKyB3IC8gNTApO1xuICBjb25zdCBoID0gYmJveC5oZWlnaHQgKyByeSArIG5vZGUucGFkZGluZztcbiAgY29uc3Qgc2hhcGUgPSBcIk0gMCxcIiArIHJ5ICsgXCIgYSBcIiArIHJ4ICsgXCIsXCIgKyByeSArIFwiIDAsMCwwIFwiICsgdyArIFwiIDAgYSBcIiArIHJ4ICsgXCIsXCIgKyByeSArIFwiIDAsMCwwIFwiICsgLXcgKyBcIiAwIGwgMCxcIiArIGggKyBcIiBhIFwiICsgcnggKyBcIixcIiArIHJ5ICsgXCIgMCwwLDAgXCIgKyB3ICsgXCIgMCBsIDAsXCIgKyAtaDtcbiAgY29uc3QgZWwgPSBzaGFwZVN2Zy5hdHRyKFwibGFiZWwtb2Zmc2V0LXlcIiwgcnkpLmluc2VydChcInBhdGhcIiwgXCI6Zmlyc3QtY2hpbGRcIikuYXR0cihcInN0eWxlXCIsIG5vZGUuc3R5bGUpLmF0dHIoXCJkXCIsIHNoYXBlKS5hdHRyKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKFwiICsgLXcgLyAyICsgXCIsXCIgKyAtKGggLyAyICsgcnkpICsgXCIpXCIpO1xuICB1cGRhdGVOb2RlQm91bmRzKG5vZGUsIGVsKTtcbiAgbm9kZS5pbnRlcnNlY3QgPSBmdW5jdGlvbihwb2ludDIpIHtcbiAgICBjb25zdCBwb3MgPSBpbnRlcnNlY3RfZGVmYXVsdC5yZWN0KG5vZGUsIHBvaW50Mik7XG4gICAgY29uc3QgeCA9IHBvcy54IC0gbm9kZS54O1xuICAgIGlmIChyeCAhPSAwICYmIChNYXRoLmFicyh4KSA8IG5vZGUud2lkdGggLyAyIHx8IE1hdGguYWJzKHgpID09IG5vZGUud2lkdGggLyAyICYmIE1hdGguYWJzKHBvcy55IC0gbm9kZS55KSA+IG5vZGUuaGVpZ2h0IC8gMiAtIHJ5KSkge1xuICAgICAgbGV0IHkgPSByeSAqIHJ5ICogKDEgLSB4ICogeCAvIChyeCAqIHJ4KSk7XG4gICAgICBpZiAoeSAhPSAwKSB7XG4gICAgICAgIHkgPSBNYXRoLnNxcnQoeSk7XG4gICAgICB9XG4gICAgICB5ID0gcnkgLSB5O1xuICAgICAgaWYgKHBvaW50Mi55IC0gbm9kZS55ID4gMCkge1xuICAgICAgICB5ID0gLXk7XG4gICAgICB9XG4gICAgICBwb3MueSArPSB5O1xuICAgIH1cbiAgICByZXR1cm4gcG9zO1xuICB9O1xuICByZXR1cm4gc2hhcGVTdmc7XG59LCBcImN5bGluZGVyXCIpO1xudmFyIHJlY3QgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKGFzeW5jIChwYXJlbnQsIG5vZGUpID0+IHtcbiAgY29uc3QgeyBzaGFwZVN2ZywgYmJveCwgaGFsZlBhZGRpbmcgfSA9IGF3YWl0IGxhYmVsSGVscGVyKFxuICAgIHBhcmVudCxcbiAgICBub2RlLFxuICAgIFwibm9kZSBcIiArIG5vZGUuY2xhc3NlcyArIFwiIFwiICsgbm9kZS5jbGFzcyxcbiAgICB0cnVlXG4gICk7XG4gIGNvbnN0IHJlY3QyID0gc2hhcGVTdmcuaW5zZXJ0KFwicmVjdFwiLCBcIjpmaXJzdC1jaGlsZFwiKTtcbiAgY29uc3QgdG90YWxXaWR0aCA9IG5vZGUucG9zaXRpb25lZCA/IG5vZGUud2lkdGggOiBiYm94LndpZHRoICsgbm9kZS5wYWRkaW5nO1xuICBjb25zdCB0b3RhbEhlaWdodCA9IG5vZGUucG9zaXRpb25lZCA/IG5vZGUuaGVpZ2h0IDogYmJveC5oZWlnaHQgKyBub2RlLnBhZGRpbmc7XG4gIGNvbnN0IHggPSBub2RlLnBvc2l0aW9uZWQgPyAtdG90YWxXaWR0aCAvIDIgOiAtYmJveC53aWR0aCAvIDIgLSBoYWxmUGFkZGluZztcbiAgY29uc3QgeSA9IG5vZGUucG9zaXRpb25lZCA/IC10b3RhbEhlaWdodCAvIDIgOiAtYmJveC5oZWlnaHQgLyAyIC0gaGFsZlBhZGRpbmc7XG4gIHJlY3QyLmF0dHIoXCJjbGFzc1wiLCBcImJhc2ljIGxhYmVsLWNvbnRhaW5lclwiKS5hdHRyKFwic3R5bGVcIiwgbm9kZS5zdHlsZSkuYXR0cihcInJ4XCIsIG5vZGUucngpLmF0dHIoXCJyeVwiLCBub2RlLnJ5KS5hdHRyKFwieFwiLCB4KS5hdHRyKFwieVwiLCB5KS5hdHRyKFwid2lkdGhcIiwgdG90YWxXaWR0aCkuYXR0cihcImhlaWdodFwiLCB0b3RhbEhlaWdodCk7XG4gIGlmIChub2RlLnByb3BzKSB7XG4gICAgY29uc3QgcHJvcEtleXMgPSBuZXcgU2V0KE9iamVjdC5rZXlzKG5vZGUucHJvcHMpKTtcbiAgICBpZiAobm9kZS5wcm9wcy5ib3JkZXJzKSB7XG4gICAgICBhcHBseU5vZGVQcm9wZXJ0eUJvcmRlcnMocmVjdDIsIG5vZGUucHJvcHMuYm9yZGVycywgdG90YWxXaWR0aCwgdG90YWxIZWlnaHQpO1xuICAgICAgcHJvcEtleXMuZGVsZXRlKFwiYm9yZGVyc1wiKTtcbiAgICB9XG4gICAgcHJvcEtleXMuZm9yRWFjaCgocHJvcEtleSkgPT4ge1xuICAgICAgbG9nLndhcm4oYFVua25vd24gbm9kZSBwcm9wZXJ0eSAke3Byb3BLZXl9YCk7XG4gICAgfSk7XG4gIH1cbiAgdXBkYXRlTm9kZUJvdW5kcyhub2RlLCByZWN0Mik7XG4gIG5vZGUuaW50ZXJzZWN0ID0gZnVuY3Rpb24ocG9pbnQyKSB7XG4gICAgcmV0dXJuIGludGVyc2VjdF9kZWZhdWx0LnJlY3Qobm9kZSwgcG9pbnQyKTtcbiAgfTtcbiAgcmV0dXJuIHNoYXBlU3ZnO1xufSwgXCJyZWN0XCIpO1xudmFyIGNvbXBvc2l0ZSA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoYXN5bmMgKHBhcmVudCwgbm9kZSkgPT4ge1xuICBjb25zdCB7IHNoYXBlU3ZnLCBiYm94LCBoYWxmUGFkZGluZyB9ID0gYXdhaXQgbGFiZWxIZWxwZXIoXG4gICAgcGFyZW50LFxuICAgIG5vZGUsXG4gICAgXCJub2RlIFwiICsgbm9kZS5jbGFzc2VzLFxuICAgIHRydWVcbiAgKTtcbiAgY29uc3QgcmVjdDIgPSBzaGFwZVN2Zy5pbnNlcnQoXCJyZWN0XCIsIFwiOmZpcnN0LWNoaWxkXCIpO1xuICBjb25zdCB0b3RhbFdpZHRoID0gbm9kZS5wb3NpdGlvbmVkID8gbm9kZS53aWR0aCA6IGJib3gud2lkdGggKyBub2RlLnBhZGRpbmc7XG4gIGNvbnN0IHRvdGFsSGVpZ2h0ID0gbm9kZS5wb3NpdGlvbmVkID8gbm9kZS5oZWlnaHQgOiBiYm94LmhlaWdodCArIG5vZGUucGFkZGluZztcbiAgY29uc3QgeCA9IG5vZGUucG9zaXRpb25lZCA/IC10b3RhbFdpZHRoIC8gMiA6IC1iYm94LndpZHRoIC8gMiAtIGhhbGZQYWRkaW5nO1xuICBjb25zdCB5ID0gbm9kZS5wb3NpdGlvbmVkID8gLXRvdGFsSGVpZ2h0IC8gMiA6IC1iYm94LmhlaWdodCAvIDIgLSBoYWxmUGFkZGluZztcbiAgcmVjdDIuYXR0cihcImNsYXNzXCIsIFwiYmFzaWMgY2x1c3RlciBjb21wb3NpdGUgbGFiZWwtY29udGFpbmVyXCIpLmF0dHIoXCJzdHlsZVwiLCBub2RlLnN0eWxlKS5hdHRyKFwicnhcIiwgbm9kZS5yeCkuYXR0cihcInJ5XCIsIG5vZGUucnkpLmF0dHIoXCJ4XCIsIHgpLmF0dHIoXCJ5XCIsIHkpLmF0dHIoXCJ3aWR0aFwiLCB0b3RhbFdpZHRoKS5hdHRyKFwiaGVpZ2h0XCIsIHRvdGFsSGVpZ2h0KTtcbiAgaWYgKG5vZGUucHJvcHMpIHtcbiAgICBjb25zdCBwcm9wS2V5cyA9IG5ldyBTZXQoT2JqZWN0LmtleXMobm9kZS5wcm9wcykpO1xuICAgIGlmIChub2RlLnByb3BzLmJvcmRlcnMpIHtcbiAgICAgIGFwcGx5Tm9kZVByb3BlcnR5Qm9yZGVycyhyZWN0Miwgbm9kZS5wcm9wcy5ib3JkZXJzLCB0b3RhbFdpZHRoLCB0b3RhbEhlaWdodCk7XG4gICAgICBwcm9wS2V5cy5kZWxldGUoXCJib3JkZXJzXCIpO1xuICAgIH1cbiAgICBwcm9wS2V5cy5mb3JFYWNoKChwcm9wS2V5KSA9PiB7XG4gICAgICBsb2cud2FybihgVW5rbm93biBub2RlIHByb3BlcnR5ICR7cHJvcEtleX1gKTtcbiAgICB9KTtcbiAgfVxuICB1cGRhdGVOb2RlQm91bmRzKG5vZGUsIHJlY3QyKTtcbiAgbm9kZS5pbnRlcnNlY3QgPSBmdW5jdGlvbihwb2ludDIpIHtcbiAgICByZXR1cm4gaW50ZXJzZWN0X2RlZmF1bHQucmVjdChub2RlLCBwb2ludDIpO1xuICB9O1xuICByZXR1cm4gc2hhcGVTdmc7XG59LCBcImNvbXBvc2l0ZVwiKTtcbnZhciBsYWJlbFJlY3QgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKGFzeW5jIChwYXJlbnQsIG5vZGUpID0+IHtcbiAgY29uc3QgeyBzaGFwZVN2ZyB9ID0gYXdhaXQgbGFiZWxIZWxwZXIocGFyZW50LCBub2RlLCBcImxhYmVsXCIsIHRydWUpO1xuICBsb2cudHJhY2UoXCJDbGFzc2VzID0gXCIsIG5vZGUuY2xhc3MpO1xuICBjb25zdCByZWN0MiA9IHNoYXBlU3ZnLmluc2VydChcInJlY3RcIiwgXCI6Zmlyc3QtY2hpbGRcIik7XG4gIGNvbnN0IHRvdGFsV2lkdGggPSAwO1xuICBjb25zdCB0b3RhbEhlaWdodCA9IDA7XG4gIHJlY3QyLmF0dHIoXCJ3aWR0aFwiLCB0b3RhbFdpZHRoKS5hdHRyKFwiaGVpZ2h0XCIsIHRvdGFsSGVpZ2h0KTtcbiAgc2hhcGVTdmcuYXR0cihcImNsYXNzXCIsIFwibGFiZWwgZWRnZUxhYmVsXCIpO1xuICBpZiAobm9kZS5wcm9wcykge1xuICAgIGNvbnN0IHByb3BLZXlzID0gbmV3IFNldChPYmplY3Qua2V5cyhub2RlLnByb3BzKSk7XG4gICAgaWYgKG5vZGUucHJvcHMuYm9yZGVycykge1xuICAgICAgYXBwbHlOb2RlUHJvcGVydHlCb3JkZXJzKHJlY3QyLCBub2RlLnByb3BzLmJvcmRlcnMsIHRvdGFsV2lkdGgsIHRvdGFsSGVpZ2h0KTtcbiAgICAgIHByb3BLZXlzLmRlbGV0ZShcImJvcmRlcnNcIik7XG4gICAgfVxuICAgIHByb3BLZXlzLmZvckVhY2goKHByb3BLZXkpID0+IHtcbiAgICAgIGxvZy53YXJuKGBVbmtub3duIG5vZGUgcHJvcGVydHkgJHtwcm9wS2V5fWApO1xuICAgIH0pO1xuICB9XG4gIHVwZGF0ZU5vZGVCb3VuZHMobm9kZSwgcmVjdDIpO1xuICBub2RlLmludGVyc2VjdCA9IGZ1bmN0aW9uKHBvaW50Mikge1xuICAgIHJldHVybiBpbnRlcnNlY3RfZGVmYXVsdC5yZWN0KG5vZGUsIHBvaW50Mik7XG4gIH07XG4gIHJldHVybiBzaGFwZVN2Zztcbn0sIFwibGFiZWxSZWN0XCIpO1xuZnVuY3Rpb24gYXBwbHlOb2RlUHJvcGVydHlCb3JkZXJzKHJlY3QyLCBib3JkZXJzLCB0b3RhbFdpZHRoLCB0b3RhbEhlaWdodCkge1xuICBjb25zdCBzdHJva2VEYXNoQXJyYXkgPSBbXTtcbiAgY29uc3QgYWRkQm9yZGVyID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgobGVuZ3RoKSA9PiB7XG4gICAgc3Ryb2tlRGFzaEFycmF5LnB1c2gobGVuZ3RoLCAwKTtcbiAgfSwgXCJhZGRCb3JkZXJcIik7XG4gIGNvbnN0IHNraXBCb3JkZXIgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChsZW5ndGgpID0+IHtcbiAgICBzdHJva2VEYXNoQXJyYXkucHVzaCgwLCBsZW5ndGgpO1xuICB9LCBcInNraXBCb3JkZXJcIik7XG4gIGlmIChib3JkZXJzLmluY2x1ZGVzKFwidFwiKSkge1xuICAgIGxvZy5kZWJ1ZyhcImFkZCB0b3AgYm9yZGVyXCIpO1xuICAgIGFkZEJvcmRlcih0b3RhbFdpZHRoKTtcbiAgfSBlbHNlIHtcbiAgICBza2lwQm9yZGVyKHRvdGFsV2lkdGgpO1xuICB9XG4gIGlmIChib3JkZXJzLmluY2x1ZGVzKFwiclwiKSkge1xuICAgIGxvZy5kZWJ1ZyhcImFkZCByaWdodCBib3JkZXJcIik7XG4gICAgYWRkQm9yZGVyKHRvdGFsSGVpZ2h0KTtcbiAgfSBlbHNlIHtcbiAgICBza2lwQm9yZGVyKHRvdGFsSGVpZ2h0KTtcbiAgfVxuICBpZiAoYm9yZGVycy5pbmNsdWRlcyhcImJcIikpIHtcbiAgICBsb2cuZGVidWcoXCJhZGQgYm90dG9tIGJvcmRlclwiKTtcbiAgICBhZGRCb3JkZXIodG90YWxXaWR0aCk7XG4gIH0gZWxzZSB7XG4gICAgc2tpcEJvcmRlcih0b3RhbFdpZHRoKTtcbiAgfVxuICBpZiAoYm9yZGVycy5pbmNsdWRlcyhcImxcIikpIHtcbiAgICBsb2cuZGVidWcoXCJhZGQgbGVmdCBib3JkZXJcIik7XG4gICAgYWRkQm9yZGVyKHRvdGFsSGVpZ2h0KTtcbiAgfSBlbHNlIHtcbiAgICBza2lwQm9yZGVyKHRvdGFsSGVpZ2h0KTtcbiAgfVxuICByZWN0Mi5hdHRyKFwic3Ryb2tlLWRhc2hhcnJheVwiLCBzdHJva2VEYXNoQXJyYXkuam9pbihcIiBcIikpO1xufVxuX19uYW1lKGFwcGx5Tm9kZVByb3BlcnR5Qm9yZGVycywgXCJhcHBseU5vZGVQcm9wZXJ0eUJvcmRlcnNcIik7XG52YXIgcmVjdFdpdGhUaXRsZSA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKHBhcmVudCwgbm9kZSkgPT4ge1xuICBsZXQgY2xhc3NlczI7XG4gIGlmICghbm9kZS5jbGFzc2VzKSB7XG4gICAgY2xhc3NlczIgPSBcIm5vZGUgZGVmYXVsdFwiO1xuICB9IGVsc2Uge1xuICAgIGNsYXNzZXMyID0gXCJub2RlIFwiICsgbm9kZS5jbGFzc2VzO1xuICB9XG4gIGNvbnN0IHNoYXBlU3ZnID0gcGFyZW50Lmluc2VydChcImdcIikuYXR0cihcImNsYXNzXCIsIGNsYXNzZXMyKS5hdHRyKFwiaWRcIiwgbm9kZS5kb21JZCB8fCBub2RlLmlkKTtcbiAgY29uc3QgcmVjdDIgPSBzaGFwZVN2Zy5pbnNlcnQoXCJyZWN0XCIsIFwiOmZpcnN0LWNoaWxkXCIpO1xuICBjb25zdCBpbm5lckxpbmUgPSBzaGFwZVN2Zy5pbnNlcnQoXCJsaW5lXCIpO1xuICBjb25zdCBsYWJlbCA9IHNoYXBlU3ZnLmluc2VydChcImdcIikuYXR0cihcImNsYXNzXCIsIFwibGFiZWxcIik7XG4gIGNvbnN0IHRleHQyID0gbm9kZS5sYWJlbFRleHQuZmxhdCA/IG5vZGUubGFiZWxUZXh0LmZsYXQoKSA6IG5vZGUubGFiZWxUZXh0O1xuICBsZXQgdGl0bGUgPSBcIlwiO1xuICBpZiAodHlwZW9mIHRleHQyID09PSBcIm9iamVjdFwiKSB7XG4gICAgdGl0bGUgPSB0ZXh0MlswXTtcbiAgfSBlbHNlIHtcbiAgICB0aXRsZSA9IHRleHQyO1xuICB9XG4gIGxvZy5pbmZvKFwiTGFiZWwgdGV4dCBhYmM3OVwiLCB0aXRsZSwgdGV4dDIsIHR5cGVvZiB0ZXh0MiA9PT0gXCJvYmplY3RcIik7XG4gIGNvbnN0IHRleHQgPSBsYWJlbC5ub2RlKCkuYXBwZW5kQ2hpbGQoY3JlYXRlTGFiZWxfZGVmYXVsdCh0aXRsZSwgbm9kZS5sYWJlbFN0eWxlLCB0cnVlLCB0cnVlKSk7XG4gIGxldCBiYm94ID0geyB3aWR0aDogMCwgaGVpZ2h0OiAwIH07XG4gIGlmIChldmFsdWF0ZShnZXRDb25maWcyKCkuZmxvd2NoYXJ0Lmh0bWxMYWJlbHMpKSB7XG4gICAgY29uc3QgZGl2ID0gdGV4dC5jaGlsZHJlblswXTtcbiAgICBjb25zdCBkdiA9IHNlbGVjdDQodGV4dCk7XG4gICAgYmJveCA9IGRpdi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBkdi5hdHRyKFwid2lkdGhcIiwgYmJveC53aWR0aCk7XG4gICAgZHYuYXR0cihcImhlaWdodFwiLCBiYm94LmhlaWdodCk7XG4gIH1cbiAgbG9nLmluZm8oXCJUZXh0IDJcIiwgdGV4dDIpO1xuICBjb25zdCB0ZXh0Um93cyA9IHRleHQyLnNsaWNlKDEsIHRleHQyLmxlbmd0aCk7XG4gIGxldCB0aXRsZUJveCA9IHRleHQuZ2V0QkJveCgpO1xuICBjb25zdCBkZXNjciA9IGxhYmVsLm5vZGUoKS5hcHBlbmRDaGlsZChcbiAgICBjcmVhdGVMYWJlbF9kZWZhdWx0KHRleHRSb3dzLmpvaW4gPyB0ZXh0Um93cy5qb2luKFwiPGJyLz5cIikgOiB0ZXh0Um93cywgbm9kZS5sYWJlbFN0eWxlLCB0cnVlLCB0cnVlKVxuICApO1xuICBpZiAoZXZhbHVhdGUoZ2V0Q29uZmlnMigpLmZsb3djaGFydC5odG1sTGFiZWxzKSkge1xuICAgIGNvbnN0IGRpdiA9IGRlc2NyLmNoaWxkcmVuWzBdO1xuICAgIGNvbnN0IGR2ID0gc2VsZWN0NChkZXNjcik7XG4gICAgYmJveCA9IGRpdi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBkdi5hdHRyKFwid2lkdGhcIiwgYmJveC53aWR0aCk7XG4gICAgZHYuYXR0cihcImhlaWdodFwiLCBiYm94LmhlaWdodCk7XG4gIH1cbiAgY29uc3QgaGFsZlBhZGRpbmcgPSBub2RlLnBhZGRpbmcgLyAyO1xuICBzZWxlY3Q0KGRlc2NyKS5hdHRyKFxuICAgIFwidHJhbnNmb3JtXCIsXG4gICAgXCJ0cmFuc2xhdGUoIFwiICsgLy8gKHRpdGxlQm94LndpZHRoIC0gYmJveC53aWR0aCkgLyAyICtcbiAgICAoYmJveC53aWR0aCA+IHRpdGxlQm94LndpZHRoID8gMCA6ICh0aXRsZUJveC53aWR0aCAtIGJib3gud2lkdGgpIC8gMikgKyBcIiwgXCIgKyAodGl0bGVCb3guaGVpZ2h0ICsgaGFsZlBhZGRpbmcgKyA1KSArIFwiKVwiXG4gICk7XG4gIHNlbGVjdDQodGV4dCkuYXR0cihcbiAgICBcInRyYW5zZm9ybVwiLFxuICAgIFwidHJhbnNsYXRlKCBcIiArIC8vICh0aXRsZUJveC53aWR0aCAtIGJib3gud2lkdGgpIC8gMiArXG4gICAgKGJib3gud2lkdGggPCB0aXRsZUJveC53aWR0aCA/IDAgOiAtKHRpdGxlQm94LndpZHRoIC0gYmJveC53aWR0aCkgLyAyKSArIFwiLCAwKVwiXG4gICk7XG4gIGJib3ggPSBsYWJlbC5ub2RlKCkuZ2V0QkJveCgpO1xuICBsYWJlbC5hdHRyKFxuICAgIFwidHJhbnNmb3JtXCIsXG4gICAgXCJ0cmFuc2xhdGUoXCIgKyAtYmJveC53aWR0aCAvIDIgKyBcIiwgXCIgKyAoLWJib3guaGVpZ2h0IC8gMiAtIGhhbGZQYWRkaW5nICsgMykgKyBcIilcIlxuICApO1xuICByZWN0Mi5hdHRyKFwiY2xhc3NcIiwgXCJvdXRlciB0aXRsZS1zdGF0ZVwiKS5hdHRyKFwieFwiLCAtYmJveC53aWR0aCAvIDIgLSBoYWxmUGFkZGluZykuYXR0cihcInlcIiwgLWJib3guaGVpZ2h0IC8gMiAtIGhhbGZQYWRkaW5nKS5hdHRyKFwid2lkdGhcIiwgYmJveC53aWR0aCArIG5vZGUucGFkZGluZykuYXR0cihcImhlaWdodFwiLCBiYm94LmhlaWdodCArIG5vZGUucGFkZGluZyk7XG4gIGlubmVyTGluZS5hdHRyKFwiY2xhc3NcIiwgXCJkaXZpZGVyXCIpLmF0dHIoXCJ4MVwiLCAtYmJveC53aWR0aCAvIDIgLSBoYWxmUGFkZGluZykuYXR0cihcIngyXCIsIGJib3gud2lkdGggLyAyICsgaGFsZlBhZGRpbmcpLmF0dHIoXCJ5MVwiLCAtYmJveC5oZWlnaHQgLyAyIC0gaGFsZlBhZGRpbmcgKyB0aXRsZUJveC5oZWlnaHQgKyBoYWxmUGFkZGluZykuYXR0cihcInkyXCIsIC1iYm94LmhlaWdodCAvIDIgLSBoYWxmUGFkZGluZyArIHRpdGxlQm94LmhlaWdodCArIGhhbGZQYWRkaW5nKTtcbiAgdXBkYXRlTm9kZUJvdW5kcyhub2RlLCByZWN0Mik7XG4gIG5vZGUuaW50ZXJzZWN0ID0gZnVuY3Rpb24ocG9pbnQyKSB7XG4gICAgcmV0dXJuIGludGVyc2VjdF9kZWZhdWx0LnJlY3Qobm9kZSwgcG9pbnQyKTtcbiAgfTtcbiAgcmV0dXJuIHNoYXBlU3ZnO1xufSwgXCJyZWN0V2l0aFRpdGxlXCIpO1xudmFyIHN0YWRpdW0gPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKGFzeW5jIChwYXJlbnQsIG5vZGUpID0+IHtcbiAgY29uc3QgeyBzaGFwZVN2ZywgYmJveCB9ID0gYXdhaXQgbGFiZWxIZWxwZXIoXG4gICAgcGFyZW50LFxuICAgIG5vZGUsXG4gICAgZ2V0Q2xhc3Nlc0Zyb21Ob2RlKG5vZGUsIHZvaWQgMCksXG4gICAgdHJ1ZVxuICApO1xuICBjb25zdCBoID0gYmJveC5oZWlnaHQgKyBub2RlLnBhZGRpbmc7XG4gIGNvbnN0IHcgPSBiYm94LndpZHRoICsgaCAvIDQgKyBub2RlLnBhZGRpbmc7XG4gIGNvbnN0IHJlY3QyID0gc2hhcGVTdmcuaW5zZXJ0KFwicmVjdFwiLCBcIjpmaXJzdC1jaGlsZFwiKS5hdHRyKFwic3R5bGVcIiwgbm9kZS5zdHlsZSkuYXR0cihcInJ4XCIsIGggLyAyKS5hdHRyKFwicnlcIiwgaCAvIDIpLmF0dHIoXCJ4XCIsIC13IC8gMikuYXR0cihcInlcIiwgLWggLyAyKS5hdHRyKFwid2lkdGhcIiwgdykuYXR0cihcImhlaWdodFwiLCBoKTtcbiAgdXBkYXRlTm9kZUJvdW5kcyhub2RlLCByZWN0Mik7XG4gIG5vZGUuaW50ZXJzZWN0ID0gZnVuY3Rpb24ocG9pbnQyKSB7XG4gICAgcmV0dXJuIGludGVyc2VjdF9kZWZhdWx0LnJlY3Qobm9kZSwgcG9pbnQyKTtcbiAgfTtcbiAgcmV0dXJuIHNoYXBlU3ZnO1xufSwgXCJzdGFkaXVtXCIpO1xudmFyIGNpcmNsZTIgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKGFzeW5jIChwYXJlbnQsIG5vZGUpID0+IHtcbiAgY29uc3QgeyBzaGFwZVN2ZywgYmJveCwgaGFsZlBhZGRpbmcgfSA9IGF3YWl0IGxhYmVsSGVscGVyKFxuICAgIHBhcmVudCxcbiAgICBub2RlLFxuICAgIGdldENsYXNzZXNGcm9tTm9kZShub2RlLCB2b2lkIDApLFxuICAgIHRydWVcbiAgKTtcbiAgY29uc3QgY2lyY2xlMyA9IHNoYXBlU3ZnLmluc2VydChcImNpcmNsZVwiLCBcIjpmaXJzdC1jaGlsZFwiKTtcbiAgY2lyY2xlMy5hdHRyKFwic3R5bGVcIiwgbm9kZS5zdHlsZSkuYXR0cihcInJ4XCIsIG5vZGUucngpLmF0dHIoXCJyeVwiLCBub2RlLnJ5KS5hdHRyKFwiclwiLCBiYm94LndpZHRoIC8gMiArIGhhbGZQYWRkaW5nKS5hdHRyKFwid2lkdGhcIiwgYmJveC53aWR0aCArIG5vZGUucGFkZGluZykuYXR0cihcImhlaWdodFwiLCBiYm94LmhlaWdodCArIG5vZGUucGFkZGluZyk7XG4gIGxvZy5pbmZvKFwiQ2lyY2xlIG1haW5cIik7XG4gIHVwZGF0ZU5vZGVCb3VuZHMobm9kZSwgY2lyY2xlMyk7XG4gIG5vZGUuaW50ZXJzZWN0ID0gZnVuY3Rpb24ocG9pbnQyKSB7XG4gICAgbG9nLmluZm8oXCJDaXJjbGUgaW50ZXJzZWN0XCIsIG5vZGUsIGJib3gud2lkdGggLyAyICsgaGFsZlBhZGRpbmcsIHBvaW50Mik7XG4gICAgcmV0dXJuIGludGVyc2VjdF9kZWZhdWx0LmNpcmNsZShub2RlLCBiYm94LndpZHRoIC8gMiArIGhhbGZQYWRkaW5nLCBwb2ludDIpO1xuICB9O1xuICByZXR1cm4gc2hhcGVTdmc7XG59LCBcImNpcmNsZVwiKTtcbnZhciBkb3VibGVjaXJjbGUgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKGFzeW5jIChwYXJlbnQsIG5vZGUpID0+IHtcbiAgY29uc3QgeyBzaGFwZVN2ZywgYmJveCwgaGFsZlBhZGRpbmcgfSA9IGF3YWl0IGxhYmVsSGVscGVyKFxuICAgIHBhcmVudCxcbiAgICBub2RlLFxuICAgIGdldENsYXNzZXNGcm9tTm9kZShub2RlLCB2b2lkIDApLFxuICAgIHRydWVcbiAgKTtcbiAgY29uc3QgZ2FwID0gNTtcbiAgY29uc3QgY2lyY2xlR3JvdXAgPSBzaGFwZVN2Zy5pbnNlcnQoXCJnXCIsIFwiOmZpcnN0LWNoaWxkXCIpO1xuICBjb25zdCBvdXRlckNpcmNsZSA9IGNpcmNsZUdyb3VwLmluc2VydChcImNpcmNsZVwiKTtcbiAgY29uc3QgaW5uZXJDaXJjbGUgPSBjaXJjbGVHcm91cC5pbnNlcnQoXCJjaXJjbGVcIik7XG4gIGNpcmNsZUdyb3VwLmF0dHIoXCJjbGFzc1wiLCBub2RlLmNsYXNzKTtcbiAgb3V0ZXJDaXJjbGUuYXR0cihcInN0eWxlXCIsIG5vZGUuc3R5bGUpLmF0dHIoXCJyeFwiLCBub2RlLnJ4KS5hdHRyKFwicnlcIiwgbm9kZS5yeSkuYXR0cihcInJcIiwgYmJveC53aWR0aCAvIDIgKyBoYWxmUGFkZGluZyArIGdhcCkuYXR0cihcIndpZHRoXCIsIGJib3gud2lkdGggKyBub2RlLnBhZGRpbmcgKyBnYXAgKiAyKS5hdHRyKFwiaGVpZ2h0XCIsIGJib3guaGVpZ2h0ICsgbm9kZS5wYWRkaW5nICsgZ2FwICogMik7XG4gIGlubmVyQ2lyY2xlLmF0dHIoXCJzdHlsZVwiLCBub2RlLnN0eWxlKS5hdHRyKFwicnhcIiwgbm9kZS5yeCkuYXR0cihcInJ5XCIsIG5vZGUucnkpLmF0dHIoXCJyXCIsIGJib3gud2lkdGggLyAyICsgaGFsZlBhZGRpbmcpLmF0dHIoXCJ3aWR0aFwiLCBiYm94LndpZHRoICsgbm9kZS5wYWRkaW5nKS5hdHRyKFwiaGVpZ2h0XCIsIGJib3guaGVpZ2h0ICsgbm9kZS5wYWRkaW5nKTtcbiAgbG9nLmluZm8oXCJEb3VibGVDaXJjbGUgbWFpblwiKTtcbiAgdXBkYXRlTm9kZUJvdW5kcyhub2RlLCBvdXRlckNpcmNsZSk7XG4gIG5vZGUuaW50ZXJzZWN0ID0gZnVuY3Rpb24ocG9pbnQyKSB7XG4gICAgbG9nLmluZm8oXCJEb3VibGVDaXJjbGUgaW50ZXJzZWN0XCIsIG5vZGUsIGJib3gud2lkdGggLyAyICsgaGFsZlBhZGRpbmcgKyBnYXAsIHBvaW50Mik7XG4gICAgcmV0dXJuIGludGVyc2VjdF9kZWZhdWx0LmNpcmNsZShub2RlLCBiYm94LndpZHRoIC8gMiArIGhhbGZQYWRkaW5nICsgZ2FwLCBwb2ludDIpO1xuICB9O1xuICByZXR1cm4gc2hhcGVTdmc7XG59LCBcImRvdWJsZWNpcmNsZVwiKTtcbnZhciBzdWJyb3V0aW5lID0gLyogQF9fUFVSRV9fICovIF9fbmFtZShhc3luYyAocGFyZW50LCBub2RlKSA9PiB7XG4gIGNvbnN0IHsgc2hhcGVTdmcsIGJib3ggfSA9IGF3YWl0IGxhYmVsSGVscGVyKFxuICAgIHBhcmVudCxcbiAgICBub2RlLFxuICAgIGdldENsYXNzZXNGcm9tTm9kZShub2RlLCB2b2lkIDApLFxuICAgIHRydWVcbiAgKTtcbiAgY29uc3QgdyA9IGJib3gud2lkdGggKyBub2RlLnBhZGRpbmc7XG4gIGNvbnN0IGggPSBiYm94LmhlaWdodCArIG5vZGUucGFkZGluZztcbiAgY29uc3QgcG9pbnRzID0gW1xuICAgIHsgeDogMCwgeTogMCB9LFxuICAgIHsgeDogdywgeTogMCB9LFxuICAgIHsgeDogdywgeTogLWggfSxcbiAgICB7IHg6IDAsIHk6IC1oIH0sXG4gICAgeyB4OiAwLCB5OiAwIH0sXG4gICAgeyB4OiAtOCwgeTogMCB9LFxuICAgIHsgeDogdyArIDgsIHk6IDAgfSxcbiAgICB7IHg6IHcgKyA4LCB5OiAtaCB9LFxuICAgIHsgeDogLTgsIHk6IC1oIH0sXG4gICAgeyB4OiAtOCwgeTogMCB9XG4gIF07XG4gIGNvbnN0IGVsID0gaW5zZXJ0UG9seWdvblNoYXBlKHNoYXBlU3ZnLCB3LCBoLCBwb2ludHMpO1xuICBlbC5hdHRyKFwic3R5bGVcIiwgbm9kZS5zdHlsZSk7XG4gIHVwZGF0ZU5vZGVCb3VuZHMobm9kZSwgZWwpO1xuICBub2RlLmludGVyc2VjdCA9IGZ1bmN0aW9uKHBvaW50Mikge1xuICAgIHJldHVybiBpbnRlcnNlY3RfZGVmYXVsdC5wb2x5Z29uKG5vZGUsIHBvaW50cywgcG9pbnQyKTtcbiAgfTtcbiAgcmV0dXJuIHNoYXBlU3ZnO1xufSwgXCJzdWJyb3V0aW5lXCIpO1xudmFyIHN0YXJ0ID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgocGFyZW50LCBub2RlKSA9PiB7XG4gIGNvbnN0IHNoYXBlU3ZnID0gcGFyZW50Lmluc2VydChcImdcIikuYXR0cihcImNsYXNzXCIsIFwibm9kZSBkZWZhdWx0XCIpLmF0dHIoXCJpZFwiLCBub2RlLmRvbUlkIHx8IG5vZGUuaWQpO1xuICBjb25zdCBjaXJjbGUzID0gc2hhcGVTdmcuaW5zZXJ0KFwiY2lyY2xlXCIsIFwiOmZpcnN0LWNoaWxkXCIpO1xuICBjaXJjbGUzLmF0dHIoXCJjbGFzc1wiLCBcInN0YXRlLXN0YXJ0XCIpLmF0dHIoXCJyXCIsIDcpLmF0dHIoXCJ3aWR0aFwiLCAxNCkuYXR0cihcImhlaWdodFwiLCAxNCk7XG4gIHVwZGF0ZU5vZGVCb3VuZHMobm9kZSwgY2lyY2xlMyk7XG4gIG5vZGUuaW50ZXJzZWN0ID0gZnVuY3Rpb24ocG9pbnQyKSB7XG4gICAgcmV0dXJuIGludGVyc2VjdF9kZWZhdWx0LmNpcmNsZShub2RlLCA3LCBwb2ludDIpO1xuICB9O1xuICByZXR1cm4gc2hhcGVTdmc7XG59LCBcInN0YXJ0XCIpO1xudmFyIGZvcmtKb2luID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgocGFyZW50LCBub2RlLCBkaXIpID0+IHtcbiAgY29uc3Qgc2hhcGVTdmcgPSBwYXJlbnQuaW5zZXJ0KFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJub2RlIGRlZmF1bHRcIikuYXR0cihcImlkXCIsIG5vZGUuZG9tSWQgfHwgbm9kZS5pZCk7XG4gIGxldCB3aWR0aCA9IDcwO1xuICBsZXQgaGVpZ2h0ID0gMTA7XG4gIGlmIChkaXIgPT09IFwiTFJcIikge1xuICAgIHdpZHRoID0gMTA7XG4gICAgaGVpZ2h0ID0gNzA7XG4gIH1cbiAgY29uc3Qgc2hhcGUgPSBzaGFwZVN2Zy5hcHBlbmQoXCJyZWN0XCIpLmF0dHIoXCJ4XCIsIC0xICogd2lkdGggLyAyKS5hdHRyKFwieVwiLCAtMSAqIGhlaWdodCAvIDIpLmF0dHIoXCJ3aWR0aFwiLCB3aWR0aCkuYXR0cihcImhlaWdodFwiLCBoZWlnaHQpLmF0dHIoXCJjbGFzc1wiLCBcImZvcmstam9pblwiKTtcbiAgdXBkYXRlTm9kZUJvdW5kcyhub2RlLCBzaGFwZSk7XG4gIG5vZGUuaGVpZ2h0ID0gbm9kZS5oZWlnaHQgKyBub2RlLnBhZGRpbmcgLyAyO1xuICBub2RlLndpZHRoID0gbm9kZS53aWR0aCArIG5vZGUucGFkZGluZyAvIDI7XG4gIG5vZGUuaW50ZXJzZWN0ID0gZnVuY3Rpb24ocG9pbnQyKSB7XG4gICAgcmV0dXJuIGludGVyc2VjdF9kZWZhdWx0LnJlY3Qobm9kZSwgcG9pbnQyKTtcbiAgfTtcbiAgcmV0dXJuIHNoYXBlU3ZnO1xufSwgXCJmb3JrSm9pblwiKTtcbnZhciBlbmQgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChwYXJlbnQsIG5vZGUpID0+IHtcbiAgY29uc3Qgc2hhcGVTdmcgPSBwYXJlbnQuaW5zZXJ0KFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJub2RlIGRlZmF1bHRcIikuYXR0cihcImlkXCIsIG5vZGUuZG9tSWQgfHwgbm9kZS5pZCk7XG4gIGNvbnN0IGlubmVyQ2lyY2xlID0gc2hhcGVTdmcuaW5zZXJ0KFwiY2lyY2xlXCIsIFwiOmZpcnN0LWNoaWxkXCIpO1xuICBjb25zdCBjaXJjbGUzID0gc2hhcGVTdmcuaW5zZXJ0KFwiY2lyY2xlXCIsIFwiOmZpcnN0LWNoaWxkXCIpO1xuICBjaXJjbGUzLmF0dHIoXCJjbGFzc1wiLCBcInN0YXRlLXN0YXJ0XCIpLmF0dHIoXCJyXCIsIDcpLmF0dHIoXCJ3aWR0aFwiLCAxNCkuYXR0cihcImhlaWdodFwiLCAxNCk7XG4gIGlubmVyQ2lyY2xlLmF0dHIoXCJjbGFzc1wiLCBcInN0YXRlLWVuZFwiKS5hdHRyKFwiclwiLCA1KS5hdHRyKFwid2lkdGhcIiwgMTApLmF0dHIoXCJoZWlnaHRcIiwgMTApO1xuICB1cGRhdGVOb2RlQm91bmRzKG5vZGUsIGNpcmNsZTMpO1xuICBub2RlLmludGVyc2VjdCA9IGZ1bmN0aW9uKHBvaW50Mikge1xuICAgIHJldHVybiBpbnRlcnNlY3RfZGVmYXVsdC5jaXJjbGUobm9kZSwgNywgcG9pbnQyKTtcbiAgfTtcbiAgcmV0dXJuIHNoYXBlU3ZnO1xufSwgXCJlbmRcIik7XG52YXIgY2xhc3NfYm94ID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgocGFyZW50LCBub2RlKSA9PiB7XG4gIGNvbnN0IGhhbGZQYWRkaW5nID0gbm9kZS5wYWRkaW5nIC8gMjtcbiAgY29uc3Qgcm93UGFkZGluZyA9IDQ7XG4gIGNvbnN0IGxpbmVIZWlnaHQgPSA4O1xuICBsZXQgY2xhc3NlczI7XG4gIGlmICghbm9kZS5jbGFzc2VzKSB7XG4gICAgY2xhc3NlczIgPSBcIm5vZGUgZGVmYXVsdFwiO1xuICB9IGVsc2Uge1xuICAgIGNsYXNzZXMyID0gXCJub2RlIFwiICsgbm9kZS5jbGFzc2VzO1xuICB9XG4gIGNvbnN0IHNoYXBlU3ZnID0gcGFyZW50Lmluc2VydChcImdcIikuYXR0cihcImNsYXNzXCIsIGNsYXNzZXMyKS5hdHRyKFwiaWRcIiwgbm9kZS5kb21JZCB8fCBub2RlLmlkKTtcbiAgY29uc3QgcmVjdDIgPSBzaGFwZVN2Zy5pbnNlcnQoXCJyZWN0XCIsIFwiOmZpcnN0LWNoaWxkXCIpO1xuICBjb25zdCB0b3BMaW5lID0gc2hhcGVTdmcuaW5zZXJ0KFwibGluZVwiKTtcbiAgY29uc3QgYm90dG9tTGluZSA9IHNoYXBlU3ZnLmluc2VydChcImxpbmVcIik7XG4gIGxldCBtYXhXaWR0aCA9IDA7XG4gIGxldCBtYXhIZWlnaHQgPSByb3dQYWRkaW5nO1xuICBjb25zdCBsYWJlbENvbnRhaW5lciA9IHNoYXBlU3ZnLmluc2VydChcImdcIikuYXR0cihcImNsYXNzXCIsIFwibGFiZWxcIik7XG4gIGxldCB2ZXJ0aWNhbFBvcyA9IDA7XG4gIGNvbnN0IGhhc0ludGVyZmFjZSA9IG5vZGUuY2xhc3NEYXRhLmFubm90YXRpb25zPy5bMF07XG4gIGNvbnN0IGludGVyZmFjZUxhYmVsVGV4dCA9IG5vZGUuY2xhc3NEYXRhLmFubm90YXRpb25zWzBdID8gXCJcXHhBQlwiICsgbm9kZS5jbGFzc0RhdGEuYW5ub3RhdGlvbnNbMF0gKyBcIlxceEJCXCIgOiBcIlwiO1xuICBjb25zdCBpbnRlcmZhY2VMYWJlbCA9IGxhYmVsQ29udGFpbmVyLm5vZGUoKS5hcHBlbmRDaGlsZChjcmVhdGVMYWJlbF9kZWZhdWx0KGludGVyZmFjZUxhYmVsVGV4dCwgbm9kZS5sYWJlbFN0eWxlLCB0cnVlLCB0cnVlKSk7XG4gIGxldCBpbnRlcmZhY2VCQm94ID0gaW50ZXJmYWNlTGFiZWwuZ2V0QkJveCgpO1xuICBpZiAoZXZhbHVhdGUoZ2V0Q29uZmlnMigpLmZsb3djaGFydC5odG1sTGFiZWxzKSkge1xuICAgIGNvbnN0IGRpdiA9IGludGVyZmFjZUxhYmVsLmNoaWxkcmVuWzBdO1xuICAgIGNvbnN0IGR2ID0gc2VsZWN0NChpbnRlcmZhY2VMYWJlbCk7XG4gICAgaW50ZXJmYWNlQkJveCA9IGRpdi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBkdi5hdHRyKFwid2lkdGhcIiwgaW50ZXJmYWNlQkJveC53aWR0aCk7XG4gICAgZHYuYXR0cihcImhlaWdodFwiLCBpbnRlcmZhY2VCQm94LmhlaWdodCk7XG4gIH1cbiAgaWYgKG5vZGUuY2xhc3NEYXRhLmFubm90YXRpb25zWzBdKSB7XG4gICAgbWF4SGVpZ2h0ICs9IGludGVyZmFjZUJCb3guaGVpZ2h0ICsgcm93UGFkZGluZztcbiAgICBtYXhXaWR0aCArPSBpbnRlcmZhY2VCQm94LndpZHRoO1xuICB9XG4gIGxldCBjbGFzc1RpdGxlU3RyaW5nID0gbm9kZS5jbGFzc0RhdGEubGFiZWw7XG4gIGlmIChub2RlLmNsYXNzRGF0YS50eXBlICE9PSB2b2lkIDAgJiYgbm9kZS5jbGFzc0RhdGEudHlwZSAhPT0gXCJcIikge1xuICAgIGlmIChnZXRDb25maWcyKCkuZmxvd2NoYXJ0Lmh0bWxMYWJlbHMpIHtcbiAgICAgIGNsYXNzVGl0bGVTdHJpbmcgKz0gXCImbHQ7XCIgKyBub2RlLmNsYXNzRGF0YS50eXBlICsgXCImZ3Q7XCI7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNsYXNzVGl0bGVTdHJpbmcgKz0gXCI8XCIgKyBub2RlLmNsYXNzRGF0YS50eXBlICsgXCI+XCI7XG4gICAgfVxuICB9XG4gIGNvbnN0IGNsYXNzVGl0bGVMYWJlbCA9IGxhYmVsQ29udGFpbmVyLm5vZGUoKS5hcHBlbmRDaGlsZChjcmVhdGVMYWJlbF9kZWZhdWx0KGNsYXNzVGl0bGVTdHJpbmcsIG5vZGUubGFiZWxTdHlsZSwgdHJ1ZSwgdHJ1ZSkpO1xuICBzZWxlY3Q0KGNsYXNzVGl0bGVMYWJlbCkuYXR0cihcImNsYXNzXCIsIFwiY2xhc3NUaXRsZVwiKTtcbiAgbGV0IGNsYXNzVGl0bGVCQm94ID0gY2xhc3NUaXRsZUxhYmVsLmdldEJCb3goKTtcbiAgaWYgKGV2YWx1YXRlKGdldENvbmZpZzIoKS5mbG93Y2hhcnQuaHRtbExhYmVscykpIHtcbiAgICBjb25zdCBkaXYgPSBjbGFzc1RpdGxlTGFiZWwuY2hpbGRyZW5bMF07XG4gICAgY29uc3QgZHYgPSBzZWxlY3Q0KGNsYXNzVGl0bGVMYWJlbCk7XG4gICAgY2xhc3NUaXRsZUJCb3ggPSBkaXYuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgZHYuYXR0cihcIndpZHRoXCIsIGNsYXNzVGl0bGVCQm94LndpZHRoKTtcbiAgICBkdi5hdHRyKFwiaGVpZ2h0XCIsIGNsYXNzVGl0bGVCQm94LmhlaWdodCk7XG4gIH1cbiAgbWF4SGVpZ2h0ICs9IGNsYXNzVGl0bGVCQm94LmhlaWdodCArIHJvd1BhZGRpbmc7XG4gIGlmIChjbGFzc1RpdGxlQkJveC53aWR0aCA+IG1heFdpZHRoKSB7XG4gICAgbWF4V2lkdGggPSBjbGFzc1RpdGxlQkJveC53aWR0aDtcbiAgfVxuICBjb25zdCBjbGFzc0F0dHJpYnV0ZXMgPSBbXTtcbiAgbm9kZS5jbGFzc0RhdGEubWVtYmVycy5mb3JFYWNoKChtZW1iZXIpID0+IHtcbiAgICBjb25zdCBwYXJzZWRJbmZvID0gbWVtYmVyLmdldERpc3BsYXlEZXRhaWxzKCk7XG4gICAgbGV0IHBhcnNlZFRleHQgPSBwYXJzZWRJbmZvLmRpc3BsYXlUZXh0O1xuICAgIGlmIChnZXRDb25maWcyKCkuZmxvd2NoYXJ0Lmh0bWxMYWJlbHMpIHtcbiAgICAgIHBhcnNlZFRleHQgPSBwYXJzZWRUZXh0LnJlcGxhY2UoLzwvZywgXCImbHQ7XCIpLnJlcGxhY2UoLz4vZywgXCImZ3Q7XCIpO1xuICAgIH1cbiAgICBjb25zdCBsYmwgPSBsYWJlbENvbnRhaW5lci5ub2RlKCkuYXBwZW5kQ2hpbGQoXG4gICAgICBjcmVhdGVMYWJlbF9kZWZhdWx0KFxuICAgICAgICBwYXJzZWRUZXh0LFxuICAgICAgICBwYXJzZWRJbmZvLmNzc1N0eWxlID8gcGFyc2VkSW5mby5jc3NTdHlsZSA6IG5vZGUubGFiZWxTdHlsZSxcbiAgICAgICAgdHJ1ZSxcbiAgICAgICAgdHJ1ZVxuICAgICAgKVxuICAgICk7XG4gICAgbGV0IGJib3ggPSBsYmwuZ2V0QkJveCgpO1xuICAgIGlmIChldmFsdWF0ZShnZXRDb25maWcyKCkuZmxvd2NoYXJ0Lmh0bWxMYWJlbHMpKSB7XG4gICAgICBjb25zdCBkaXYgPSBsYmwuY2hpbGRyZW5bMF07XG4gICAgICBjb25zdCBkdiA9IHNlbGVjdDQobGJsKTtcbiAgICAgIGJib3ggPSBkaXYuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICBkdi5hdHRyKFwid2lkdGhcIiwgYmJveC53aWR0aCk7XG4gICAgICBkdi5hdHRyKFwiaGVpZ2h0XCIsIGJib3guaGVpZ2h0KTtcbiAgICB9XG4gICAgaWYgKGJib3gud2lkdGggPiBtYXhXaWR0aCkge1xuICAgICAgbWF4V2lkdGggPSBiYm94LndpZHRoO1xuICAgIH1cbiAgICBtYXhIZWlnaHQgKz0gYmJveC5oZWlnaHQgKyByb3dQYWRkaW5nO1xuICAgIGNsYXNzQXR0cmlidXRlcy5wdXNoKGxibCk7XG4gIH0pO1xuICBtYXhIZWlnaHQgKz0gbGluZUhlaWdodDtcbiAgY29uc3QgY2xhc3NNZXRob2RzID0gW107XG4gIG5vZGUuY2xhc3NEYXRhLm1ldGhvZHMuZm9yRWFjaCgobWVtYmVyKSA9PiB7XG4gICAgY29uc3QgcGFyc2VkSW5mbyA9IG1lbWJlci5nZXREaXNwbGF5RGV0YWlscygpO1xuICAgIGxldCBkaXNwbGF5VGV4dCA9IHBhcnNlZEluZm8uZGlzcGxheVRleHQ7XG4gICAgaWYgKGdldENvbmZpZzIoKS5mbG93Y2hhcnQuaHRtbExhYmVscykge1xuICAgICAgZGlzcGxheVRleHQgPSBkaXNwbGF5VGV4dC5yZXBsYWNlKC88L2csIFwiJmx0O1wiKS5yZXBsYWNlKC8+L2csIFwiJmd0O1wiKTtcbiAgICB9XG4gICAgY29uc3QgbGJsID0gbGFiZWxDb250YWluZXIubm9kZSgpLmFwcGVuZENoaWxkKFxuICAgICAgY3JlYXRlTGFiZWxfZGVmYXVsdChcbiAgICAgICAgZGlzcGxheVRleHQsXG4gICAgICAgIHBhcnNlZEluZm8uY3NzU3R5bGUgPyBwYXJzZWRJbmZvLmNzc1N0eWxlIDogbm9kZS5sYWJlbFN0eWxlLFxuICAgICAgICB0cnVlLFxuICAgICAgICB0cnVlXG4gICAgICApXG4gICAgKTtcbiAgICBsZXQgYmJveCA9IGxibC5nZXRCQm94KCk7XG4gICAgaWYgKGV2YWx1YXRlKGdldENvbmZpZzIoKS5mbG93Y2hhcnQuaHRtbExhYmVscykpIHtcbiAgICAgIGNvbnN0IGRpdiA9IGxibC5jaGlsZHJlblswXTtcbiAgICAgIGNvbnN0IGR2ID0gc2VsZWN0NChsYmwpO1xuICAgICAgYmJveCA9IGRpdi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgIGR2LmF0dHIoXCJ3aWR0aFwiLCBiYm94LndpZHRoKTtcbiAgICAgIGR2LmF0dHIoXCJoZWlnaHRcIiwgYmJveC5oZWlnaHQpO1xuICAgIH1cbiAgICBpZiAoYmJveC53aWR0aCA+IG1heFdpZHRoKSB7XG4gICAgICBtYXhXaWR0aCA9IGJib3gud2lkdGg7XG4gICAgfVxuICAgIG1heEhlaWdodCArPSBiYm94LmhlaWdodCArIHJvd1BhZGRpbmc7XG4gICAgY2xhc3NNZXRob2RzLnB1c2gobGJsKTtcbiAgfSk7XG4gIG1heEhlaWdodCArPSBsaW5lSGVpZ2h0O1xuICBpZiAoaGFzSW50ZXJmYWNlKSB7XG4gICAgbGV0IGRpZmZYMiA9IChtYXhXaWR0aCAtIGludGVyZmFjZUJCb3gud2lkdGgpIC8gMjtcbiAgICBzZWxlY3Q0KGludGVyZmFjZUxhYmVsKS5hdHRyKFxuICAgICAgXCJ0cmFuc2Zvcm1cIixcbiAgICAgIFwidHJhbnNsYXRlKCBcIiArICgtMSAqIG1heFdpZHRoIC8gMiArIGRpZmZYMikgKyBcIiwgXCIgKyAtMSAqIG1heEhlaWdodCAvIDIgKyBcIilcIlxuICAgICk7XG4gICAgdmVydGljYWxQb3MgPSBpbnRlcmZhY2VCQm94LmhlaWdodCArIHJvd1BhZGRpbmc7XG4gIH1cbiAgbGV0IGRpZmZYID0gKG1heFdpZHRoIC0gY2xhc3NUaXRsZUJCb3gud2lkdGgpIC8gMjtcbiAgc2VsZWN0NChjbGFzc1RpdGxlTGFiZWwpLmF0dHIoXG4gICAgXCJ0cmFuc2Zvcm1cIixcbiAgICBcInRyYW5zbGF0ZSggXCIgKyAoLTEgKiBtYXhXaWR0aCAvIDIgKyBkaWZmWCkgKyBcIiwgXCIgKyAoLTEgKiBtYXhIZWlnaHQgLyAyICsgdmVydGljYWxQb3MpICsgXCIpXCJcbiAgKTtcbiAgdmVydGljYWxQb3MgKz0gY2xhc3NUaXRsZUJCb3guaGVpZ2h0ICsgcm93UGFkZGluZztcbiAgdG9wTGluZS5hdHRyKFwiY2xhc3NcIiwgXCJkaXZpZGVyXCIpLmF0dHIoXCJ4MVwiLCAtbWF4V2lkdGggLyAyIC0gaGFsZlBhZGRpbmcpLmF0dHIoXCJ4MlwiLCBtYXhXaWR0aCAvIDIgKyBoYWxmUGFkZGluZykuYXR0cihcInkxXCIsIC1tYXhIZWlnaHQgLyAyIC0gaGFsZlBhZGRpbmcgKyBsaW5lSGVpZ2h0ICsgdmVydGljYWxQb3MpLmF0dHIoXCJ5MlwiLCAtbWF4SGVpZ2h0IC8gMiAtIGhhbGZQYWRkaW5nICsgbGluZUhlaWdodCArIHZlcnRpY2FsUG9zKTtcbiAgdmVydGljYWxQb3MgKz0gbGluZUhlaWdodDtcbiAgY2xhc3NBdHRyaWJ1dGVzLmZvckVhY2goKGxibCkgPT4ge1xuICAgIHNlbGVjdDQobGJsKS5hdHRyKFxuICAgICAgXCJ0cmFuc2Zvcm1cIixcbiAgICAgIFwidHJhbnNsYXRlKCBcIiArIC1tYXhXaWR0aCAvIDIgKyBcIiwgXCIgKyAoLTEgKiBtYXhIZWlnaHQgLyAyICsgdmVydGljYWxQb3MgKyBsaW5lSGVpZ2h0IC8gMikgKyBcIilcIlxuICAgICk7XG4gICAgY29uc3QgbWVtYmVyQkJveCA9IGxibD8uZ2V0QkJveCgpO1xuICAgIHZlcnRpY2FsUG9zICs9IChtZW1iZXJCQm94Py5oZWlnaHQgPz8gMCkgKyByb3dQYWRkaW5nO1xuICB9KTtcbiAgdmVydGljYWxQb3MgKz0gbGluZUhlaWdodDtcbiAgYm90dG9tTGluZS5hdHRyKFwiY2xhc3NcIiwgXCJkaXZpZGVyXCIpLmF0dHIoXCJ4MVwiLCAtbWF4V2lkdGggLyAyIC0gaGFsZlBhZGRpbmcpLmF0dHIoXCJ4MlwiLCBtYXhXaWR0aCAvIDIgKyBoYWxmUGFkZGluZykuYXR0cihcInkxXCIsIC1tYXhIZWlnaHQgLyAyIC0gaGFsZlBhZGRpbmcgKyBsaW5lSGVpZ2h0ICsgdmVydGljYWxQb3MpLmF0dHIoXCJ5MlwiLCAtbWF4SGVpZ2h0IC8gMiAtIGhhbGZQYWRkaW5nICsgbGluZUhlaWdodCArIHZlcnRpY2FsUG9zKTtcbiAgdmVydGljYWxQb3MgKz0gbGluZUhlaWdodDtcbiAgY2xhc3NNZXRob2RzLmZvckVhY2goKGxibCkgPT4ge1xuICAgIHNlbGVjdDQobGJsKS5hdHRyKFxuICAgICAgXCJ0cmFuc2Zvcm1cIixcbiAgICAgIFwidHJhbnNsYXRlKCBcIiArIC1tYXhXaWR0aCAvIDIgKyBcIiwgXCIgKyAoLTEgKiBtYXhIZWlnaHQgLyAyICsgdmVydGljYWxQb3MpICsgXCIpXCJcbiAgICApO1xuICAgIGNvbnN0IG1lbWJlckJCb3ggPSBsYmw/LmdldEJCb3goKTtcbiAgICB2ZXJ0aWNhbFBvcyArPSAobWVtYmVyQkJveD8uaGVpZ2h0ID8/IDApICsgcm93UGFkZGluZztcbiAgfSk7XG4gIHJlY3QyLmF0dHIoXCJzdHlsZVwiLCBub2RlLnN0eWxlKS5hdHRyKFwiY2xhc3NcIiwgXCJvdXRlciB0aXRsZS1zdGF0ZVwiKS5hdHRyKFwieFwiLCAtbWF4V2lkdGggLyAyIC0gaGFsZlBhZGRpbmcpLmF0dHIoXCJ5XCIsIC0obWF4SGVpZ2h0IC8gMikgLSBoYWxmUGFkZGluZykuYXR0cihcIndpZHRoXCIsIG1heFdpZHRoICsgbm9kZS5wYWRkaW5nKS5hdHRyKFwiaGVpZ2h0XCIsIG1heEhlaWdodCArIG5vZGUucGFkZGluZyk7XG4gIHVwZGF0ZU5vZGVCb3VuZHMobm9kZSwgcmVjdDIpO1xuICBub2RlLmludGVyc2VjdCA9IGZ1bmN0aW9uKHBvaW50Mikge1xuICAgIHJldHVybiBpbnRlcnNlY3RfZGVmYXVsdC5yZWN0KG5vZGUsIHBvaW50Mik7XG4gIH07XG4gIHJldHVybiBzaGFwZVN2Zztcbn0sIFwiY2xhc3NfYm94XCIpO1xudmFyIHNoYXBlcyA9IHtcbiAgcmhvbWJ1czogcXVlc3Rpb24sXG4gIGNvbXBvc2l0ZSxcbiAgcXVlc3Rpb24sXG4gIHJlY3QsXG4gIGxhYmVsUmVjdCxcbiAgcmVjdFdpdGhUaXRsZSxcbiAgY2hvaWNlLFxuICBjaXJjbGU6IGNpcmNsZTIsXG4gIGRvdWJsZWNpcmNsZSxcbiAgc3RhZGl1bSxcbiAgaGV4YWdvbixcbiAgYmxvY2tfYXJyb3csXG4gIHJlY3RfbGVmdF9pbnZfYXJyb3csXG4gIGxlYW5fcmlnaHQsXG4gIGxlYW5fbGVmdCxcbiAgdHJhcGV6b2lkLFxuICBpbnZfdHJhcGV6b2lkLFxuICByZWN0X3JpZ2h0X2ludl9hcnJvdyxcbiAgY3lsaW5kZXIsXG4gIHN0YXJ0LFxuICBlbmQsXG4gIG5vdGU6IG5vdGVfZGVmYXVsdCxcbiAgc3Vicm91dGluZSxcbiAgZm9yazogZm9ya0pvaW4sXG4gIGpvaW46IGZvcmtKb2luLFxuICBjbGFzc19ib3hcbn07XG52YXIgbm9kZUVsZW1zID0ge307XG52YXIgaW5zZXJ0Tm9kZSA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoYXN5bmMgKGVsZW0sIG5vZGUsIHJlbmRlck9wdGlvbnMpID0+IHtcbiAgbGV0IG5ld0VsO1xuICBsZXQgZWw7XG4gIGlmIChub2RlLmxpbmspIHtcbiAgICBsZXQgdGFyZ2V0O1xuICAgIGlmIChnZXRDb25maWcyKCkuc2VjdXJpdHlMZXZlbCA9PT0gXCJzYW5kYm94XCIpIHtcbiAgICAgIHRhcmdldCA9IFwiX3RvcFwiO1xuICAgIH0gZWxzZSBpZiAobm9kZS5saW5rVGFyZ2V0KSB7XG4gICAgICB0YXJnZXQgPSBub2RlLmxpbmtUYXJnZXQgfHwgXCJfYmxhbmtcIjtcbiAgICB9XG4gICAgbmV3RWwgPSBlbGVtLmluc2VydChcInN2ZzphXCIpLmF0dHIoXCJ4bGluazpocmVmXCIsIG5vZGUubGluaykuYXR0cihcInRhcmdldFwiLCB0YXJnZXQpO1xuICAgIGVsID0gYXdhaXQgc2hhcGVzW25vZGUuc2hhcGVdKG5ld0VsLCBub2RlLCByZW5kZXJPcHRpb25zKTtcbiAgfSBlbHNlIHtcbiAgICBlbCA9IGF3YWl0IHNoYXBlc1tub2RlLnNoYXBlXShlbGVtLCBub2RlLCByZW5kZXJPcHRpb25zKTtcbiAgICBuZXdFbCA9IGVsO1xuICB9XG4gIGlmIChub2RlLnRvb2x0aXApIHtcbiAgICBlbC5hdHRyKFwidGl0bGVcIiwgbm9kZS50b29sdGlwKTtcbiAgfVxuICBpZiAobm9kZS5jbGFzcykge1xuICAgIGVsLmF0dHIoXCJjbGFzc1wiLCBcIm5vZGUgZGVmYXVsdCBcIiArIG5vZGUuY2xhc3MpO1xuICB9XG4gIG5vZGVFbGVtc1tub2RlLmlkXSA9IG5ld0VsO1xuICBpZiAobm9kZS5oYXZlQ2FsbGJhY2spIHtcbiAgICBub2RlRWxlbXNbbm9kZS5pZF0uYXR0cihcImNsYXNzXCIsIG5vZGVFbGVtc1tub2RlLmlkXS5hdHRyKFwiY2xhc3NcIikgKyBcIiBjbGlja2FibGVcIik7XG4gIH1cbiAgcmV0dXJuIG5ld0VsO1xufSwgXCJpbnNlcnROb2RlXCIpO1xudmFyIHBvc2l0aW9uTm9kZSA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKG5vZGUpID0+IHtcbiAgY29uc3QgZWwgPSBub2RlRWxlbXNbbm9kZS5pZF07XG4gIGxvZy50cmFjZShcbiAgICBcIlRyYW5zZm9ybWluZyBub2RlXCIsXG4gICAgbm9kZS5kaWZmLFxuICAgIG5vZGUsXG4gICAgXCJ0cmFuc2xhdGUoXCIgKyAobm9kZS54IC0gbm9kZS53aWR0aCAvIDIgLSA1KSArIFwiLCBcIiArIG5vZGUud2lkdGggLyAyICsgXCIpXCJcbiAgKTtcbiAgY29uc3QgcGFkZGluZzIgPSA4O1xuICBjb25zdCBkaWZmID0gbm9kZS5kaWZmIHx8IDA7XG4gIGlmIChub2RlLmNsdXN0ZXJOb2RlKSB7XG4gICAgZWwuYXR0cihcbiAgICAgIFwidHJhbnNmb3JtXCIsXG4gICAgICBcInRyYW5zbGF0ZShcIiArIChub2RlLnggKyBkaWZmIC0gbm9kZS53aWR0aCAvIDIpICsgXCIsIFwiICsgKG5vZGUueSAtIG5vZGUuaGVpZ2h0IC8gMiAtIHBhZGRpbmcyKSArIFwiKVwiXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICBlbC5hdHRyKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKFwiICsgbm9kZS54ICsgXCIsIFwiICsgbm9kZS55ICsgXCIpXCIpO1xuICB9XG4gIHJldHVybiBkaWZmO1xufSwgXCJwb3NpdGlvbk5vZGVcIik7XG5cbi8vIHNyYy9kaWFncmFtcy9ibG9jay9yZW5kZXJIZWxwZXJzLnRzXG5mdW5jdGlvbiBnZXROb2RlRnJvbUJsb2NrKGJsb2NrLCBkYjIsIHBvc2l0aW9uZWQgPSBmYWxzZSkge1xuICBjb25zdCB2ZXJ0ZXggPSBibG9jaztcbiAgbGV0IGNsYXNzU3RyID0gXCJkZWZhdWx0XCI7XG4gIGlmICgodmVydGV4Py5jbGFzc2VzPy5sZW5ndGggfHwgMCkgPiAwKSB7XG4gICAgY2xhc3NTdHIgPSAodmVydGV4Py5jbGFzc2VzID8/IFtdKS5qb2luKFwiIFwiKTtcbiAgfVxuICBjbGFzc1N0ciA9IGNsYXNzU3RyICsgXCIgZmxvd2NoYXJ0LWxhYmVsXCI7XG4gIGxldCByYWRpdXMgPSAwO1xuICBsZXQgc2hhcGUgPSBcIlwiO1xuICBsZXQgcGFkZGluZzI7XG4gIHN3aXRjaCAodmVydGV4LnR5cGUpIHtcbiAgICBjYXNlIFwicm91bmRcIjpcbiAgICAgIHJhZGl1cyA9IDU7XG4gICAgICBzaGFwZSA9IFwicmVjdFwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImNvbXBvc2l0ZVwiOlxuICAgICAgcmFkaXVzID0gMDtcbiAgICAgIHNoYXBlID0gXCJjb21wb3NpdGVcIjtcbiAgICAgIHBhZGRpbmcyID0gMDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJzcXVhcmVcIjpcbiAgICAgIHNoYXBlID0gXCJyZWN0XCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwiZGlhbW9uZFwiOlxuICAgICAgc2hhcGUgPSBcInF1ZXN0aW9uXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwiaGV4YWdvblwiOlxuICAgICAgc2hhcGUgPSBcImhleGFnb25cIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJibG9ja19hcnJvd1wiOlxuICAgICAgc2hhcGUgPSBcImJsb2NrX2Fycm93XCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwib2RkXCI6XG4gICAgICBzaGFwZSA9IFwicmVjdF9sZWZ0X2ludl9hcnJvd1wiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImxlYW5fcmlnaHRcIjpcbiAgICAgIHNoYXBlID0gXCJsZWFuX3JpZ2h0XCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwibGVhbl9sZWZ0XCI6XG4gICAgICBzaGFwZSA9IFwibGVhbl9sZWZ0XCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwidHJhcGV6b2lkXCI6XG4gICAgICBzaGFwZSA9IFwidHJhcGV6b2lkXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwiaW52X3RyYXBlem9pZFwiOlxuICAgICAgc2hhcGUgPSBcImludl90cmFwZXpvaWRcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJyZWN0X2xlZnRfaW52X2Fycm93XCI6XG4gICAgICBzaGFwZSA9IFwicmVjdF9sZWZ0X2ludl9hcnJvd1wiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImNpcmNsZVwiOlxuICAgICAgc2hhcGUgPSBcImNpcmNsZVwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImVsbGlwc2VcIjpcbiAgICAgIHNoYXBlID0gXCJlbGxpcHNlXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwic3RhZGl1bVwiOlxuICAgICAgc2hhcGUgPSBcInN0YWRpdW1cIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJzdWJyb3V0aW5lXCI6XG4gICAgICBzaGFwZSA9IFwic3Vicm91dGluZVwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImN5bGluZGVyXCI6XG4gICAgICBzaGFwZSA9IFwiY3lsaW5kZXJcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJncm91cFwiOlxuICAgICAgc2hhcGUgPSBcInJlY3RcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJkb3VibGVjaXJjbGVcIjpcbiAgICAgIHNoYXBlID0gXCJkb3VibGVjaXJjbGVcIjtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBzaGFwZSA9IFwicmVjdFwiO1xuICB9XG4gIGNvbnN0IHN0eWxlcyA9IGdldFN0eWxlc0Zyb21BcnJheSh2ZXJ0ZXg/LnN0eWxlcyA/PyBbXSk7XG4gIGNvbnN0IHZlcnRleFRleHQgPSB2ZXJ0ZXgubGFiZWw7XG4gIGNvbnN0IGJvdW5kcyA9IHZlcnRleC5zaXplID8/IHsgd2lkdGg6IDAsIGhlaWdodDogMCwgeDogMCwgeTogMCB9O1xuICBjb25zdCBub2RlID0ge1xuICAgIGxhYmVsU3R5bGU6IHN0eWxlcy5sYWJlbFN0eWxlLFxuICAgIHNoYXBlLFxuICAgIGxhYmVsVGV4dDogdmVydGV4VGV4dCxcbiAgICByeDogcmFkaXVzLFxuICAgIHJ5OiByYWRpdXMsXG4gICAgY2xhc3M6IGNsYXNzU3RyLFxuICAgIHN0eWxlOiBzdHlsZXMuc3R5bGUsXG4gICAgaWQ6IHZlcnRleC5pZCxcbiAgICBkaXJlY3Rpb25zOiB2ZXJ0ZXguZGlyZWN0aW9ucyxcbiAgICB3aWR0aDogYm91bmRzLndpZHRoLFxuICAgIGhlaWdodDogYm91bmRzLmhlaWdodCxcbiAgICB4OiBib3VuZHMueCxcbiAgICB5OiBib3VuZHMueSxcbiAgICBwb3NpdGlvbmVkLFxuICAgIGludGVyc2VjdDogdm9pZCAwLFxuICAgIHR5cGU6IHZlcnRleC50eXBlLFxuICAgIHBhZGRpbmc6IHBhZGRpbmcyID8/IGdldENvbmZpZygpPy5ibG9jaz8ucGFkZGluZyA/PyAwXG4gIH07XG4gIHJldHVybiBub2RlO1xufVxuX19uYW1lKGdldE5vZGVGcm9tQmxvY2ssIFwiZ2V0Tm9kZUZyb21CbG9ja1wiKTtcbmFzeW5jIGZ1bmN0aW9uIGNhbGN1bGF0ZUJsb2NrU2l6ZShlbGVtLCBibG9jaywgZGIyKSB7XG4gIGNvbnN0IG5vZGUgPSBnZXROb2RlRnJvbUJsb2NrKGJsb2NrLCBkYjIsIGZhbHNlKTtcbiAgaWYgKG5vZGUudHlwZSA9PT0gXCJncm91cFwiKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IGNvbmZpZzIgPSBnZXRDb25maWcoKTtcbiAgY29uc3Qgbm9kZUVsID0gYXdhaXQgaW5zZXJ0Tm9kZShlbGVtLCBub2RlLCB7IGNvbmZpZzogY29uZmlnMiB9KTtcbiAgY29uc3QgYm91bmRpbmdCb3ggPSBub2RlRWwubm9kZSgpLmdldEJCb3goKTtcbiAgY29uc3Qgb2JqID0gZGIyLmdldEJsb2NrKG5vZGUuaWQpO1xuICBvYmouc2l6ZSA9IHsgd2lkdGg6IGJvdW5kaW5nQm94LndpZHRoLCBoZWlnaHQ6IGJvdW5kaW5nQm94LmhlaWdodCwgeDogMCwgeTogMCwgbm9kZTogbm9kZUVsIH07XG4gIGRiMi5zZXRCbG9jayhvYmopO1xuICBub2RlRWwucmVtb3ZlKCk7XG59XG5fX25hbWUoY2FsY3VsYXRlQmxvY2tTaXplLCBcImNhbGN1bGF0ZUJsb2NrU2l6ZVwiKTtcbmFzeW5jIGZ1bmN0aW9uIGluc2VydEJsb2NrUG9zaXRpb25lZChlbGVtLCBibG9jaywgZGIyKSB7XG4gIGNvbnN0IG5vZGUgPSBnZXROb2RlRnJvbUJsb2NrKGJsb2NrLCBkYjIsIHRydWUpO1xuICBjb25zdCBvYmogPSBkYjIuZ2V0QmxvY2sobm9kZS5pZCk7XG4gIGlmIChvYmoudHlwZSAhPT0gXCJzcGFjZVwiKSB7XG4gICAgY29uc3QgY29uZmlnMiA9IGdldENvbmZpZygpO1xuICAgIGF3YWl0IGluc2VydE5vZGUoZWxlbSwgbm9kZSwgeyBjb25maWc6IGNvbmZpZzIgfSk7XG4gICAgYmxvY2suaW50ZXJzZWN0ID0gbm9kZT8uaW50ZXJzZWN0O1xuICAgIHBvc2l0aW9uTm9kZShub2RlKTtcbiAgfVxufVxuX19uYW1lKGluc2VydEJsb2NrUG9zaXRpb25lZCwgXCJpbnNlcnRCbG9ja1Bvc2l0aW9uZWRcIik7XG5hc3luYyBmdW5jdGlvbiBwZXJmb3JtT3BlcmF0aW9ucyhlbGVtLCBibG9ja3MyLCBkYjIsIG9wZXJhdGlvbikge1xuICBmb3IgKGNvbnN0IGJsb2NrIG9mIGJsb2NrczIpIHtcbiAgICBhd2FpdCBvcGVyYXRpb24oZWxlbSwgYmxvY2ssIGRiMik7XG4gICAgaWYgKGJsb2NrLmNoaWxkcmVuKSB7XG4gICAgICBhd2FpdCBwZXJmb3JtT3BlcmF0aW9ucyhlbGVtLCBibG9jay5jaGlsZHJlbiwgZGIyLCBvcGVyYXRpb24pO1xuICAgIH1cbiAgfVxufVxuX19uYW1lKHBlcmZvcm1PcGVyYXRpb25zLCBcInBlcmZvcm1PcGVyYXRpb25zXCIpO1xuYXN5bmMgZnVuY3Rpb24gY2FsY3VsYXRlQmxvY2tTaXplcyhlbGVtLCBibG9ja3MyLCBkYjIpIHtcbiAgYXdhaXQgcGVyZm9ybU9wZXJhdGlvbnMoZWxlbSwgYmxvY2tzMiwgZGIyLCBjYWxjdWxhdGVCbG9ja1NpemUpO1xufVxuX19uYW1lKGNhbGN1bGF0ZUJsb2NrU2l6ZXMsIFwiY2FsY3VsYXRlQmxvY2tTaXplc1wiKTtcbmFzeW5jIGZ1bmN0aW9uIGluc2VydEJsb2NrcyhlbGVtLCBibG9ja3MyLCBkYjIpIHtcbiAgYXdhaXQgcGVyZm9ybU9wZXJhdGlvbnMoZWxlbSwgYmxvY2tzMiwgZGIyLCBpbnNlcnRCbG9ja1Bvc2l0aW9uZWQpO1xufVxuX19uYW1lKGluc2VydEJsb2NrcywgXCJpbnNlcnRCbG9ja3NcIik7XG5hc3luYyBmdW5jdGlvbiBpbnNlcnRFZGdlcyhlbGVtLCBlZGdlcywgYmxvY2tzMiwgZGIyLCBpZCkge1xuICBjb25zdCBnID0gbmV3IGdyYXBobGliLkdyYXBoKHtcbiAgICBtdWx0aWdyYXBoOiB0cnVlLFxuICAgIGNvbXBvdW5kOiB0cnVlXG4gIH0pO1xuICBnLnNldEdyYXBoKHtcbiAgICByYW5rZGlyOiBcIlRCXCIsXG4gICAgbm9kZXNlcDogMTAsXG4gICAgcmFua3NlcDogMTAsXG4gICAgbWFyZ2lueDogOCxcbiAgICBtYXJnaW55OiA4XG4gIH0pO1xuICBmb3IgKGNvbnN0IGJsb2NrIG9mIGJsb2NrczIpIHtcbiAgICBpZiAoYmxvY2suc2l6ZSkge1xuICAgICAgZy5zZXROb2RlKGJsb2NrLmlkLCB7XG4gICAgICAgIHdpZHRoOiBibG9jay5zaXplLndpZHRoLFxuICAgICAgICBoZWlnaHQ6IGJsb2NrLnNpemUuaGVpZ2h0LFxuICAgICAgICBpbnRlcnNlY3Q6IGJsb2NrLmludGVyc2VjdFxuICAgICAgfSk7XG4gICAgfVxuICB9XG4gIGZvciAoY29uc3QgZWRnZSBvZiBlZGdlcykge1xuICAgIGlmIChlZGdlLnN0YXJ0ICYmIGVkZ2UuZW5kKSB7XG4gICAgICBjb25zdCBzdGFydEJsb2NrID0gZGIyLmdldEJsb2NrKGVkZ2Uuc3RhcnQpO1xuICAgICAgY29uc3QgZW5kQmxvY2sgPSBkYjIuZ2V0QmxvY2soZWRnZS5lbmQpO1xuICAgICAgaWYgKHN0YXJ0QmxvY2s/LnNpemUgJiYgZW5kQmxvY2s/LnNpemUpIHtcbiAgICAgICAgY29uc3Qgc3RhcnQyID0gc3RhcnRCbG9jay5zaXplO1xuICAgICAgICBjb25zdCBlbmQyID0gZW5kQmxvY2suc2l6ZTtcbiAgICAgICAgY29uc3QgcG9pbnRzID0gW1xuICAgICAgICAgIHsgeDogc3RhcnQyLngsIHk6IHN0YXJ0Mi55IH0sXG4gICAgICAgICAgeyB4OiBzdGFydDIueCArIChlbmQyLnggLSBzdGFydDIueCkgLyAyLCB5OiBzdGFydDIueSArIChlbmQyLnkgLSBzdGFydDIueSkgLyAyIH0sXG4gICAgICAgICAgeyB4OiBlbmQyLngsIHk6IGVuZDIueSB9XG4gICAgICAgIF07XG4gICAgICAgIGluc2VydEVkZ2UoXG4gICAgICAgICAgZWxlbSxcbiAgICAgICAgICB7IHY6IGVkZ2Uuc3RhcnQsIHc6IGVkZ2UuZW5kLCBuYW1lOiBlZGdlLmlkIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgLi4uZWRnZSxcbiAgICAgICAgICAgIGFycm93VHlwZUVuZDogZWRnZS5hcnJvd1R5cGVFbmQsXG4gICAgICAgICAgICBhcnJvd1R5cGVTdGFydDogZWRnZS5hcnJvd1R5cGVTdGFydCxcbiAgICAgICAgICAgIHBvaW50cyxcbiAgICAgICAgICAgIGNsYXNzZXM6IFwiZWRnZS10aGlja25lc3Mtbm9ybWFsIGVkZ2UtcGF0dGVybi1zb2xpZCBmbG93Y2hhcnQtbGluayBMUy1hMSBMRS1iMVwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICB2b2lkIDAsXG4gICAgICAgICAgXCJibG9ja1wiLFxuICAgICAgICAgIGcsXG4gICAgICAgICAgaWRcbiAgICAgICAgKTtcbiAgICAgICAgaWYgKGVkZ2UubGFiZWwpIHtcbiAgICAgICAgICBhd2FpdCBpbnNlcnRFZGdlTGFiZWwoZWxlbSwge1xuICAgICAgICAgICAgLi4uZWRnZSxcbiAgICAgICAgICAgIGxhYmVsOiBlZGdlLmxhYmVsLFxuICAgICAgICAgICAgbGFiZWxTdHlsZTogXCJzdHJva2U6ICMzMzM7IHN0cm9rZS13aWR0aDogMS41cHg7ZmlsbDpub25lO1wiLFxuICAgICAgICAgICAgYXJyb3dUeXBlRW5kOiBlZGdlLmFycm93VHlwZUVuZCxcbiAgICAgICAgICAgIGFycm93VHlwZVN0YXJ0OiBlZGdlLmFycm93VHlwZVN0YXJ0LFxuICAgICAgICAgICAgcG9pbnRzLFxuICAgICAgICAgICAgY2xhc3NlczogXCJlZGdlLXRoaWNrbmVzcy1ub3JtYWwgZWRnZS1wYXR0ZXJuLXNvbGlkIGZsb3djaGFydC1saW5rIExTLWExIExFLWIxXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBwb3NpdGlvbkVkZ2VMYWJlbChcbiAgICAgICAgICAgIHsgLi4uZWRnZSwgeDogcG9pbnRzWzFdLngsIHk6IHBvaW50c1sxXS55IH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG9yaWdpbmFsUGF0aDogcG9pbnRzXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuX19uYW1lKGluc2VydEVkZ2VzLCBcImluc2VydEVkZ2VzXCIpO1xuXG4vLyBzcmMvZGlhZ3JhbXMvYmxvY2svYmxvY2tSZW5kZXJlci50c1xudmFyIGdldENsYXNzZXMyID0gLyogQF9fUFVSRV9fICovIF9fbmFtZShmdW5jdGlvbih0ZXh0LCBkaWFnT2JqKSB7XG4gIHJldHVybiBkaWFnT2JqLmRiLmdldENsYXNzZXMoKTtcbn0sIFwiZ2V0Q2xhc3Nlc1wiKTtcbnZhciBkcmF3ID0gLyogQF9fUFVSRV9fICovIF9fbmFtZShhc3luYyBmdW5jdGlvbih0ZXh0LCBpZCwgX3ZlcnNpb24sIGRpYWdPYmopIHtcbiAgY29uc3QgeyBzZWN1cml0eUxldmVsLCBibG9jazogY29uZiB9ID0gZ2V0Q29uZmlnKCk7XG4gIGNvbnN0IGRiMiA9IGRpYWdPYmouZGI7XG4gIGxldCBzYW5kYm94RWxlbWVudDtcbiAgaWYgKHNlY3VyaXR5TGV2ZWwgPT09IFwic2FuZGJveFwiKSB7XG4gICAgc2FuZGJveEVsZW1lbnQgPSBkM3NlbGVjdChcIiNpXCIgKyBpZCk7XG4gIH1cbiAgY29uc3Qgcm9vdCA9IHNlY3VyaXR5TGV2ZWwgPT09IFwic2FuZGJveFwiID8gZDNzZWxlY3Qoc2FuZGJveEVsZW1lbnQubm9kZXMoKVswXS5jb250ZW50RG9jdW1lbnQuYm9keSkgOiBkM3NlbGVjdChcImJvZHlcIik7XG4gIGNvbnN0IHN2ZyA9IHNlY3VyaXR5TGV2ZWwgPT09IFwic2FuZGJveFwiID8gcm9vdC5zZWxlY3QoYFtpZD1cIiR7aWR9XCJdYCkgOiBkM3NlbGVjdChgW2lkPVwiJHtpZH1cIl1gKTtcbiAgY29uc3QgbWFya2VyczIgPSBbXCJwb2ludFwiLCBcImNpcmNsZVwiLCBcImNyb3NzXCJdO1xuICBtYXJrZXJzX2RlZmF1bHQoc3ZnLCBtYXJrZXJzMiwgZGlhZ09iai50eXBlLCBpZCk7XG4gIGNvbnN0IGJsID0gZGIyLmdldEJsb2NrcygpO1xuICBjb25zdCBibEFyciA9IGRiMi5nZXRCbG9ja3NGbGF0KCk7XG4gIGNvbnN0IGVkZ2VzID0gZGIyLmdldEVkZ2VzKCk7XG4gIGNvbnN0IG5vZGVzID0gc3ZnLmluc2VydChcImdcIikuYXR0cihcImNsYXNzXCIsIFwiYmxvY2tcIik7XG4gIGF3YWl0IGNhbGN1bGF0ZUJsb2NrU2l6ZXMobm9kZXMsIGJsLCBkYjIpO1xuICBjb25zdCBib3VuZHMgPSBsYXlvdXQoZGIyKTtcbiAgYXdhaXQgaW5zZXJ0QmxvY2tzKG5vZGVzLCBibCwgZGIyKTtcbiAgYXdhaXQgaW5zZXJ0RWRnZXMobm9kZXMsIGVkZ2VzLCBibEFyciwgZGIyLCBpZCk7XG4gIGlmIChib3VuZHMpIHtcbiAgICBjb25zdCBib3VuZHMyID0gYm91bmRzO1xuICAgIGNvbnN0IG1hZ2ljRmFjdG9yID0gTWF0aC5tYXgoMSwgTWF0aC5yb3VuZCgwLjEyNSAqIChib3VuZHMyLndpZHRoIC8gYm91bmRzMi5oZWlnaHQpKSk7XG4gICAgY29uc3QgaGVpZ2h0ID0gYm91bmRzMi5oZWlnaHQgKyBtYWdpY0ZhY3RvciArIDEwO1xuICAgIGNvbnN0IHdpZHRoID0gYm91bmRzMi53aWR0aCArIDEwO1xuICAgIGNvbnN0IHsgdXNlTWF4V2lkdGggfSA9IGNvbmY7XG4gICAgY29uZmlndXJlU3ZnU2l6ZShzdmcsIGhlaWdodCwgd2lkdGgsICEhdXNlTWF4V2lkdGgpO1xuICAgIGxvZy5kZWJ1ZyhcIkhlcmUgQm91bmRzXCIsIGJvdW5kcywgYm91bmRzMik7XG4gICAgc3ZnLmF0dHIoXG4gICAgICBcInZpZXdCb3hcIixcbiAgICAgIGAke2JvdW5kczIueCAtIDV9ICR7Ym91bmRzMi55IC0gNX0gJHtib3VuZHMyLndpZHRoICsgMTB9ICR7Ym91bmRzMi5oZWlnaHQgKyAxMH1gXG4gICAgKTtcbiAgfVxufSwgXCJkcmF3XCIpO1xudmFyIGJsb2NrUmVuZGVyZXJfZGVmYXVsdCA9IHtcbiAgZHJhdyxcbiAgZ2V0Q2xhc3NlczogZ2V0Q2xhc3NlczJcbn07XG5cbi8vIHNyYy9kaWFncmFtcy9ibG9jay9ibG9ja0RpYWdyYW0udHNcbnZhciBkaWFncmFtID0ge1xuICBwYXJzZXI6IGJsb2NrX2RlZmF1bHQsXG4gIGRiOiBibG9ja0RCX2RlZmF1bHQsXG4gIHJlbmRlcmVyOiBibG9ja1JlbmRlcmVyX2RlZmF1bHQsXG4gIHN0eWxlczogc3R5bGVzX2RlZmF1bHRcbn07XG5leHBvcnQge1xuICBkaWFncmFtXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///65410\n')}}]);